rule win_suncrypt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.suncrypt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.suncrypt"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8945cc 898564ffffff 03c1 898550ffffff 33c2 c1c007 }
            // n = 6, score = 200
            //   8945cc               | mov                 dword ptr [ebp - 0x34], eax
            //   898564ffffff         | mov                 dword ptr [ebp - 0x9c], eax
            //   03c1                 | add                 eax, ecx
            //   898550ffffff         | mov                 dword ptr [ebp - 0xb0], eax
            //   33c2                 | xor                 eax, edx
            //   c1c007               | rol                 eax, 7

        $sequence_1 = { 80ff2d 0f94c0 2bd1 83c013 3bd0 0f87d5feffff 7542 }
            // n = 7, score = 200
            //   80ff2d               | cmp                 bh, 0x2d
            //   0f94c0               | sete                al
            //   2bd1                 | sub                 edx, ecx
            //   83c013               | add                 eax, 0x13
            //   3bd0                 | cmp                 edx, eax
            //   0f87d5feffff         | ja                  0xfffffedb
            //   7542                 | jne                 0x44

        $sequence_2 = { 85c9 0f842a010000 8b9d64feffff 33ff 85db 0f8e14010000 }
            // n = 6, score = 200
            //   85c9                 | test                ecx, ecx
            //   0f842a010000         | je                  0x130
            //   8b9d64feffff         | mov                 ebx, dword ptr [ebp - 0x19c]
            //   33ff                 | xor                 edi, edi
            //   85db                 | test                ebx, ebx
            //   0f8e14010000         | jle                 0x11a

        $sequence_3 = { 8b8574ffffff 0409 83f072 884581 8b8574ffffff 040a 83f06d }
            // n = 7, score = 200
            //   8b8574ffffff         | mov                 eax, dword ptr [ebp - 0x8c]
            //   0409                 | add                 al, 9
            //   83f072               | xor                 eax, 0x72
            //   884581               | mov                 byte ptr [ebp - 0x7f], al
            //   8b8574ffffff         | mov                 eax, dword ptr [ebp - 0x8c]
            //   040a                 | add                 al, 0xa
            //   83f06d               | xor                 eax, 0x6d

        $sequence_4 = { 0f104620 0f114020 0f104630 0f114030 0f104640 5e }
            // n = 6, score = 200
            //   0f104620             | movups              xmm0, xmmword ptr [esi + 0x20]
            //   0f114020             | movups              xmmword ptr [eax + 0x20], xmm0
            //   0f104630             | movups              xmm0, xmmword ptr [esi + 0x30]
            //   0f114030             | movups              xmmword ptr [eax + 0x30], xmm0
            //   0f104640             | movups              xmm0, xmmword ptr [esi + 0x40]
            //   5e                   | pop                 esi

        $sequence_5 = { c645be5c c645bf5c c645c061 c645c169 c645c270 c645c376 }
            // n = 6, score = 200
            //   c645be5c             | mov                 byte ptr [ebp - 0x42], 0x5c
            //   c645bf5c             | mov                 byte ptr [ebp - 0x41], 0x5c
            //   c645c061             | mov                 byte ptr [ebp - 0x40], 0x61
            //   c645c169             | mov                 byte ptr [ebp - 0x3f], 0x69
            //   c645c270             | mov                 byte ptr [ebp - 0x3e], 0x70
            //   c645c376             | mov                 byte ptr [ebp - 0x3d], 0x76

        $sequence_6 = { 740d 8a4601 46 84c0 75e8 33c0 }
            // n = 6, score = 200
            //   740d                 | je                  0xf
            //   8a4601               | mov                 al, byte ptr [esi + 1]
            //   46                   | inc                 esi
            //   84c0                 | test                al, al
            //   75e8                 | jne                 0xffffffea
            //   33c0                 | xor                 eax, eax

        $sequence_7 = { 83f154 884df6 8b45f0 0403 83f050 8845f7 8b45f0 }
            // n = 7, score = 200
            //   83f154               | xor                 ecx, 0x54
            //   884df6               | mov                 byte ptr [ebp - 0xa], cl
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   0403                 | add                 al, 3
            //   83f050               | xor                 eax, 0x50
            //   8845f7               | mov                 byte ptr [ebp - 9], al
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]

        $sequence_8 = { 83ec14 53 56 8b750c 57 8b4620 0fb738 }
            // n = 7, score = 200
            //   83ec14               | sub                 esp, 0x14
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8b750c               | mov                 esi, dword ptr [ebp + 0xc]
            //   57                   | push                edi
            //   8b4620               | mov                 eax, dword ptr [esi + 0x20]
            //   0fb738               | movzx               edi, word ptr [eax]

        $sequence_9 = { c6853cfeffff37 c6853dfeffff6f c6853efeffff29 c6853ffeffff23 c68540feffff2e c68541feffff28 c68542feffff6f }
            // n = 7, score = 200
            //   c6853cfeffff37       | mov                 byte ptr [ebp - 0x1c4], 0x37
            //   c6853dfeffff6f       | mov                 byte ptr [ebp - 0x1c3], 0x6f
            //   c6853efeffff29       | mov                 byte ptr [ebp - 0x1c2], 0x29
            //   c6853ffeffff23       | mov                 byte ptr [ebp - 0x1c1], 0x23
            //   c68540feffff2e       | mov                 byte ptr [ebp - 0x1c0], 0x2e
            //   c68541feffff28       | mov                 byte ptr [ebp - 0x1bf], 0x28
            //   c68542feffff6f       | mov                 byte ptr [ebp - 0x1be], 0x6f

    condition:
        7 of them and filesize < 172032
}