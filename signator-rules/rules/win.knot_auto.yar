rule win_knot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.knot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.knot"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83c40c 68???????? 8d95f8fdffff 52 e8???????? }
            // n = 5, score = 200
            //   83c40c               | add                 esp, 0xc
            //   68????????           |                     
            //   8d95f8fdffff         | lea                 edx, [ebp - 0x208]
            //   52                   | push                edx
            //   e8????????           |                     

        $sequence_1 = { 8945fc c785ecfdffff02000000 eb0f 8b85ecfdffff 83c001 8985ecfdffff 83bdecfdffff19 }
            // n = 7, score = 200
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   c785ecfdffff02000000     | mov    dword ptr [ebp - 0x214], 2
            //   eb0f                 | jmp                 0x11
            //   8b85ecfdffff         | mov                 eax, dword ptr [ebp - 0x214]
            //   83c001               | add                 eax, 1
            //   8985ecfdffff         | mov                 dword ptr [ebp - 0x214], eax
            //   83bdecfdffff19       | cmp                 dword ptr [ebp - 0x214], 0x19

        $sequence_2 = { 8b8dccfeffff 51 ff15???????? 8d95d8feffff 52 8b85d4feffff 50 }
            // n = 7, score = 200
            //   8b8dccfeffff         | mov                 ecx, dword ptr [ebp - 0x134]
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   8d95d8feffff         | lea                 edx, [ebp - 0x128]
            //   52                   | push                edx
            //   8b85d4feffff         | mov                 eax, dword ptr [ebp - 0x12c]
            //   50                   | push                eax

        $sequence_3 = { 8b85d8fdffff 50 8b8ddcfdffff 51 8b95d4fdffff 52 8b45f8 }
            // n = 7, score = 200
            //   8b85d8fdffff         | mov                 eax, dword ptr [ebp - 0x228]
            //   50                   | push                eax
            //   8b8ddcfdffff         | mov                 ecx, dword ptr [ebp - 0x224]
            //   51                   | push                ecx
            //   8b95d4fdffff         | mov                 edx, dword ptr [ebp - 0x22c]
            //   52                   | push                edx
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]

        $sequence_4 = { 85c0 7407 c685f3fdffff00 ebbe 0fb68df3fdffff 83f901 0f8501010000 }
            // n = 7, score = 200
            //   85c0                 | test                eax, eax
            //   7407                 | je                  9
            //   c685f3fdffff00       | mov                 byte ptr [ebp - 0x20d], 0
            //   ebbe                 | jmp                 0xffffffc0
            //   0fb68df3fdffff       | movzx               ecx, byte ptr [ebp - 0x20d]
            //   83f901               | cmp                 ecx, 1
            //   0f8501010000         | jne                 0x107

        $sequence_5 = { 8b8574f7ffff 50 e8???????? 83c408 68???????? }
            // n = 5, score = 200
            //   8b8574f7ffff         | mov                 eax, dword ptr [ebp - 0x88c]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   68????????           |                     

        $sequence_6 = { 8b95d8fdffff 52 8b85dcfdffff 50 8b4df0 }
            // n = 5, score = 200
            //   8b95d8fdffff         | mov                 edx, dword ptr [ebp - 0x228]
            //   52                   | push                edx
            //   8b85dcfdffff         | mov                 eax, dword ptr [ebp - 0x224]
            //   50                   | push                eax
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]

        $sequence_7 = { 8985dcfdffff 83bddcfdffff00 7507 32c0 e9???????? 8d85d8fdffff 50 }
            // n = 7, score = 200
            //   8985dcfdffff         | mov                 dword ptr [ebp - 0x224], eax
            //   83bddcfdffff00       | cmp                 dword ptr [ebp - 0x224], 0
            //   7507                 | jne                 9
            //   32c0                 | xor                 al, al
            //   e9????????           |                     
            //   8d85d8fdffff         | lea                 eax, [ebp - 0x228]
            //   50                   | push                eax

        $sequence_8 = { 8bec 81ec2c060000 68d0070000 ff15???????? 68???????? 6a00 6a00 }
            // n = 7, score = 200
            //   8bec                 | mov                 ebp, esp
            //   81ec2c060000         | sub                 esp, 0x62c
            //   68d0070000           | push                0x7d0
            //   ff15????????         |                     
            //   68????????           |                     
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_9 = { 81ec38020000 6a00 6a00 6a03 6a00 }
            // n = 5, score = 200
            //   81ec38020000         | sub                 esp, 0x238
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a03                 | push                3
            //   6a00                 | push                0

    condition:
        7 of them and filesize < 59392
}