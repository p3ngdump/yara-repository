rule win_cinobi_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.cinobi."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cinobi"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c9 c3 55 8bec 51 e8???????? 58 }
            // n = 7, score = 200
            //   c9                   | leave               
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   e8????????           |                     
            //   58                   | pop                 eax

        $sequence_1 = { 66898fbc1c0000 660fbe0e 66898fbe1c0000 660fbe4e34 66898fc01c0000 }
            // n = 5, score = 100
            //   66898fbc1c0000       | mov                 word ptr [edi + 0x1cbc], cx
            //   660fbe0e             | movsx               cx, byte ptr [esi]
            //   66898fbe1c0000       | mov                 word ptr [edi + 0x1cbe], cx
            //   660fbe4e34           | movsx               cx, byte ptr [esi + 0x34]
            //   66898fc01c0000       | mov                 word ptr [edi + 0x1cc0], cx

        $sequence_2 = { 66898f4c1c0000 660fbe4e13 66898f4e1c0000 660fbe4e42 66898f501c0000 660fbe4e05 66898f521c0000 }
            // n = 7, score = 100
            //   66898f4c1c0000       | mov                 word ptr [edi + 0x1c4c], cx
            //   660fbe4e13           | movsx               cx, byte ptr [esi + 0x13]
            //   66898f4e1c0000       | mov                 word ptr [edi + 0x1c4e], cx
            //   660fbe4e42           | movsx               cx, byte ptr [esi + 0x42]
            //   66898f501c0000       | mov                 word ptr [edi + 0x1c50], cx
            //   660fbe4e05           | movsx               cx, byte ptr [esi + 5]
            //   66898f521c0000       | mov                 word ptr [edi + 0x1c52], cx

        $sequence_3 = { 8845fe c645ff00 8b45c0 8a404f 8845c4 8b45c0 8a404b }
            // n = 7, score = 100
            //   8845fe               | mov                 byte ptr [ebp - 2], al
            //   c645ff00             | mov                 byte ptr [ebp - 1], 0
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   8a404f               | mov                 al, byte ptr [eax + 0x4f]
            //   8845c4               | mov                 byte ptr [ebp - 0x3c], al
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   8a404b               | mov                 al, byte ptr [eax + 0x4b]

        $sequence_4 = { 50 ff961b010000 6a00 57 8d87d8270000 50 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   ff961b010000         | call                dword ptr [esi + 0x11b]
            //   6a00                 | push                0
            //   57                   | push                edi
            //   8d87d8270000         | lea                 eax, [edi + 0x27d8]
            //   50                   | push                eax

        $sequence_5 = { 8b45bc 8a404b 8845db 8b45bc 8a400a }
            // n = 5, score = 100
            //   8b45bc               | mov                 eax, dword ptr [ebp - 0x44]
            //   8a404b               | mov                 al, byte ptr [eax + 0x4b]
            //   8845db               | mov                 byte ptr [ebp - 0x25], al
            //   8b45bc               | mov                 eax, dword ptr [ebp - 0x44]
            //   8a400a               | mov                 al, byte ptr [eax + 0xa]

        $sequence_6 = { 8b45c4 48 50 6a00 e8???????? 59 59 }
            // n = 7, score = 100
            //   8b45c4               | mov                 eax, dword ptr [ebp - 0x3c]
            //   48                   | dec                 eax
            //   50                   | push                eax
            //   6a00                 | push                0
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx

        $sequence_7 = { ff75a4 e8???????? 59 32c0 e9???????? ff75a8 }
            // n = 6, score = 100
            //   ff75a4               | push                dword ptr [ebp - 0x5c]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   32c0                 | xor                 al, al
            //   e9????????           |                     
            //   ff75a8               | push                dword ptr [ebp - 0x58]

        $sequence_8 = { 66898714210000 660fbe4627 66898716210000 660fbe06 66898718210000 660fbe462f }
            // n = 6, score = 100
            //   66898714210000       | mov                 word ptr [edi + 0x2114], ax
            //   660fbe4627           | movsx               ax, byte ptr [esi + 0x27]
            //   66898716210000       | mov                 word ptr [edi + 0x2116], ax
            //   660fbe06             | movsx               ax, byte ptr [esi]
            //   66898718210000       | mov                 word ptr [edi + 0x2118], ax
            //   660fbe462f           | movsx               ax, byte ptr [esi + 0x2f]

        $sequence_9 = { 8d459c 50 8b45c0 ff5063 8945bc }
            // n = 5, score = 100
            //   8d459c               | lea                 eax, [ebp - 0x64]
            //   50                   | push                eax
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   ff5063               | call                dword ptr [eax + 0x63]
            //   8945bc               | mov                 dword ptr [ebp - 0x44], eax

        $sequence_10 = { 33c0 81c3d8270000 668945ec 53 ff96a3000000 }
            // n = 5, score = 100
            //   33c0                 | xor                 eax, eax
            //   81c3d8270000         | add                 ebx, 0x27d8
            //   668945ec             | mov                 word ptr [ebp - 0x14], ax
            //   53                   | push                ebx
            //   ff96a3000000         | call                dword ptr [esi + 0xa3]

        $sequence_11 = { 6a00 ff5667 50 ff566f }
            // n = 4, score = 100
            //   6a00                 | push                0
            //   ff5667               | call                dword ptr [esi + 0x67]
            //   50                   | push                eax
            //   ff566f               | call                dword ptr [esi + 0x6f]

        $sequence_12 = { 8845ec 8b45c0 8a4052 8845ed c645ee00 }
            // n = 5, score = 100
            //   8845ec               | mov                 byte ptr [ebp - 0x14], al
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   8a4052               | mov                 al, byte ptr [eax + 0x52]
            //   8845ed               | mov                 byte ptr [ebp - 0x13], al
            //   c645ee00             | mov                 byte ptr [ebp - 0x12], 0

        $sequence_13 = { 8b85a8faffff 660fbe4010 668945a4 8b85a8faffff 660fbe4026 668945a6 8b85a8faffff }
            // n = 7, score = 100
            //   8b85a8faffff         | mov                 eax, dword ptr [ebp - 0x558]
            //   660fbe4010           | movsx               ax, byte ptr [eax + 0x10]
            //   668945a4             | mov                 word ptr [ebp - 0x5c], ax
            //   8b85a8faffff         | mov                 eax, dword ptr [ebp - 0x558]
            //   660fbe4026           | movsx               ax, byte ptr [eax + 0x26]
            //   668945a6             | mov                 word ptr [ebp - 0x5a], ax
            //   8b85a8faffff         | mov                 eax, dword ptr [ebp - 0x558]

        $sequence_14 = { ff5663 8945fc 8d864d010000 50 ff5663 }
            // n = 5, score = 100
            //   ff5663               | call                dword ptr [esi + 0x63]
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8d864d010000         | lea                 eax, [esi + 0x14d]
            //   50                   | push                eax
            //   ff5663               | call                dword ptr [esi + 0x63]

    condition:
        7 of them and filesize < 32768
}