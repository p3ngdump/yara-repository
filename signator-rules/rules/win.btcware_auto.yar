rule win_btcware_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.btcware."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.btcware"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6bc930 8b048540d04100 f644082801 7406 8b440818 5d }
            // n = 6, score = 100
            //   6bc930               | imul                ecx, ecx, 0x30
            //   8b048540d04100       | mov                 eax, dword ptr [eax*4 + 0x41d040]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7406                 | je                  8
            //   8b440818             | mov                 eax, dword ptr [eax + ecx + 0x18]
            //   5d                   | pop                 ebp

        $sequence_1 = { 8d85e4d8ffff 53 68???????? 50 }
            // n = 4, score = 100
            //   8d85e4d8ffff         | lea                 eax, [ebp - 0x271c]
            //   53                   | push                ebx
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_2 = { 50 ff15???????? 8d45e4 50 6a00 6a00 6803800000 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8d45e4               | lea                 eax, [ebp - 0x1c]
            //   50                   | push                eax
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6803800000           | push                0x8003

        $sequence_3 = { 8d85f4faffff 50 6a01 6a00 68???????? }
            // n = 5, score = 100
            //   8d85f4faffff         | lea                 eax, [ebp - 0x50c]
            //   50                   | push                eax
            //   6a01                 | push                1
            //   6a00                 | push                0
            //   68????????           |                     

        $sequence_4 = { 8b4e14 8855f3 3bc1 752f }
            // n = 4, score = 100
            //   8b4e14               | mov                 ecx, dword ptr [esi + 0x14]
            //   8855f3               | mov                 byte ptr [ebp - 0xd], dl
            //   3bc1                 | cmp                 eax, ecx
            //   752f                 | jne                 0x31

        $sequence_5 = { 8b148540d04100 8a4c1a2d f6c104 7419 }
            // n = 4, score = 100
            //   8b148540d04100       | mov                 edx, dword ptr [eax*4 + 0x41d040]
            //   8a4c1a2d             | mov                 cl, byte ptr [edx + ebx + 0x2d]
            //   f6c104               | test                cl, 4
            //   7419                 | je                  0x1b

        $sequence_6 = { 6bc930 8b048540d04100 0fb6440828 83e040 5d }
            // n = 5, score = 100
            //   6bc930               | imul                ecx, ecx, 0x30
            //   8b048540d04100       | mov                 eax, dword ptr [eax*4 + 0x41d040]
            //   0fb6440828           | movzx               eax, byte ptr [eax + ecx + 0x28]
            //   83e040               | and                 eax, 0x40
            //   5d                   | pop                 ebp

        $sequence_7 = { 8b4e08 6a00 e8???????? 83c404 83ef01 }
            // n = 5, score = 100
            //   8b4e08               | mov                 ecx, dword ptr [esi + 8]
            //   6a00                 | push                0
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   83ef01               | sub                 edi, 1

        $sequence_8 = { 0f853671ffff 8b41fc 3bc1 0f832b71ffff 2bc8 83f904 0f822071ffff }
            // n = 7, score = 100
            //   0f853671ffff         | jne                 0xffff713c
            //   8b41fc               | mov                 eax, dword ptr [ecx - 4]
            //   3bc1                 | cmp                 eax, ecx
            //   0f832b71ffff         | jae                 0xffff7131
            //   2bc8                 | sub                 ecx, eax
            //   83f904               | cmp                 ecx, 4
            //   0f822071ffff         | jb                  0xffff7126

        $sequence_9 = { 3993f2a8e017 61 f5 d2bf2ebd2261 28e7 5e 89e4 }
            // n = 7, score = 100
            //   3993f2a8e017         | cmp                 dword ptr [ebx + 0x17e0a8f2], edx
            //   61                   | popal               
            //   f5                   | cmc                 
            //   d2bf2ebd2261         | sar                 byte ptr [edi + 0x6122bd2e], cl
            //   28e7                 | sub                 bh, ah
            //   5e                   | pop                 esi
            //   89e4                 | mov                 esp, esp

    condition:
        7 of them and filesize < 458752
}