rule win_quickheal_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.quickheal."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.quickheal"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d541124 81fa00080000 7e51 83c110 8d842474020000 51 8b8c248c0a0000 }
            // n = 7, score = 100
            //   8d541124             | lea                 edx, [ecx + edx + 0x24]
            //   81fa00080000         | cmp                 edx, 0x800
            //   7e51                 | jle                 0x53
            //   83c110               | add                 ecx, 0x10
            //   8d842474020000       | lea                 eax, [esp + 0x274]
            //   51                   | push                ecx
            //   8b8c248c0a0000       | mov                 ecx, dword ptr [esp + 0xa8c]

        $sequence_1 = { 68???????? 52 ffd6 85c0 0f84ebfcffff b90a000000 33c0 }
            // n = 7, score = 100
            //   68????????           |                     
            //   52                   | push                edx
            //   ffd6                 | call                esi
            //   85c0                 | test                eax, eax
            //   0f84ebfcffff         | je                  0xfffffcf1
            //   b90a000000           | mov                 ecx, 0xa
            //   33c0                 | xor                 eax, eax

        $sequence_2 = { 50 8bcd e8???????? 83f801 0f8550010000 47 3bfe }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8bcd                 | mov                 ecx, ebp
            //   e8????????           |                     
            //   83f801               | cmp                 eax, 1
            //   0f8550010000         | jne                 0x156
            //   47                   | inc                 edi
            //   3bfe                 | cmp                 edi, esi

        $sequence_3 = { 8b5c244c 03cb 03e9 8bdd c1eb1d 8d0ced00000000 8be8 }
            // n = 7, score = 100
            //   8b5c244c             | mov                 ebx, dword ptr [esp + 0x4c]
            //   03cb                 | add                 ecx, ebx
            //   03e9                 | add                 ebp, ecx
            //   8bdd                 | mov                 ebx, ebp
            //   c1eb1d               | shr                 ebx, 0x1d
            //   8d0ced00000000       | lea                 ecx, [ebp*8]
            //   8be8                 | mov                 ebp, eax

        $sequence_4 = { 52 ff15???????? 8bf8 83ff02 7502 33ff 56 }
            // n = 7, score = 100
            //   52                   | push                edx
            //   ff15????????         |                     
            //   8bf8                 | mov                 edi, eax
            //   83ff02               | cmp                 edi, 2
            //   7502                 | jne                 4
            //   33ff                 | xor                 edi, edi
            //   56                   | push                esi

        $sequence_5 = { 56 57 8b442414 8b14a8 837a0401 0f8568010000 }
            // n = 6, score = 100
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   8b14a8               | mov                 edx, dword ptr [eax + ebp*4]
            //   837a0401             | cmp                 dword ptr [edx + 4], 1
            //   0f8568010000         | jne                 0x16e

        $sequence_6 = { 0f8568010000 bf???????? 83c9ff 33c0 f2ae f7d1 49 }
            // n = 7, score = 100
            //   0f8568010000         | jne                 0x16e
            //   bf????????           |                     
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx

        $sequence_7 = { 52 6a01 50 ff510c 85c0 0f85be020000 }
            // n = 6, score = 100
            //   52                   | push                edx
            //   6a01                 | push                1
            //   50                   | push                eax
            //   ff510c               | call                dword ptr [ecx + 0xc]
            //   85c0                 | test                eax, eax
            //   0f85be020000         | jne                 0x2c4

        $sequence_8 = { 83f840 7d06 8a440420 eb02 b03d 884303 83c304 }
            // n = 7, score = 100
            //   83f840               | cmp                 eax, 0x40
            //   7d06                 | jge                 8
            //   8a440420             | mov                 al, byte ptr [esp + eax + 0x20]
            //   eb02                 | jmp                 4
            //   b03d                 | mov                 al, 0x3d
            //   884303               | mov                 byte ptr [ebx + 3], al
            //   83c304               | add                 ebx, 4

        $sequence_9 = { c7442418ffffffff 8d4c2410 6a10 51 }
            // n = 4, score = 100
            //   c7442418ffffffff     | mov                 dword ptr [esp + 0x18], 0xffffffff
            //   8d4c2410             | lea                 ecx, [esp + 0x10]
            //   6a10                 | push                0x10
            //   51                   | push                ecx

    condition:
        7 of them and filesize < 553984
}