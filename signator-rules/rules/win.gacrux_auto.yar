rule win_gacrux_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.gacrux."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gacrux"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 49 03d7 4d 2bc7 75f1 }
            // n = 5, score = 300
            //   49                   | dec                 ecx
            //   03d7                 | add                 edx, edi
            //   4d                   | dec                 ebp
            //   2bc7                 | sub                 eax, edi
            //   75f1                 | jne                 0xfffffff3

        $sequence_1 = { 8bd0 e8???????? 85c0 7469 48 8d4ffb }
            // n = 6, score = 300
            //   8bd0                 | mov                 edx, eax
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7469                 | je                  0x6b
            //   48                   | dec                 eax
            //   8d4ffb               | lea                 ecx, [edi - 5]

        $sequence_2 = { ffd0 39442428 0f8494000000 48 }
            // n = 4, score = 300
            //   ffd0                 | call                eax
            //   39442428             | cmp                 dword ptr [esp + 0x28], eax
            //   0f8494000000         | je                  0x9a
            //   48                   | dec                 eax

        $sequence_3 = { 8b4c2460 0337 392f 75a3 e9???????? 33ff 48 }
            // n = 7, score = 300
            //   8b4c2460             | mov                 ecx, dword ptr [esp + 0x60]
            //   0337                 | add                 esi, dword ptr [edi]
            //   392f                 | cmp                 dword ptr [edi], ebp
            //   75a3                 | jne                 0xffffffa5
            //   e9????????           |                     
            //   33ff                 | xor                 edi, edi
            //   48                   | dec                 eax

        $sequence_4 = { 4d 03c1 ffca 42 8a0c0a 41 3008 }
            // n = 7, score = 300
            //   4d                   | dec                 ebp
            //   03c1                 | add                 eax, ecx
            //   ffca                 | dec                 edx
            //   42                   | inc                 edx
            //   8a0c0a               | mov                 cl, byte ptr [edx + ecx]
            //   41                   | inc                 ecx
            //   3008                 | xor                 byte ptr [eax], cl

        $sequence_5 = { 75f4 48 63c2 85d2 740a }
            // n = 5, score = 300
            //   75f4                 | jne                 0xfffffff6
            //   48                   | dec                 eax
            //   63c2                 | arpl                dx, ax
            //   85d2                 | test                edx, edx
            //   740a                 | je                  0xc

        $sequence_6 = { 0f8424010000 41 bc1c000000 41 }
            // n = 4, score = 300
            //   0f8424010000         | je                  0x12a
            //   41                   | inc                 ecx
            //   bc1c000000           | mov                 esp, 0x1c
            //   41                   | inc                 ecx

        $sequence_7 = { e8???????? 49 8b0f 33ed 41 ffc4 49 }
            // n = 7, score = 300
            //   e8????????           |                     
            //   49                   | dec                 ecx
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   33ed                 | xor                 ebp, ebp
            //   41                   | inc                 ecx
            //   ffc4                 | inc                 esp
            //   49                   | dec                 ecx

        $sequence_8 = { 8bd3 3819 740c 48 8bc7 48 }
            // n = 6, score = 300
            //   8bd3                 | mov                 edx, ebx
            //   3819                 | cmp                 byte ptr [ecx], bl
            //   740c                 | je                  0xe
            //   48                   | dec                 eax
            //   8bc7                 | mov                 eax, edi
            //   48                   | dec                 eax

        $sequence_9 = { b86c3cb853 e8???????? ffd0 39442428 0f8494000000 48 8b37 }
            // n = 7, score = 300
            //   b86c3cb853           | mov                 eax, 0x53b83c6c
            //   e8????????           |                     
            //   ffd0                 | call                eax
            //   39442428             | cmp                 dword ptr [esp + 0x28], eax
            //   0f8494000000         | je                  0x9a
            //   48                   | dec                 eax
            //   8b37                 | mov                 esi, dword ptr [edi]

    condition:
        7 of them and filesize < 122880
}