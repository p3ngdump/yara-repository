rule win_killav_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.killav."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.killav"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 037de4 8b45f8 8b55f0 8b048570ba4300 }
            // n = 4, score = 100
            //   037de4               | add                 edi, dword ptr [ebp - 0x1c]
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   8b55f0               | mov                 edx, dword ptr [ebp - 0x10]
            //   8b048570ba4300       | mov                 eax, dword ptr [eax*4 + 0x43ba70]

        $sequence_1 = { 8d45d8 c645fc09 50 8d4dd0 e8???????? }
            // n = 5, score = 100
            //   8d45d8               | lea                 eax, [ebp - 0x28]
            //   c645fc09             | mov                 byte ptr [ebp - 4], 9
            //   50                   | push                eax
            //   8d4dd0               | lea                 ecx, [ebp - 0x30]
            //   e8????????           |                     

        $sequence_2 = { 735f 8bc6 8bfe 83e03f c1ff06 6bd838 8b04bd70ba4300 }
            // n = 7, score = 100
            //   735f                 | jae                 0x61
            //   8bc6                 | mov                 eax, esi
            //   8bfe                 | mov                 edi, esi
            //   83e03f               | and                 eax, 0x3f
            //   c1ff06               | sar                 edi, 6
            //   6bd838               | imul                ebx, eax, 0x38
            //   8b04bd70ba4300       | mov                 eax, dword ptr [edi*4 + 0x43ba70]

        $sequence_3 = { 83f81f 0f8736060000 52 51 e8???????? 83c408 }
            // n = 6, score = 100
            //   83f81f               | cmp                 eax, 0x1f
            //   0f8736060000         | ja                  0x63c
            //   52                   | push                edx
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8

        $sequence_4 = { 83c0fc 83f81f 0f87f6090000 52 }
            // n = 4, score = 100
            //   83c0fc               | add                 eax, -4
            //   83f81f               | cmp                 eax, 0x1f
            //   0f87f6090000         | ja                  0x9fc
            //   52                   | push                edx

        $sequence_5 = { 7603 6a26 58 0fb60c855ed34200 }
            // n = 4, score = 100
            //   7603                 | jbe                 5
            //   6a26                 | push                0x26
            //   58                   | pop                 eax
            //   0fb60c855ed34200     | movzx               ecx, byte ptr [eax*4 + 0x42d35e]

        $sequence_6 = { 8d0d20d44200 ba1d000000 e8???????? 5a }
            // n = 4, score = 100
            //   8d0d20d44200         | lea                 ecx, [0x42d420]
            //   ba1d000000           | mov                 edx, 0x1d
            //   e8????????           |                     
            //   5a                   | pop                 edx

        $sequence_7 = { 83c028 895de4 8b5df0 894340 8b5de4 }
            // n = 5, score = 100
            //   83c028               | add                 eax, 0x28
            //   895de4               | mov                 dword ptr [ebp - 0x1c], ebx
            //   8b5df0               | mov                 ebx, dword ptr [ebp - 0x10]
            //   894340               | mov                 dword ptr [ebx + 0x40], eax
            //   8b5de4               | mov                 ebx, dword ptr [ebp - 0x1c]

        $sequence_8 = { 668945d8 e8???????? 8d45d8 c645fc25 50 }
            // n = 5, score = 100
            //   668945d8             | mov                 word ptr [ebp - 0x28], ax
            //   e8????????           |                     
            //   8d45d8               | lea                 eax, [ebp - 0x28]
            //   c645fc25             | mov                 byte ptr [ebp - 4], 0x25
            //   50                   | push                eax

        $sequence_9 = { c705????????01000000 6a04 58 6bc000 c780c4b3430002000000 }
            // n = 5, score = 100
            //   c705????????01000000     |     
            //   6a04                 | push                4
            //   58                   | pop                 eax
            //   6bc000               | imul                eax, eax, 0
            //   c780c4b3430002000000     | mov    dword ptr [eax + 0x43b3c4], 2

    condition:
        7 of them and filesize < 517120
}