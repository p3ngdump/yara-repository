rule win_bagle_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.bagle."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bagle"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b750c 8b4d10 e318 8bd0 c1ea08 }
            // n = 5, score = 300
            //   8b750c               | mov                 esi, dword ptr [ebp + 0xc]
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   e318                 | jecxz               0x1a
            //   8bd0                 | mov                 edx, eax
            //   c1ea08               | shr                 edx, 8

        $sequence_1 = { b03d f3aa 5b 5f 5e c9 }
            // n = 6, score = 300
            //   b03d                 | mov                 al, 0x3d
            //   f3aa                 | rep stosb           byte ptr es:[edi], al
            //   5b                   | pop                 ebx
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   c9                   | leave               

        $sequence_2 = { 68???????? e8???????? 6a00 68???????? 68???????? e8???????? 0bc0 }
            // n = 7, score = 300
            //   68????????           |                     
            //   e8????????           |                     
            //   6a00                 | push                0
            //   68????????           |                     
            //   68????????           |                     
            //   e8????????           |                     
            //   0bc0                 | or                  eax, eax

        $sequence_3 = { 0bc0 7426 6880000000 68???????? e8???????? 6a00 6a00 }
            // n = 7, score = 300
            //   0bc0                 | or                  eax, eax
            //   7426                 | je                  0x28
            //   6880000000           | push                0x80
            //   68????????           |                     
            //   e8????????           |                     
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_4 = { eb0b 04fc eb07 2c3e c0e002 042b aa }
            // n = 7, score = 300
            //   eb0b                 | jmp                 0xd
            //   04fc                 | add                 al, 0xfc
            //   eb07                 | jmp                 9
            //   2c3e                 | sub                 al, 0x3e
            //   c0e002               | shl                 al, 2
            //   042b                 | add                 al, 0x2b
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_5 = { 56 57 53 8b7508 8b7d0c 8b4d10 33db }
            // n = 7, score = 300
            //   56                   | push                esi
            //   57                   | push                edi
            //   53                   | push                ebx
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   33db                 | xor                 ebx, ebx

        $sequence_6 = { e8???????? 0bc0 7426 6880000000 68???????? e8???????? 6a00 }
            // n = 7, score = 300
            //   e8????????           |                     
            //   0bc0                 | or                  eax, eax
            //   7426                 | je                  0x28
            //   6880000000           | push                0x80
            //   68????????           |                     
            //   e8????????           |                     
            //   6a00                 | push                0

        $sequence_7 = { 6a00 68???????? 68???????? e8???????? 0bc0 7426 6880000000 }
            // n = 7, score = 300
            //   6a00                 | push                0
            //   68????????           |                     
            //   68????????           |                     
            //   e8????????           |                     
            //   0bc0                 | or                  eax, eax
            //   7426                 | je                  0x28
            //   6880000000           | push                0x80

        $sequence_8 = { 6a00 6a00 6a04 50 e8???????? 0bc0 }
            // n = 6, score = 300
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a04                 | push                4
            //   50                   | push                eax
            //   e8????????           |                     
            //   0bc0                 | or                  eax, eax

        $sequence_9 = { c20c00 c1c206 8bc2 243f 3c3e 7312 }
            // n = 6, score = 300
            //   c20c00               | ret                 0xc
            //   c1c206               | rol                 edx, 6
            //   8bc2                 | mov                 eax, edx
            //   243f                 | and                 al, 0x3f
            //   3c3e                 | cmp                 al, 0x3e
            //   7312                 | jae                 0x14

    condition:
        7 of them and filesize < 245760
}