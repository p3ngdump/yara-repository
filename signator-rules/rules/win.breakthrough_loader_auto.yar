rule win_breakthrough_loader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.breakthrough_loader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.breakthrough_loader"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33c0 8d3c9dc0314500 f00fb10f 8bc8 85c9 }
            // n = 5, score = 100
            //   33c0                 | xor                 eax, eax
            //   8d3c9dc0314500       | lea                 edi, [ebx*4 + 0x4531c0]
            //   f00fb10f             | lock cmpxchg        dword ptr [edi], ecx
            //   8bc8                 | mov                 ecx, eax
            //   85c9                 | test                ecx, ecx

        $sequence_1 = { 59 83f80a 7330 8a80503b4400 8b4da0 888554ffffff ffb554ffffff }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   83f80a               | cmp                 eax, 0xa
            //   7330                 | jae                 0x32
            //   8a80503b4400         | mov                 al, byte ptr [eax + 0x443b50]
            //   8b4da0               | mov                 ecx, dword ptr [ebp - 0x60]
            //   888554ffffff         | mov                 byte ptr [ebp - 0xac], al
            //   ffb554ffffff         | push                dword ptr [ebp - 0xac]

        $sequence_2 = { 83c40c 6b45e430 8945e0 8d8038154500 8945e4 803800 8bc8 }
            // n = 7, score = 100
            //   83c40c               | add                 esp, 0xc
            //   6b45e430             | imul                eax, dword ptr [ebp - 0x1c], 0x30
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax
            //   8d8038154500         | lea                 eax, [eax + 0x451538]
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   803800               | cmp                 byte ptr [eax], 0
            //   8bc8                 | mov                 ecx, eax

        $sequence_3 = { 68???????? eb50 6a40 6a00 6a02 8d45f0 50 }
            // n = 7, score = 100
            //   68????????           |                     
            //   eb50                 | jmp                 0x52
            //   6a40                 | push                0x40
            //   6a00                 | push                0
            //   6a02                 | push                2
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   50                   | push                eax

        $sequence_4 = { 8bc6 83e03f 6bc830 894de0 8b049d40354500 0fb6440828 83e001 }
            // n = 7, score = 100
            //   8bc6                 | mov                 eax, esi
            //   83e03f               | and                 eax, 0x3f
            //   6bc830               | imul                ecx, eax, 0x30
            //   894de0               | mov                 dword ptr [ebp - 0x20], ecx
            //   8b049d40354500       | mov                 eax, dword ptr [ebx*4 + 0x453540]
            //   0fb6440828           | movzx               eax, byte ptr [eax + ecx + 0x28]
            //   83e001               | and                 eax, 1

        $sequence_5 = { ff15???????? 85c0 7fc3 57 }
            // n = 4, score = 100
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7fc3                 | jg                  0xffffffc5
            //   57                   | push                edi

        $sequence_6 = { 3bfb 0f841d010000 8d4640 8945f4 8b45f8 8d75ac 837dc008 }
            // n = 7, score = 100
            //   3bfb                 | cmp                 edi, ebx
            //   0f841d010000         | je                  0x123
            //   8d4640               | lea                 eax, [esi + 0x40]
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   8d75ac               | lea                 esi, [ebp - 0x54]
            //   837dc008             | cmp                 dword ptr [ebp - 0x40], 8

        $sequence_7 = { 85c0 7fc3 57 ff15???????? }
            // n = 4, score = 100
            //   85c0                 | test                eax, eax
            //   7fc3                 | jg                  0xffffffc5
            //   57                   | push                edi
            //   ff15????????         |                     

        $sequence_8 = { 8b049540354500 c644082801 897de4 c745fcfeffffff e8???????? 8bc7 e8???????? }
            // n = 7, score = 100
            //   8b049540354500       | mov                 eax, dword ptr [edx*4 + 0x453540]
            //   c644082801           | mov                 byte ptr [eax + ecx + 0x28], 1
            //   897de4               | mov                 dword ptr [ebp - 0x1c], edi
            //   c745fcfeffffff       | mov                 dword ptr [ebp - 4], 0xfffffffe
            //   e8????????           |                     
            //   8bc7                 | mov                 eax, edi
            //   e8????????           |                     

        $sequence_9 = { ff4594 eb15 85c0 7504 85c9 740d 8a80ac244400 }
            // n = 7, score = 100
            //   ff4594               | inc                 dword ptr [ebp - 0x6c]
            //   eb15                 | jmp                 0x17
            //   85c0                 | test                eax, eax
            //   7504                 | jne                 6
            //   85c9                 | test                ecx, ecx
            //   740d                 | je                  0xf
            //   8a80ac244400         | mov                 al, byte ptr [eax + 0x4424ac]

    condition:
        7 of them and filesize < 753664
}