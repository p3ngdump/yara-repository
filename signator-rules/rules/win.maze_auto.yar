rule win_maze_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.maze."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.maze"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 53 57 56 83ec10 8b4510 8b4d0c }
            // n = 6, score = 2400
            //   53                   | push                ebx
            //   57                   | push                edi
            //   56                   | push                esi
            //   83ec10               | sub                 esp, 0x10
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]

        $sequence_1 = { 8945f0 c745f000000000 8b45f0 83c410 5e 5f 5b }
            // n = 7, score = 2400
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   c745f000000000       | mov                 dword ptr [ebp - 0x10], 0
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   83c410               | add                 esp, 0x10
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi
            //   5b                   | pop                 ebx

        $sequence_2 = { 60 8b7d08 8b4d10 8b450c f3aa 61 8945f0 }
            // n = 7, score = 2400
            //   60                   | pushal              
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   f3aa                 | rep stosb           byte ptr es:[edi], al
            //   61                   | popal               
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax

        $sequence_3 = { 894de8 8955e4 7509 c745f000000000 eb17 60 }
            // n = 6, score = 2400
            //   894de8               | mov                 dword ptr [ebp - 0x18], ecx
            //   8955e4               | mov                 dword ptr [ebp - 0x1c], edx
            //   7509                 | jne                 0xb
            //   c745f000000000       | mov                 dword ptr [ebp - 0x10], 0
            //   eb17                 | jmp                 0x19
            //   60                   | pushal              

        $sequence_4 = { 83ec10 8b4510 8b4d0c 8b5508 837d0800 8945ec 894de8 }
            // n = 7, score = 2400
            //   83ec10               | sub                 esp, 0x10
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   837d0800             | cmp                 dword ptr [ebp + 8], 0
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   894de8               | mov                 dword ptr [ebp - 0x18], ecx

        $sequence_5 = { 89c7 8b442438 89d1 f7e5 89c5 8b442450 }
            // n = 6, score = 2300
            //   89c7                 | mov                 edi, eax
            //   8b442438             | mov                 eax, dword ptr [esp + 0x38]
            //   89d1                 | mov                 ecx, edx
            //   f7e5                 | mul                 ebp
            //   89c5                 | mov                 ebp, eax
            //   8b442450             | mov                 eax, dword ptr [esp + 0x50]

        $sequence_6 = { 89c7 8b442438 89d3 f7e5 }
            // n = 4, score = 2300
            //   89c7                 | mov                 edi, eax
            //   8b442438             | mov                 eax, dword ptr [esp + 0x38]
            //   89d3                 | mov                 ebx, edx
            //   f7e5                 | mul                 ebp

        $sequence_7 = { 89c7 8b442448 c1eb0b c1ef13 }
            // n = 4, score = 2300
            //   89c7                 | mov                 edi, eax
            //   8b442448             | mov                 eax, dword ptr [esp + 0x48]
            //   c1eb0b               | shr                 ebx, 0xb
            //   c1ef13               | shr                 edi, 0x13

        $sequence_8 = { 41 41 41 41 41 41 }
            // n = 6, score = 1600
            //   41                   | inc                 ecx
            //   41                   | inc                 ecx
            //   41                   | inc                 ecx
            //   41                   | inc                 ecx
            //   41                   | inc                 ecx
            //   41                   | inc                 ecx

        $sequence_9 = { 56 be???????? 56 6a00 6801001200 ff15???????? 85c0 }
            // n = 7, score = 1400
            //   56                   | push                esi
            //   be????????           |                     
            //   56                   | push                esi
            //   6a00                 | push                0
            //   6801001200           | push                0x120001
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_10 = { 50 8d45f0 64a100000000 8bb530010000 8975d4 }
            // n = 5, score = 1400
            //   50                   | push                eax
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   64a100000000         | mov                 eax, dword ptr fs:[0]
            //   8bb530010000         | mov                 esi, dword ptr [ebp + 0x130]
            //   8975d4               | mov                 dword ptr [ebp - 0x2c], esi

        $sequence_11 = { 8b5508 8b840a40100000 c1e008 b904000000 6bd10f }
            // n = 5, score = 100
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8b840a40100000       | mov                 eax, dword ptr [edx + ecx + 0x1040]
            //   c1e008               | shl                 eax, 8
            //   b904000000           | mov                 ecx, 4
            //   6bd10f               | imul                edx, ecx, 0xf

        $sequence_12 = { 8b940140100000 c1e208 b804000000 6bc809 8b4508 8b8c0840100000 c1e918 }
            // n = 7, score = 100
            //   8b940140100000       | mov                 edx, dword ptr [ecx + eax + 0x1040]
            //   c1e208               | shl                 edx, 8
            //   b804000000           | mov                 eax, 4
            //   6bc809               | imul                ecx, eax, 9
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8b8c0840100000       | mov                 ecx, dword ptr [eax + ecx + 0x1040]
            //   c1e918               | shr                 ecx, 0x18

        $sequence_13 = { 8b5508 8b840200100000 c1e80a 0bc8 894ddc }
            // n = 5, score = 100
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8b840200100000       | mov                 eax, dword ptr [edx + eax + 0x1000]
            //   c1e80a               | shr                 eax, 0xa
            //   0bc8                 | or                  ecx, eax
            //   894ddc               | mov                 dword ptr [ebp - 0x24], ecx

        $sequence_14 = { c1ea17 0bca 894db8 b804000000 6bc800 8b5508 8b840a00100000 }
            // n = 7, score = 100
            //   c1ea17               | shr                 edx, 0x17
            //   0bca                 | or                  ecx, edx
            //   894db8               | mov                 dword ptr [ebp - 0x48], ecx
            //   b804000000           | mov                 eax, 4
            //   6bc800               | imul                ecx, eax, 0
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8b840a00100000       | mov                 eax, dword ptr [edx + ecx + 0x1000]

        $sequence_15 = { 8b85b0fdffff 3385acfdffff 0385a8fdffff 8b4dfc 8b5508 03848a34080000 }
            // n = 6, score = 100
            //   8b85b0fdffff         | mov                 eax, dword ptr [ebp - 0x250]
            //   3385acfdffff         | xor                 eax, dword ptr [ebp - 0x254]
            //   0385a8fdffff         | add                 eax, dword ptr [ebp - 0x258]
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   03848a34080000       | add                 eax, dword ptr [edx + ecx*4 + 0x834]

        $sequence_16 = { 1bc0 23c1 83c008 5d c3 8b04c564a04100 5d }
            // n = 7, score = 100
            //   1bc0                 | sbb                 eax, eax
            //   23c1                 | and                 eax, ecx
            //   83c008               | add                 eax, 8
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b04c564a04100       | mov                 eax, dword ptr [eax*8 + 0x41a064]
            //   5d                   | pop                 ebp

        $sequence_17 = { c1e219 8b45fc 8b7508 8b4486c4 c1e807 }
            // n = 5, score = 100
            //   c1e219               | shl                 edx, 0x19
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8b4486c4             | mov                 eax, dword ptr [esi + eax*4 - 0x3c]
            //   c1e807               | shr                 eax, 7

        $sequence_18 = { 0fb685cbfdffff 0fb68dcafdffff 8b5508 8b0482 8b5508 03848a00040000 8985ccfdffff }
            // n = 7, score = 100
            //   0fb685cbfdffff       | movzx               eax, byte ptr [ebp - 0x235]
            //   0fb68dcafdffff       | movzx               ecx, byte ptr [ebp - 0x236]
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8b0482               | mov                 eax, dword ptr [edx + eax*4]
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   03848a00040000       | add                 eax, dword ptr [edx + ecx*4 + 0x400]
            //   8985ccfdffff         | mov                 dword ptr [ebp - 0x234], eax

    condition:
        7 of them and filesize < 2318336
}