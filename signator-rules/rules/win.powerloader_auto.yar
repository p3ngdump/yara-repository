rule win_powerloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.powerloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.powerloader"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33d2 c605????????00 e8???????? 0fb6c3 }
            // n = 4, score = 300
            //   33d2                 | mov                 dword ptr [esp + 0x30], ecx
            //   c605????????00       |                     
            //   e8????????           |                     
            //   0fb6c3               | inc                 esp

        $sequence_1 = { 8bd0 e8???????? 85ff 740c }
            // n = 4, score = 300
            //   8bd0                 | dec                 eax
            //   e8????????           |                     
            //   85ff                 | mov                 ecx, ebp
            //   740c                 | dec                 eax

        $sequence_2 = { e8???????? 0fb6d8 84c0 7514 ff15???????? }
            // n = 5, score = 300
            //   e8????????           |                     
            //   0fb6d8               | mov                 edi, dword ptr [esp + 0x30]
            //   84c0                 | dec                 eax
            //   7514                 | lea                 edx, [eax + eax*4]
            //   ff15????????         |                     

        $sequence_3 = { ff15???????? 83f803 7405 83f802 7530 }
            // n = 5, score = 300
            //   ff15????????         |                     
            //   83f803               | mov                 byte ptr [esp + ecx + 0x1f], al
            //   7405                 | test                al, al
            //   83f802               | jne                 0xe42
            //   7530                 | dec                 eax

        $sequence_4 = { e8???????? 0fb6d8 84c0 7514 }
            // n = 4, score = 300
            //   e8????????           |                     
            //   0fb6d8               | lea                 ecx, [0x1266]
            //   84c0                 | dec                 esp
            //   7514                 | lea                 eax, [esp + 0x448]

        $sequence_5 = { e8???????? eb22 33c9 66666666660f1f840000000000 0fb6840c30010000 }
            // n = 5, score = 300
            //   e8????????           |                     
            //   eb22                 | lea                 edx, [esp + 0x78]
            //   33c9                 | dec                 eax
            //   66666666660f1f840000000000     | lea    ecx, [0x120b]
            //   0fb6840c30010000     | inc                 ecx

        $sequence_6 = { 33d2 ff15???????? 83f81f 7323 }
            // n = 4, score = 300
            //   33d2                 | xor                 eax, eax
            //   ff15????????         |                     
            //   83f81f               | dec                 ecx
            //   7323                 | mov                 ebx, eax

        $sequence_7 = { ff15???????? 83f81f 7323 ff15???????? }
            // n = 4, score = 300
            //   ff15????????         |                     
            //   83f81f               | test                ecx, ecx
            //   7323                 | je                  0xe56
            //   ff15????????         |                     

        $sequence_8 = { e8???????? eb22 33c9 66666666660f1f840000000000 }
            // n = 4, score = 300
            //   e8????????           |                     
            //   eb22                 | shl                 ebx, 9
            //   33c9                 | dec                 eax
            //   66666666660f1f840000000000     | lea    eax, [ebx + esi + 8]

        $sequence_9 = { eb22 33c9 66666666660f1f840000000000 0fb6840c30010000 }
            // n = 4, score = 300
            //   eb22                 | dec                 esp
            //   33c9                 | cmp                 word ptr [eax + 4], dx
            //   66666666660f1f840000000000     | dec    eax
            //   0fb6840c30010000     | lea                 ecx, [0x21c9]

    condition:
        7 of them and filesize < 155648
}