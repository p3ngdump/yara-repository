rule win_flawedgrace_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.flawedgrace."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.flawedgrace"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0fb6c0 331485e09b4500 0fb6c1 c1e918 331485e0934500 8b1c8de09f4500 8b45f4 }
            // n = 7, score = 200
            //   0fb6c0               | movzx               eax, al
            //   331485e09b4500       | xor                 edx, dword ptr [eax*4 + 0x459be0]
            //   0fb6c1               | movzx               eax, cl
            //   c1e918               | shr                 ecx, 0x18
            //   331485e0934500       | xor                 edx, dword ptr [eax*4 + 0x4593e0]
            //   8b1c8de09f4500       | mov                 ebx, dword ptr [ecx*4 + 0x459fe0]
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]

        $sequence_1 = { c68588c8ffff0f c68589c8ffff00 c6858ac8ffff00 c6858bc8ffff48 c6858cc8ffff83 c6858dc8ffffc4 c6858ec8ffff20 }
            // n = 7, score = 200
            //   c68588c8ffff0f       | mov                 byte ptr [ebp - 0x3778], 0xf
            //   c68589c8ffff00       | mov                 byte ptr [ebp - 0x3777], 0
            //   c6858ac8ffff00       | mov                 byte ptr [ebp - 0x3776], 0
            //   c6858bc8ffff48       | mov                 byte ptr [ebp - 0x3775], 0x48
            //   c6858cc8ffff83       | mov                 byte ptr [ebp - 0x3774], 0x83
            //   c6858dc8ffffc4       | mov                 byte ptr [ebp - 0x3773], 0xc4
            //   c6858ec8ffff20       | mov                 byte ptr [ebp - 0x3772], 0x20

        $sequence_2 = { 51 52 e8???????? 83c40c ff7594 57 57 }
            // n = 7, score = 200
            //   51                   | push                ecx
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   ff7594               | push                dword ptr [ebp - 0x6c]
            //   57                   | push                edi
            //   57                   | push                edi

        $sequence_3 = { c685bde2ffff00 c685bee2ffff00 c685bfe2ffff00 c685c0e2ffff00 c685c1e2ffff00 c685c2e2ffff00 c685c3e2ffff00 }
            // n = 7, score = 200
            //   c685bde2ffff00       | mov                 byte ptr [ebp - 0x1d43], 0
            //   c685bee2ffff00       | mov                 byte ptr [ebp - 0x1d42], 0
            //   c685bfe2ffff00       | mov                 byte ptr [ebp - 0x1d41], 0
            //   c685c0e2ffff00       | mov                 byte ptr [ebp - 0x1d40], 0
            //   c685c1e2ffff00       | mov                 byte ptr [ebp - 0x1d3f], 0
            //   c685c2e2ffff00       | mov                 byte ptr [ebp - 0x1d3e], 0
            //   c685c3e2ffff00       | mov                 byte ptr [ebp - 0x1d3d], 0

        $sequence_4 = { c685ffd9ffff00 c68500daffff00 c68501daffff00 c68502daffff00 c68503daffff00 c68504daffffe2 c68505daffff31 }
            // n = 7, score = 200
            //   c685ffd9ffff00       | mov                 byte ptr [ebp - 0x2601], 0
            //   c68500daffff00       | mov                 byte ptr [ebp - 0x2600], 0
            //   c68501daffff00       | mov                 byte ptr [ebp - 0x25ff], 0
            //   c68502daffff00       | mov                 byte ptr [ebp - 0x25fe], 0
            //   c68503daffff00       | mov                 byte ptr [ebp - 0x25fd], 0
            //   c68504daffffe2       | mov                 byte ptr [ebp - 0x25fc], 0xe2
            //   c68505daffff31       | mov                 byte ptr [ebp - 0x25fb], 0x31

        $sequence_5 = { 85c0 740d 50 ff7514 56 e8???????? }
            // n = 6, score = 200
            //   85c0                 | test                eax, eax
            //   740d                 | je                  0xf
            //   50                   | push                eax
            //   ff7514               | push                dword ptr [ebp + 0x14]
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_6 = { c685efe0ffff49 c685f0e0ffff52 c685f1e0ffff65 c685f2e0ffff67 c685f3e0ffff69 c685f4e0ffff73 c685f5e0ffff74 }
            // n = 7, score = 200
            //   c685efe0ffff49       | mov                 byte ptr [ebp - 0x1f11], 0x49
            //   c685f0e0ffff52       | mov                 byte ptr [ebp - 0x1f10], 0x52
            //   c685f1e0ffff65       | mov                 byte ptr [ebp - 0x1f0f], 0x65
            //   c685f2e0ffff67       | mov                 byte ptr [ebp - 0x1f0e], 0x67
            //   c685f3e0ffff69       | mov                 byte ptr [ebp - 0x1f0d], 0x69
            //   c685f4e0ffff73       | mov                 byte ptr [ebp - 0x1f0c], 0x73
            //   c685f5e0ffff74       | mov                 byte ptr [ebp - 0x1f0b], 0x74

        $sequence_7 = { e8???????? eb02 33ff 8b5df8 53 ffd6 85ff }
            // n = 7, score = 200
            //   e8????????           |                     
            //   eb02                 | jmp                 4
            //   33ff                 | xor                 edi, edi
            //   8b5df8               | mov                 ebx, dword ptr [ebp - 8]
            //   53                   | push                ebx
            //   ffd6                 | call                esi
            //   85ff                 | test                edi, edi

        $sequence_8 = { c685eed7ffffff c685efd7ffff25 c685f0d7ffff50 c685f1d7ffff0e c685f2d7ffff00 c685f3d7ffff00 c685f4d7ffffff }
            // n = 7, score = 200
            //   c685eed7ffffff       | mov                 byte ptr [ebp - 0x2812], 0xff
            //   c685efd7ffff25       | mov                 byte ptr [ebp - 0x2811], 0x25
            //   c685f0d7ffff50       | mov                 byte ptr [ebp - 0x2810], 0x50
            //   c685f1d7ffff0e       | mov                 byte ptr [ebp - 0x280f], 0xe
            //   c685f2d7ffff00       | mov                 byte ptr [ebp - 0x280e], 0
            //   c685f3d7ffff00       | mov                 byte ptr [ebp - 0x280d], 0
            //   c685f4d7ffffff       | mov                 byte ptr [ebp - 0x280c], 0xff

        $sequence_9 = { ff75e4 e8???????? 8b45e0 8bce 894648 c745fcffffffff 8b45ec }
            // n = 7, score = 200
            //   ff75e4               | push                dword ptr [ebp - 0x1c]
            //   e8????????           |                     
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   8bce                 | mov                 ecx, esi
            //   894648               | mov                 dword ptr [esi + 0x48], eax
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]

    condition:
        7 of them and filesize < 966656
}