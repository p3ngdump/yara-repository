rule win_duqu_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.duqu."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.duqu"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85c0 0f843a020000 ba860abfae 8bcb e8???????? }
            // n = 5, score = 400
            //   85c0                 | test                eax, eax
            //   0f843a020000         | je                  0x240
            //   ba860abfae           | mov                 edx, 0xaebf0a86
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     

        $sequence_1 = { 894650 ba0ded3515 8bcb e8???????? ba0b7bb6ba }
            // n = 5, score = 400
            //   894650               | mov                 dword ptr [esi + 0x50], eax
            //   ba0ded3515           | mov                 edx, 0x1535ed0d
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     
            //   ba0b7bb6ba           | mov                 edx, 0xbab67b0b

        $sequence_2 = { 05270ca208 0fafd0 0fb703 33d1 6685c0 }
            // n = 5, score = 400
            //   05270ca208           | add                 eax, 0x8a20c27
            //   0fafd0               | imul                edx, eax
            //   0fb703               | movzx               eax, word ptr [ebx]
            //   33d1                 | xor                 edx, ecx
            //   6685c0               | test                ax, ax

        $sequence_3 = { ba10ee27d3 8bcf e8???????? 894624 }
            // n = 4, score = 400
            //   ba10ee27d3           | mov                 edx, 0xd327ee10
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   894624               | mov                 dword ptr [esi + 0x24], eax

        $sequence_4 = { 8bc1 0fafc9 83e007 c1e009 }
            // n = 4, score = 400
            //   8bc1                 | mov                 eax, ecx
            //   0fafc9               | imul                ecx, ecx
            //   83e007               | and                 eax, 7
            //   c1e009               | shl                 eax, 9

        $sequence_5 = { e8???????? bf???????? 898688000000 bab82b05c9 8bcf }
            // n = 5, score = 400
            //   e8????????           |                     
            //   bf????????           |                     
            //   898688000000         | mov                 dword ptr [esi + 0x88], eax
            //   bab82b05c9           | mov                 edx, 0xc9052bb8
            //   8bcf                 | mov                 ecx, edi

        $sequence_6 = { 46 8bd8 4a 8a06 84c0 75da }
            // n = 6, score = 400
            //   46                   | inc                 esi
            //   8bd8                 | mov                 ebx, eax
            //   4a                   | dec                 edx
            //   8a06                 | mov                 al, byte ptr [esi]
            //   84c0                 | test                al, al
            //   75da                 | jne                 0xffffffdc

        $sequence_7 = { 56 51 8bf2 e8???????? }
            // n = 4, score = 400
            //   56                   | push                esi
            //   51                   | push                ecx
            //   8bf2                 | mov                 esi, edx
            //   e8????????           |                     

        $sequence_8 = { ff15???????? 83bfd400000000 8987d0000000 740b 85c0 }
            // n = 5, score = 400
            //   ff15????????         |                     
            //   83bfd400000000       | cmp                 dword ptr [edi + 0xd4], 0
            //   8987d0000000         | mov                 dword ptr [edi + 0xd0], eax
            //   740b                 | je                  0xd
            //   85c0                 | test                eax, eax

        $sequence_9 = { 85c0 7465 e8???????? 85c0 }
            // n = 4, score = 400
            //   85c0                 | test                eax, eax
            //   7465                 | je                  0x67
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_10 = { 8bd9 c744241000000000 ffd6 6a4f }
            // n = 4, score = 200
            //   8bd9                 | mov                 ebx, ecx
            //   c744241000000000     | mov                 dword ptr [esp + 0x10], 0
            //   ffd6                 | call                esi
            //   6a4f                 | push                0x4f

        $sequence_11 = { 8bd9 be???????? 57 8bce e8???????? bf???????? }
            // n = 6, score = 200
            //   8bd9                 | mov                 ebx, ecx
            //   be????????           |                     
            //   57                   | push                edi
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   bf????????           |                     

        $sequence_12 = { 8bda 3bde 57 895c240c }
            // n = 4, score = 200
            //   8bda                 | mov                 ebx, edx
            //   3bde                 | cmp                 ebx, esi
            //   57                   | push                edi
            //   895c240c             | mov                 dword ptr [esp + 0xc], ebx

        $sequence_13 = { 8bda c1eb18 33df c1e208 33149d78e10010 }
            // n = 5, score = 200
            //   8bda                 | mov                 ebx, edx
            //   c1eb18               | shr                 ebx, 0x18
            //   33df                 | xor                 ebx, edi
            //   c1e208               | shl                 edx, 8
            //   33149d78e10010       | xor                 edx, dword ptr [ebx*4 + 0x1000e178]

        $sequence_14 = { 8bd9 e8???????? 85c0 7420 }
            // n = 4, score = 200
            //   8bd9                 | mov                 ebx, ecx
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7420                 | je                  0x22

        $sequence_15 = { 8bda ff45f8 83c608 397df8 }
            // n = 4, score = 200
            //   8bda                 | mov                 ebx, edx
            //   ff45f8               | inc                 dword ptr [ebp - 8]
            //   83c608               | add                 esi, 8
            //   397df8               | cmp                 dword ptr [ebp - 8], edi

    condition:
        7 of them and filesize < 18759680
}