rule win_emdivi_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.emdivi."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.emdivi"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 837d0802 7304 b03d eb0e }
            // n = 4, score = 300
            //   837d0802             | cmp                 dword ptr [ebp + 8], 2
            //   7304                 | jae                 6
            //   b03d                 | mov                 al, 0x3d
            //   eb0e                 | jmp                 0x10

        $sequence_1 = { e8???????? 0ad8 59 881f }
            // n = 4, score = 300
            //   e8????????           |                     
            //   0ad8                 | or                  bl, al
            //   59                   | pop                 ecx
            //   881f                 | mov                 byte ptr [edi], bl

        $sequence_2 = { 8d7e44 6a08 5a 8bc7 8d4df4 }
            // n = 5, score = 300
            //   8d7e44               | lea                 edi, [esi + 0x44]
            //   6a08                 | push                8
            //   5a                   | pop                 edx
            //   8bc7                 | mov                 eax, edi
            //   8d4df4               | lea                 ecx, [ebp - 0xc]

        $sequence_3 = { 8b4df0 8b11 50 51 ff521c }
            // n = 5, score = 300
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   ff521c               | call                dword ptr [edx + 0x1c]

        $sequence_4 = { 8bec 83ec18 53 56 57 8bf8 83ff01 }
            // n = 7, score = 300
            //   8bec                 | mov                 ebp, esp
            //   83ec18               | sub                 esp, 0x18
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   8bf8                 | mov                 edi, eax
            //   83ff01               | cmp                 edi, 1

        $sequence_5 = { eb03 8975fc 3975fc 74cb 56 56 }
            // n = 6, score = 300
            //   eb03                 | jmp                 5
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   3975fc               | cmp                 dword ptr [ebp - 4], esi
            //   74cb                 | je                  0xffffffcd
            //   56                   | push                esi
            //   56                   | push                esi

        $sequence_6 = { 723b 53 ff7508 8d443001 50 e8???????? 83c40c }
            // n = 7, score = 300
            //   723b                 | jb                  0x3d
            //   53                   | push                ebx
            //   ff7508               | push                dword ptr [ebp + 8]
            //   8d443001             | lea                 eax, [eax + esi + 1]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_7 = { 8bc6 c1e002 33c7 c1e304 }
            // n = 4, score = 300
            //   8bc6                 | mov                 eax, esi
            //   c1e002               | shl                 eax, 2
            //   33c7                 | xor                 eax, edi
            //   c1e304               | shl                 ebx, 4

        $sequence_8 = { ab ab c60601 5f }
            // n = 4, score = 300
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   c60601               | mov                 byte ptr [esi], 1
            //   5f                   | pop                 edi

        $sequence_9 = { e9???????? e8???????? 8945e4 895df0 }
            // n = 4, score = 300
            //   e9????????           |                     
            //   e8????????           |                     
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   895df0               | mov                 dword ptr [ebp - 0x10], ebx

    condition:
        7 of them and filesize < 581632
}