rule win_caddywiper_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.caddywiper."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.caddywiper"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c68502f8ffff6f c68503f8ffff73 c68504f8ffff65 c68505f8ffff48 c68506f8ffff61 c68507f8ffff6e }
            // n = 6, score = 100
            //   c68502f8ffff6f       | mov                 byte ptr [ebp - 0x7fe], 0x6f
            //   c68503f8ffff73       | mov                 byte ptr [ebp - 0x7fd], 0x73
            //   c68504f8ffff65       | mov                 byte ptr [ebp - 0x7fc], 0x65
            //   c68505f8ffff48       | mov                 byte ptr [ebp - 0x7fb], 0x48
            //   c68506f8ffff61       | mov                 byte ptr [ebp - 0x7fa], 0x61
            //   c68507f8ffff6e       | mov                 byte ptr [ebp - 0x7f9], 0x6e

        $sequence_1 = { c685b6fbffff65 c685b7fbffff00 c685b8fbffff72 c685b9fbffff00 }
            // n = 4, score = 100
            //   c685b6fbffff65       | mov                 byte ptr [ebp - 0x44a], 0x65
            //   c685b7fbffff00       | mov                 byte ptr [ebp - 0x449], 0
            //   c685b8fbffff72       | mov                 byte ptr [ebp - 0x448], 0x72
            //   c685b9fbffff00       | mov                 byte ptr [ebp - 0x447], 0

        $sequence_2 = { 51 8d55dc 52 e8???????? 83c408 8945f8 }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   8d55dc               | lea                 edx, [ebp - 0x24]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8945f8               | mov                 dword ptr [ebp - 8], eax

        $sequence_3 = { c745d000000000 c68574ffffff61 c68575ffffff00 c68576ffffff64 c68577ffffff00 }
            // n = 5, score = 100
            //   c745d000000000       | mov                 dword ptr [ebp - 0x30], 0
            //   c68574ffffff61       | mov                 byte ptr [ebp - 0x8c], 0x61
            //   c68575ffffff00       | mov                 byte ptr [ebp - 0x8b], 0
            //   c68576ffffff64       | mov                 byte ptr [ebp - 0x8a], 0x64
            //   c68577ffffff00       | mov                 byte ptr [ebp - 0x89], 0

        $sequence_4 = { 8b45fc 8945f8 8b4df8 8a11 8855f7 }
            // n = 5, score = 100
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   8a11                 | mov                 dl, byte ptr [ecx]
            //   8855f7               | mov                 byte ptr [ebp - 9], dl

        $sequence_5 = { c645ee6c c645ef00 c645f033 c645f100 c645f232 }
            // n = 5, score = 100
            //   c645ee6c             | mov                 byte ptr [ebp - 0x12], 0x6c
            //   c645ef00             | mov                 byte ptr [ebp - 0x11], 0
            //   c645f033             | mov                 byte ptr [ebp - 0x10], 0x33
            //   c645f100             | mov                 byte ptr [ebp - 0xf], 0
            //   c645f232             | mov                 byte ptr [ebp - 0xe], 0x32

        $sequence_6 = { c685aafbffff6c c685abfbffff6c c685acfbffff6f c685adfbffff63 c685aefbffff00 }
            // n = 5, score = 100
            //   c685aafbffff6c       | mov                 byte ptr [ebp - 0x456], 0x6c
            //   c685abfbffff6c       | mov                 byte ptr [ebp - 0x455], 0x6c
            //   c685acfbffff6f       | mov                 byte ptr [ebp - 0x454], 0x6f
            //   c685adfbffff63       | mov                 byte ptr [ebp - 0x453], 0x63
            //   c685aefbffff00       | mov                 byte ptr [ebp - 0x452], 0

        $sequence_7 = { 8b85a4f1ffff 50 6a40 ff95b8f1ffff 8985b0f1ffff 8b8da4f1ffff }
            // n = 6, score = 100
            //   8b85a4f1ffff         | mov                 eax, dword ptr [ebp - 0xe5c]
            //   50                   | push                eax
            //   6a40                 | push                0x40
            //   ff95b8f1ffff         | call                dword ptr [ebp - 0xe48]
            //   8985b0f1ffff         | mov                 dword ptr [ebp - 0xe50], eax
            //   8b8da4f1ffff         | mov                 ecx, dword ptr [ebp - 0xe5c]

        $sequence_8 = { c68543ffffff00 8d8d38ffffff 51 8d55b8 52 e8???????? 83c408 }
            // n = 7, score = 100
            //   c68543ffffff00       | mov                 byte ptr [ebp - 0xbd], 0
            //   8d8d38ffffff         | lea                 ecx, [ebp - 0xc8]
            //   51                   | push                ecx
            //   8d55b8               | lea                 edx, [ebp - 0x48]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8

        $sequence_9 = { c685c4fbffff2e c685c5fbffff00 c685c6fbffff64 c685c7fbffff00 c685c8fbffff6c c685c9fbffff00 c685cafbffff6c }
            // n = 7, score = 100
            //   c685c4fbffff2e       | mov                 byte ptr [ebp - 0x43c], 0x2e
            //   c685c5fbffff00       | mov                 byte ptr [ebp - 0x43b], 0
            //   c685c6fbffff64       | mov                 byte ptr [ebp - 0x43a], 0x64
            //   c685c7fbffff00       | mov                 byte ptr [ebp - 0x439], 0
            //   c685c8fbffff6c       | mov                 byte ptr [ebp - 0x438], 0x6c
            //   c685c9fbffff00       | mov                 byte ptr [ebp - 0x437], 0
            //   c685cafbffff6c       | mov                 byte ptr [ebp - 0x436], 0x6c

    condition:
        7 of them and filesize < 33792
}