rule win_nagini_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.nagini."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nagini"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 07 0505070505 07 0505070505 06 0404 }
            // n = 6, score = 100
            //   07                   | pop                 es
            //   0505070505           | add                 eax, 0x5050705
            //   07                   | pop                 es
            //   0505070505           | add                 eax, 0x5050705
            //   06                   | push                es
            //   0404                 | add                 al, 4

        $sequence_1 = { 0505070505 07 0505050505 06 06 06 }
            // n = 6, score = 100
            //   0505070505           | add                 eax, 0x5050705
            //   07                   | pop                 es
            //   0505050505           | add                 eax, 0x5050505
            //   06                   | push                es
            //   06                   | push                es
            //   06                   | push                es

        $sequence_2 = { 0f87ab040000 8b55f4 03f9 8b3495c0914200 8a441e04 84c0 }
            // n = 6, score = 100
            //   0f87ab040000         | ja                  0x4b1
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   03f9                 | add                 edi, ecx
            //   8b3495c0914200       | mov                 esi, dword ptr [edx*4 + 0x4291c0]
            //   8a441e04             | mov                 al, byte ptr [esi + ebx + 4]
            //   84c0                 | test                al, al

        $sequence_3 = { 57 e8???????? 83c40c 85c0 0f8541010000 53 56 }
            // n = 7, score = 100
            //   57                   | push                edi
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   0f8541010000         | jne                 0x147
            //   53                   | push                ebx
            //   56                   | push                esi

        $sequence_4 = { 50 ff15???????? 89442410 8bd8 8d642400 33c0 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   ff15????????         |                     
            //   89442410             | mov                 dword ptr [esp + 0x10], eax
            //   8bd8                 | mov                 ebx, eax
            //   8d642400             | lea                 esp, [esp]
            //   33c0                 | xor                 eax, eax

        $sequence_5 = { 0a04050a04050a 0405 0903 0407 0302 06 }
            // n = 6, score = 100
            //   0a04050a04050a       | or                  al, byte ptr [eax + 0xa05040a]
            //   0405                 | add                 al, 5
            //   0903                 | or                  dword ptr [ebx], eax
            //   0407                 | add                 al, 7
            //   0302                 | add                 eax, dword ptr [edx]
            //   06                   | push                es

        $sequence_6 = { 8b3d???????? 8bd9 6a00 6880000000 6a03 }
            // n = 5, score = 100
            //   8b3d????????         |                     
            //   8bd9                 | mov                 ebx, ecx
            //   6a00                 | push                0
            //   6880000000           | push                0x80
            //   6a03                 | push                3

        $sequence_7 = { 100402 100402 0f05 050f05050d 05050d0506 }
            // n = 5, score = 100
            //   100402               | adc                 byte ptr [edx + eax], al
            //   100402               | adc                 byte ptr [edx + eax], al
            //   0f05                 | syscall             
            //   050f05050d           | add                 eax, 0xd05050f
            //   05050d0506           | add                 eax, 0x6050d05

        $sequence_8 = { ff7514 8b4df0 ff7510 8908 ff750c ff7508 e8???????? }
            // n = 7, score = 100
            //   ff7514               | push                dword ptr [ebp + 0x14]
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   8908                 | mov                 dword ptr [eax], ecx
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     

        $sequence_9 = { 46 ebc6 8b0c95c0914200 8a441904 a840 7508 0c02 }
            // n = 7, score = 100
            //   46                   | inc                 esi
            //   ebc6                 | jmp                 0xffffffc8
            //   8b0c95c0914200       | mov                 ecx, dword ptr [edx*4 + 0x4291c0]
            //   8a441904             | mov                 al, byte ptr [ecx + ebx + 4]
            //   a840                 | test                al, 0x40
            //   7508                 | jne                 0xa
            //   0c02                 | or                  al, 2

    condition:
        7 of them and filesize < 12820480
}