rule win_radamant_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.radamant."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.radamant"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b12 31c2 8b45f4 83c014 }
            // n = 4, score = 100
            //   8b12                 | mov                 edx, dword ptr [edx]
            //   31c2                 | xor                 edx, eax
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   83c014               | add                 eax, 0x14

        $sequence_1 = { 55 89e5 81ec68090000 a1???????? 8945c8 a1???????? 8945cc }
            // n = 7, score = 100
            //   55                   | push                ebp
            //   89e5                 | mov                 ebp, esp
            //   81ec68090000         | sub                 esp, 0x968
            //   a1????????           |                     
            //   8945c8               | mov                 dword ptr [ebp - 0x38], eax
            //   a1????????           |                     
            //   8945cc               | mov                 dword ptr [ebp - 0x34], eax

        $sequence_2 = { 8b55f4 83c20c 8b45f4 83c028 8b00 3302 8901 }
            // n = 7, score = 100
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   83c20c               | add                 edx, 0xc
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   83c028               | add                 eax, 0x28
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   3302                 | xor                 eax, dword ptr [edx]
            //   8901                 | mov                 dword ptr [ecx], eax

        $sequence_3 = { 0345d8 0345f0 2d76b3d572 8945f0 8d45f0 c10014 }
            // n = 6, score = 100
            //   0345d8               | add                 eax, dword ptr [ebp - 0x28]
            //   0345f0               | add                 eax, dword ptr [ebp - 0x10]
            //   2d76b3d572           | sub                 eax, 0x72d5b376
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   c10014               | rol                 dword ptr [eax], 0x14

        $sequence_4 = { 8d148500000000 8b4510 8b0402 c1e810 8801 8b45f8 }
            // n = 6, score = 100
            //   8d148500000000       | lea                 edx, [eax*4]
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   8b0402               | mov                 eax, dword ptr [edx + eax]
            //   c1e810               | shr                 eax, 0x10
            //   8801                 | mov                 byte ptr [ecx], al
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]

        $sequence_5 = { 89e5 81ec68090000 a1???????? 8945c8 a1???????? 8945cc a1???????? }
            // n = 7, score = 100
            //   89e5                 | mov                 ebp, esp
            //   81ec68090000         | sub                 esp, 0x968
            //   a1????????           |                     
            //   8945c8               | mov                 dword ptr [ebp - 0x38], eax
            //   a1????????           |                     
            //   8945cc               | mov                 dword ptr [ebp - 0x34], eax
            //   a1????????           |                     

        $sequence_6 = { 8945f4 8d45f4 c10007 8b55f0 8d45f4 0110 }
            // n = 6, score = 100
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   c10007               | rol                 dword ptr [eax], 7
            //   8b55f0               | mov                 edx, dword ptr [ebp - 0x10]
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   0110                 | add                 dword ptr [eax], edx

        $sequence_7 = { 898550feffff a1???????? 898554feffff a1???????? 898558feffff a1???????? 89855cfeffff }
            // n = 7, score = 100
            //   898550feffff         | mov                 dword ptr [ebp - 0x1b0], eax
            //   a1????????           |                     
            //   898554feffff         | mov                 dword ptr [ebp - 0x1ac], eax
            //   a1????????           |                     
            //   898558feffff         | mov                 dword ptr [ebp - 0x1a8], eax
            //   a1????????           |                     
            //   89855cfeffff         | mov                 dword ptr [ebp - 0x1a4], eax

        $sequence_8 = { 837df000 7e14 8b4508 0345f0 80382e 7502 eb07 }
            // n = 7, score = 100
            //   837df000             | cmp                 dword ptr [ebp - 0x10], 0
            //   7e14                 | jle                 0x16
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   0345f0               | add                 eax, dword ptr [ebp - 0x10]
            //   80382e               | cmp                 byte ptr [eax], 0x2e
            //   7502                 | jne                 4
            //   eb07                 | jmp                 9

        $sequence_9 = { 0fb605???????? 8885f8feffff a1???????? 8985a8feffff a1???????? }
            // n = 5, score = 100
            //   0fb605????????       |                     
            //   8885f8feffff         | mov                 byte ptr [ebp - 0x108], al
            //   a1????????           |                     
            //   8985a8feffff         | mov                 dword ptr [ebp - 0x158], eax
            //   a1????????           |                     

    condition:
        7 of them and filesize < 204800
}