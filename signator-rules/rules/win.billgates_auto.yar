rule win_billgates_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.billgates."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.billgates"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 740c 3c11 7408 3c22 7404 3c30 }
            // n = 6, score = 200
            //   740c                 | repe cmpsb          byte ptr [esi], byte ptr es:[edi]
            //   3c11                 | dec                 eax
            //   7408                 | mov                 esi, dword ptr [esp + 0x58]
            //   3c22                 | jne                 0x1905
            //   7404                 | dec                 eax
            //   3c30                 | lea                 edi, [ebx + 0x38]

        $sequence_1 = { 750c ff15???????? 8bd8 f7db }
            // n = 4, score = 200
            //   750c                 | push                ebp
            //   ff15????????         |                     
            //   8bd8                 | push                eax
            //   f7db                 | lea                 edi, [esp + 0x3c]

        $sequence_2 = { 8d8809f9ffff b8c94216b2 f7e9 03d1 c1fa04 }
            // n = 5, score = 200
            //   8d8809f9ffff         | dec                 eax
            //   b8c94216b2           | mov                 edi, dword ptr [esp + 0x58]
            //   f7e9                 | cmp                 eax, -1
            //   03d1                 | jne                 0x5d2
            //   c1fa04               | inc                 esp

        $sequence_3 = { 740c 3c11 7408 3c22 7404 3c30 7504 }
            // n = 7, score = 200
            //   740c                 | shr                 eax, 0x3f
            //   3c11                 | dec                 eax
            //   7408                 | add                 edx, eax
            //   3c22                 | dec                 eax
            //   7404                 | mov                 eax, dword ptr [edi + 0x18]
            //   3c30                 | dec                 eax
            //   7504                 | lea                 ecx, [edx + edx*4]

        $sequence_4 = { 740c 3c11 7408 3c22 }
            // n = 4, score = 200
            //   740c                 | lea                 eax, [esp + 0xc]
            //   3c11                 | mov                 dword ptr fs:[0], eax
            //   7408                 | mov                 dword ptr [esp + 4], 0
            //   3c22                 | push                eax

        $sequence_5 = { 3bf0 7604 2bf0 eb04 2bc6 }
            // n = 5, score = 200
            //   3bf0                 | cmp                 esi, ebx
            //   7604                 | jmp                 0x743
            //   2bf0                 | xor                 esi, esi
            //   eb04                 | mov                 dword ptr [ebp + 0x98], esi
            //   2bc6                 | cmp                 esi, ebx

        $sequence_6 = { 7408 3c22 7404 3c30 }
            // n = 4, score = 200
            //   7408                 | mov                 byte ptr [edi + 9], 0x11
            //   3c22                 | push                eax
            //   7404                 | mov                 dword ptr [esp + 0x1c], eax
            //   3c30                 | lea                 edx, [ebx + ecx]

        $sequence_7 = { 3bf0 7604 2bf0 eb04 2bc6 8bf0 }
            // n = 6, score = 200
            //   3bf0                 | add                 dword ptr [ebx + 0x10], 0x78
            //   7604                 | mov                 ebx, dword ptr [ebx + 0x10]
            //   2bf0                 | mov                 edi, dword ptr [ebp + 0x10]
            //   eb04                 | lea                 esi, [ebx - 0x78]
            //   2bc6                 | mov                 dword ptr [ebp - 4], 2
            //   8bf0                 | mov                 ecx, dword ptr [ebx + 0x10]

        $sequence_8 = { 3c21 7408 3c23 7404 }
            // n = 4, score = 200
            //   3c21                 | lea                 ecx, [esp + 0x1c]
            //   7408                 | push                ecx
            //   3c23                 | cmp                 al, bl
            //   7404                 | jne                 0x126

        $sequence_9 = { 7408 3c22 7404 3c30 7504 }
            // n = 5, score = 200
            //   7408                 | dec                 eax
            //   3c22                 | mov                 dword ptr [ebx + 0xb0], ebp
            //   7404                 | dec                 eax
            //   3c30                 | mov                 dword ptr [ebx + 0xb8], 0xf
            //   7504                 | dec                 eax

    condition:
        7 of them and filesize < 801792
}