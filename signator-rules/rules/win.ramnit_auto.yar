rule win_ramnit_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.ramnit."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ramnit"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 51 57 56 fc 807d1401 }
            // n = 5, score = 4000
            //   51                   | push                ecx
            //   57                   | push                edi
            //   56                   | push                esi
            //   fc                   | cld                 
            //   807d1401             | cmp                 byte ptr [ebp + 0x14], 1

        $sequence_1 = { 8bf8 037d14 3b7df8 771f 8945fc }
            // n = 5, score = 4000
            //   8bf8                 | mov                 edi, eax
            //   037d14               | add                 edi, dword ptr [ebp + 0x14]
            //   3b7df8               | cmp                 edi, dword ptr [ebp - 8]
            //   771f                 | ja                  0x21
            //   8945fc               | mov                 dword ptr [ebp - 4], eax

        $sequence_2 = { f7d0 48 59 5f }
            // n = 4, score = 4000
            //   f7d0                 | not                 eax
            //   48                   | dec                 eax
            //   59                   | pop                 ecx
            //   5f                   | pop                 edi

        $sequence_3 = { 55 8bec 56 57 51 53 52 }
            // n = 7, score = 4000
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   56                   | push                esi
            //   57                   | push                edi
            //   51                   | push                ecx
            //   53                   | push                ebx
            //   52                   | push                edx

        $sequence_4 = { 837d0c00 761d fc 8b4d0c }
            // n = 4, score = 4000
            //   837d0c00             | cmp                 dword ptr [ebp + 0xc], 0
            //   761d                 | jbe                 0x1f
            //   fc                   | cld                 
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]

        $sequence_5 = { 7429 8bf8 037d14 3b7df8 771f }
            // n = 5, score = 4000
            //   7429                 | je                  0x2b
            //   8bf8                 | mov                 edi, eax
            //   037d14               | add                 edi, dword ptr [ebp + 0x14]
            //   3b7df8               | cmp                 edi, dword ptr [ebp - 8]
            //   771f                 | ja                  0x21

        $sequence_6 = { b800000000 ba00000000 59 5f 5e 5b }
            // n = 6, score = 4000
            //   b800000000           | mov                 eax, 0
            //   ba00000000           | mov                 edx, 0
            //   59                   | pop                 ecx
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_7 = { b9ffffffff 8b7d08 b000 f2ae 8bc1 }
            // n = 5, score = 4000
            //   b9ffffffff           | mov                 ecx, 0xffffffff
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   b000                 | mov                 al, 0
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   8bc1                 | mov                 eax, ecx

        $sequence_8 = { ff7514 ff7510 e8???????? 83f800 750b }
            // n = 5, score = 4000
            //   ff7514               | push                dword ptr [ebp + 0x14]
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   e8????????           |                     
            //   83f800               | cmp                 eax, 0
            //   750b                 | jne                 0xd

        $sequence_9 = { b000 f3aa 5e 5f 59 }
            // n = 5, score = 4000
            //   b000                 | mov                 al, 0
            //   f3aa                 | rep stosb           byte ptr es:[edi], al
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi
            //   59                   | pop                 ecx

    condition:
        7 of them and filesize < 470016
}