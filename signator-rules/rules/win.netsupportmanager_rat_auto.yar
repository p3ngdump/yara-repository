rule win_netsupportmanager_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.netsupportmanager_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.netsupportmanager_rat"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff521c 8b10 8d4d94 51 8bc8 ff5244 8b10 }
            // n = 7, score = 100
            //   ff521c               | call                dword ptr [edx + 0x1c]
            //   8b10                 | mov                 edx, dword ptr [eax]
            //   8d4d94               | lea                 ecx, [ebp - 0x6c]
            //   51                   | push                ecx
            //   8bc8                 | mov                 ecx, eax
            //   ff5244               | call                dword ptr [edx + 0x44]
            //   8b10                 | mov                 edx, dword ptr [eax]

        $sequence_1 = { e8???????? 8bf0 6a5c 56 e8???????? 83c418 85c0 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   6a5c                 | push                0x5c
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c418               | add                 esp, 0x18
            //   85c0                 | test                eax, eax

        $sequence_2 = { ff5210 8d4de0 50 8d55d0 51 52 c645fc12 }
            // n = 7, score = 100
            //   ff5210               | call                dword ptr [edx + 0x10]
            //   8d4de0               | lea                 ecx, [ebp - 0x20]
            //   50                   | push                eax
            //   8d55d0               | lea                 edx, [ebp - 0x30]
            //   51                   | push                ecx
            //   52                   | push                edx
            //   c645fc12             | mov                 byte ptr [ebp - 4], 0x12

        $sequence_3 = { f7c600400000 7409 c6450ae0 b901000000 f7c600800000 7409 8b5510 }
            // n = 7, score = 100
            //   f7c600400000         | test                esi, 0x4000
            //   7409                 | je                  0xb
            //   c6450ae0             | mov                 byte ptr [ebp + 0xa], 0xe0
            //   b901000000           | mov                 ecx, 1
            //   f7c600800000         | test                esi, 0x8000
            //   7409                 | je                  0xb
            //   8b5510               | mov                 edx, dword ptr [ebp + 0x10]

        $sequence_4 = { e8???????? 8b5628 52 e8???????? 83c408 33c0 5e }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b5628               | mov                 edx, dword ptr [esi + 0x28]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   33c0                 | xor                 eax, eax
            //   5e                   | pop                 esi

        $sequence_5 = { e8???????? 8b4d0c 85c9 740a 33d2 83f805 0f9cc2 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   85c9                 | test                ecx, ecx
            //   740a                 | je                  0xc
            //   33d2                 | xor                 edx, edx
            //   83f805               | cmp                 eax, 5
            //   0f9cc2               | setl                dl

        $sequence_6 = { ebc1 6a78 ff15???????? 8b750c 895de8 8b45ac 885dfc }
            // n = 7, score = 100
            //   ebc1                 | jmp                 0xffffffc3
            //   6a78                 | push                0x78
            //   ff15????????         |                     
            //   8b750c               | mov                 esi, dword ptr [ebp + 0xc]
            //   895de8               | mov                 dword ptr [ebp - 0x18], ebx
            //   8b45ac               | mov                 eax, dword ptr [ebp - 0x54]
            //   885dfc               | mov                 byte ptr [ebp - 4], bl

        $sequence_7 = { c1f803 f66d10 02c3 884432fd 8a59ff 33c0 8bd3 }
            // n = 7, score = 100
            //   c1f803               | sar                 eax, 3
            //   f66d10               | imul                byte ptr [ebp + 0x10]
            //   02c3                 | add                 al, bl
            //   884432fd             | mov                 byte ptr [edx + esi - 3], al
            //   8a59ff               | mov                 bl, byte ptr [ecx - 1]
            //   33c0                 | xor                 eax, eax
            //   8bd3                 | mov                 edx, ebx

        $sequence_8 = { ff15???????? 8b4668 8d55d4 6a02 52 50 6a00 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   8b4668               | mov                 eax, dword ptr [esi + 0x68]
            //   8d55d4               | lea                 edx, [ebp - 0x2c]
            //   6a02                 | push                2
            //   52                   | push                edx
            //   50                   | push                eax
            //   6a00                 | push                0

        $sequence_9 = { e8???????? 85c0 894510 7550 8b4d1c e8???????? 84c0 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   894510               | mov                 dword ptr [ebp + 0x10], eax
            //   7550                 | jne                 0x52
            //   8b4d1c               | mov                 ecx, dword ptr [ebp + 0x1c]
            //   e8????????           |                     
            //   84c0                 | test                al, al

    condition:
        7 of them and filesize < 4734976
}