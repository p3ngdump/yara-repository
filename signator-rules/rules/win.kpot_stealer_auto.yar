rule win_kpot_stealer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.kpot_stealer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.kpot_stealer"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0fbed8 e8???????? ff4dfc 59 59 0fbec8 8d841df0feffff }
            // n = 7, score = 500
            //   0fbed8               | movsx               ebx, al
            //   e8????????           |                     
            //   ff4dfc               | dec                 dword ptr [ebp - 4]
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   0fbec8               | movsx               ecx, al
            //   8d841df0feffff       | lea                 eax, [ebp + ebx - 0x110]

        $sequence_1 = { 85c0 7404 8365fc00 8b45f8 8b08 50 ff5108 }
            // n = 7, score = 500
            //   85c0                 | test                eax, eax
            //   7404                 | je                  6
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   50                   | push                eax
            //   ff5108               | call                dword ptr [ecx + 8]

        $sequence_2 = { c1e210 0bca 0fb65707 c1e218 0bca }
            // n = 5, score = 500
            //   c1e210               | shl                 edx, 0x10
            //   0bca                 | or                  ecx, edx
            //   0fb65707             | movzx               edx, byte ptr [edi + 7]
            //   c1e218               | shl                 edx, 0x18
            //   0bca                 | or                  ecx, edx

        $sequence_3 = { c1ef04 c1e010 0bf8 81e100ff0000 b8ffffff0f 0bf9 }
            // n = 6, score = 500
            //   c1ef04               | shr                 edi, 4
            //   c1e010               | shl                 eax, 0x10
            //   0bf8                 | or                  edi, eax
            //   81e100ff0000         | and                 ecx, 0xff00
            //   b8ffffff0f           | mov                 eax, 0xfffffff
            //   0bf9                 | or                  edi, ecx

        $sequence_4 = { 51 ff75f8 8945f4 03c6 50 }
            // n = 5, score = 500
            //   51                   | push                ecx
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   03c6                 | add                 eax, esi
            //   50                   | push                eax

        $sequence_5 = { 250f0000f0 0bf8 0fb6c1 c1ef04 }
            // n = 4, score = 500
            //   250f0000f0           | and                 eax, 0xf000000f
            //   0bf8                 | or                  edi, eax
            //   0fb6c1               | movzx               eax, cl
            //   c1ef04               | shr                 edi, 4

        $sequence_6 = { 8d75f0 e8???????? 28841df0feffff 43 59 3bdf }
            // n = 6, score = 500
            //   8d75f0               | lea                 esi, [ebp - 0x10]
            //   e8????????           |                     
            //   28841df0feffff       | sub                 byte ptr [ebp + ebx - 0x110], al
            //   43                   | inc                 ebx
            //   59                   | pop                 ecx
            //   3bdf                 | cmp                 ebx, edi

        $sequence_7 = { 7cda 8365f400 c745f039300000 c745fc00010000 57 }
            // n = 5, score = 500
            //   7cda                 | jl                  0xffffffdc
            //   8365f400             | and                 dword ptr [ebp - 0xc], 0
            //   c745f039300000       | mov                 dword ptr [ebp - 0x10], 0x3039
            //   c745fc00010000       | mov                 dword ptr [ebp - 4], 0x100
            //   57                   | push                edi

        $sequence_8 = { 49 7405 49 7536 eb16 c60009 }
            // n = 6, score = 500
            //   49                   | dec                 ecx
            //   7405                 | je                  7
            //   49                   | dec                 ecx
            //   7536                 | jne                 0x38
            //   eb16                 | jmp                 0x18
            //   c60009               | mov                 byte ptr [eax], 9

        $sequence_9 = { 8bf2 81e600001000 0bce c1e914 81e300000600 8bf2 }
            // n = 6, score = 500
            //   8bf2                 | mov                 esi, edx
            //   81e600001000         | and                 esi, 0x100000
            //   0bce                 | or                  ecx, esi
            //   c1e914               | shr                 ecx, 0x14
            //   81e300000600         | and                 ebx, 0x60000
            //   8bf2                 | mov                 esi, edx

    condition:
        7 of them and filesize < 219136
}