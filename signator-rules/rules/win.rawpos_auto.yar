rule win_rawpos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.rawpos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rawpos"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 750c c745c4ffffffff ff45e0 eb0d 83fb3f 7508 }
            // n = 6, score = 100
            //   750c                 | jne                 0xe
            //   c745c4ffffffff       | mov                 dword ptr [ebp - 0x3c], 0xffffffff
            //   ff45e0               | inc                 dword ptr [ebp - 0x20]
            //   eb0d                 | jmp                 0xf
            //   83fb3f               | cmp                 ebx, 0x3f
            //   7508                 | jne                 0xa

        $sequence_1 = { 8a4dfc 80c118 880e 46 8b45f4 c1f808 8806 }
            // n = 7, score = 100
            //   8a4dfc               | mov                 cl, byte ptr [ebp - 4]
            //   80c118               | add                 cl, 0x18
            //   880e                 | mov                 byte ptr [esi], cl
            //   46                   | inc                 esi
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   c1f808               | sar                 eax, 8
            //   8806                 | mov                 byte ptr [esi], al

        $sequence_2 = { 8b06 8b16 2b45f4 8bc8 c60238 ff06 24ff }
            // n = 7, score = 100
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   2b45f4               | sub                 eax, dword ptr [ebp - 0xc]
            //   8bc8                 | mov                 ecx, eax
            //   c60238               | mov                 byte ptr [edx], 0x38
            //   ff06                 | inc                 dword ptr [esi]
            //   24ff                 | and                 al, 0xff

        $sequence_3 = { 7538 46 33c0 8ac3 f6803523430004 7418 }
            // n = 6, score = 100
            //   7538                 | jne                 0x3a
            //   46                   | inc                 esi
            //   33c0                 | xor                 eax, eax
            //   8ac3                 | mov                 al, bl
            //   f6803523430004       | test                byte ptr [eax + 0x432335], 4
            //   7418                 | je                  0x1a

        $sequence_4 = { 751f 3bde 7307 b801000000 eb31 3bde }
            // n = 6, score = 100
            //   751f                 | jne                 0x21
            //   3bde                 | cmp                 ebx, esi
            //   7307                 | jae                 9
            //   b801000000           | mov                 eax, 1
            //   eb31                 | jmp                 0x33
            //   3bde                 | cmp                 ebx, esi

        $sequence_5 = { 33c9 894dc0 8b45e0 33db 8a5801 83fb7b 7541 }
            // n = 7, score = 100
            //   33c9                 | xor                 ecx, ecx
            //   894dc0               | mov                 dword ptr [ebp - 0x40], ecx
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   33db                 | xor                 ebx, ebx
            //   8a5801               | mov                 bl, byte ptr [eax + 1]
            //   83fb7b               | cmp                 ebx, 0x7b
            //   7541                 | jne                 0x43

        $sequence_6 = { f6833523430004 7425 80780100 7509 }
            // n = 4, score = 100
            //   f6833523430004       | test                byte ptr [ebx + 0x432335], 4
            //   7425                 | je                  0x27
            //   80780100             | cmp                 byte ptr [eax + 1], 0
            //   7509                 | jne                 0xb

        $sequence_7 = { 56 51 8d45dc 50 8b55e0 83c202 52 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   51                   | push                ecx
            //   8d45dc               | lea                 eax, [ebp - 0x24]
            //   50                   | push                eax
            //   8b55e0               | mov                 edx, dword ptr [ebp - 0x20]
            //   83c202               | add                 edx, 2
            //   52                   | push                edx

        $sequence_8 = { 0f84e7fdffff ff45f0 8b4df0 3b4df8 0f8e02fdffff ff75f8 6a00 }
            // n = 7, score = 100
            //   0f84e7fdffff         | je                  0xfffffded
            //   ff45f0               | inc                 dword ptr [ebp - 0x10]
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   3b4df8               | cmp                 ecx, dword ptr [ebp - 8]
            //   0f8e02fdffff         | jle                 0xfffffd08
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   6a00                 | push                0

        $sequence_9 = { e9???????? 85db 0f8d2e010000 8b4520 f7db 8b5008 83c3fc }
            // n = 7, score = 100
            //   e9????????           |                     
            //   85db                 | test                ebx, ebx
            //   0f8d2e010000         | jge                 0x134
            //   8b4520               | mov                 eax, dword ptr [ebp + 0x20]
            //   f7db                 | neg                 ebx
            //   8b5008               | mov                 edx, dword ptr [eax + 8]
            //   83c3fc               | add                 ebx, -4

    condition:
        7 of them and filesize < 466944
}