rule win_oddjob_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.oddjob."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.oddjob"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 03f8 8d0c41 0fb711 6685d2 75d4 8d7c5f02 03ff }
            // n = 7, score = 100
            //   03f8                 | add                 edi, eax
            //   8d0c41               | lea                 ecx, [ecx + eax*2]
            //   0fb711               | movzx               edx, word ptr [ecx]
            //   6685d2               | test                dx, dx
            //   75d4                 | jne                 0xffffffd6
            //   8d7c5f02             | lea                 edi, [edi + ebx*2 + 2]
            //   03ff                 | add                 edi, edi

        $sequence_1 = { c6852ffdffff66 c68530fdffff8b c68531fdffff4b c68532fdffff14 c68533fdffff66 c68534fdffff39 }
            // n = 6, score = 100
            //   c6852ffdffff66       | mov                 byte ptr [ebp - 0x2d1], 0x66
            //   c68530fdffff8b       | mov                 byte ptr [ebp - 0x2d0], 0x8b
            //   c68531fdffff4b       | mov                 byte ptr [ebp - 0x2cf], 0x4b
            //   c68532fdffff14       | mov                 byte ptr [ebp - 0x2ce], 0x14
            //   c68533fdffff66       | mov                 byte ptr [ebp - 0x2cd], 0x66
            //   c68534fdffff39       | mov                 byte ptr [ebp - 0x2cc], 0x39

        $sequence_2 = { 66891d???????? ff15???????? a1???????? 3bc3 8935???????? 7408 }
            // n = 6, score = 100
            //   66891d????????       |                     
            //   ff15????????         |                     
            //   a1????????           |                     
            //   3bc3                 | cmp                 eax, ebx
            //   8935????????         |                     
            //   7408                 | je                  0xa

        $sequence_3 = { 50 bf???????? 57 6a04 53 68???????? ffd6 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   bf????????           |                     
            //   57                   | push                edi
            //   6a04                 | push                4
            //   53                   | push                ebx
            //   68????????           |                     
            //   ffd6                 | call                esi

        $sequence_4 = { 899de8fbffff 89b5a8fbffff 89b5f8fbffff 89b5d4fbffff 89b5f4fbffff 89b5d8fbffff }
            // n = 6, score = 100
            //   899de8fbffff         | mov                 dword ptr [ebp - 0x418], ebx
            //   89b5a8fbffff         | mov                 dword ptr [ebp - 0x458], esi
            //   89b5f8fbffff         | mov                 dword ptr [ebp - 0x408], esi
            //   89b5d4fbffff         | mov                 dword ptr [ebp - 0x42c], esi
            //   89b5f4fbffff         | mov                 dword ptr [ebp - 0x40c], esi
            //   89b5d8fbffff         | mov                 dword ptr [ebp - 0x428], esi

        $sequence_5 = { 6a1b e8???????? 8bf0 59 8975e0 3bf7 }
            // n = 6, score = 100
            //   6a1b                 | push                0x1b
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   59                   | pop                 ecx
            //   8975e0               | mov                 dword ptr [ebp - 0x20], esi
            //   3bf7                 | cmp                 esi, edi

        $sequence_6 = { 0bc6 0fb67102 0fb64903 c1e008 33f2 0bc6 33ca }
            // n = 7, score = 100
            //   0bc6                 | or                  eax, esi
            //   0fb67102             | movzx               esi, byte ptr [ecx + 2]
            //   0fb64903             | movzx               ecx, byte ptr [ecx + 3]
            //   c1e008               | shl                 eax, 8
            //   33f2                 | xor                 esi, edx
            //   0bc6                 | or                  eax, esi
            //   33ca                 | xor                 ecx, edx

        $sequence_7 = { 7457 83f868 7446 83f86c 7418 83f877 0f8505090000 }
            // n = 7, score = 100
            //   7457                 | je                  0x59
            //   83f868               | cmp                 eax, 0x68
            //   7446                 | je                  0x48
            //   83f86c               | cmp                 eax, 0x6c
            //   7418                 | je                  0x1a
            //   83f877               | cmp                 eax, 0x77
            //   0f8505090000         | jne                 0x90b

        $sequence_8 = { c68549fcffff7d c6854afcffff10 c6854bfcffff8b c6854cfcffff55 c6854dfcffff0c c6854efcffff42 c6854ffcffff89 }
            // n = 7, score = 100
            //   c68549fcffff7d       | mov                 byte ptr [ebp - 0x3b7], 0x7d
            //   c6854afcffff10       | mov                 byte ptr [ebp - 0x3b6], 0x10
            //   c6854bfcffff8b       | mov                 byte ptr [ebp - 0x3b5], 0x8b
            //   c6854cfcffff55       | mov                 byte ptr [ebp - 0x3b4], 0x55
            //   c6854dfcffff0c       | mov                 byte ptr [ebp - 0x3b3], 0xc
            //   c6854efcffff42       | mov                 byte ptr [ebp - 0x3b2], 0x42
            //   c6854ffcffff89       | mov                 byte ptr [ebp - 0x3b1], 0x89

        $sequence_9 = { 59 399d8894ffff 740c ffb58894ffff e8???????? 59 399d7894ffff }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   399d8894ffff         | cmp                 dword ptr [ebp - 0x6b78], ebx
            //   740c                 | je                  0xe
            //   ffb58894ffff         | push                dword ptr [ebp - 0x6b78]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   399d7894ffff         | cmp                 dword ptr [ebp - 0x6b88], ebx

    condition:
        7 of them and filesize < 221184
}