rule win_pay2key_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.pay2key."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pay2key"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb03 897a08 8b45fc 8b7004 391e 7523 807f0d00 }
            // n = 7, score = 300
            //   eb03                 | jmp                 5
            //   897a08               | mov                 dword ptr [edx + 8], edi
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8b7004               | mov                 esi, dword ptr [eax + 4]
            //   391e                 | cmp                 dword ptr [esi], ebx
            //   7523                 | jne                 0x25
            //   807f0d00             | cmp                 byte ptr [edi + 0xd], 0

        $sequence_1 = { 83c40c 8d731c 8bf8 3bf7 743a 8b4614 83f808 }
            // n = 7, score = 300
            //   83c40c               | add                 esp, 0xc
            //   8d731c               | lea                 esi, [ebx + 0x1c]
            //   8bf8                 | mov                 edi, eax
            //   3bf7                 | cmp                 esi, edi
            //   743a                 | je                  0x3c
            //   8b4614               | mov                 eax, dword ptr [esi + 0x14]
            //   83f808               | cmp                 eax, 8

        $sequence_2 = { c6450800 83f808 720d 40 8d4d20 50 ff7520 }
            // n = 7, score = 300
            //   c6450800             | mov                 byte ptr [ebp + 8], 0
            //   83f808               | cmp                 eax, 8
            //   720d                 | jb                  0xf
            //   40                   | inc                 eax
            //   8d4d20               | lea                 ecx, [ebp + 0x20]
            //   50                   | push                eax
            //   ff7520               | push                dword ptr [ebp + 0x20]

        $sequence_3 = { 83c40c 8b461c 8d4d90 50 c745e00a000000 894de4 c745e800000000 }
            // n = 7, score = 300
            //   83c40c               | add                 esp, 0xc
            //   8b461c               | mov                 eax, dword ptr [esi + 0x1c]
            //   8d4d90               | lea                 ecx, [ebp - 0x70]
            //   50                   | push                eax
            //   c745e00a000000       | mov                 dword ptr [ebp - 0x20], 0xa
            //   894de4               | mov                 dword ptr [ebp - 0x1c], ecx
            //   c745e800000000       | mov                 dword ptr [ebp - 0x18], 0

        $sequence_4 = { c7869400000000000000 5e 5d c20800 8b7008 57 8b7908 }
            // n = 7, score = 300
            //   c7869400000000000000     | mov    dword ptr [esi + 0x94], 0
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   c20800               | ret                 8
            //   8b7008               | mov                 esi, dword ptr [eax + 8]
            //   57                   | push                edi
            //   8b7908               | mov                 edi, dword ptr [ecx + 8]

        $sequence_5 = { e8???????? 83ec0c c645fc01 8d5f38 8bcc 53 }
            // n = 6, score = 300
            //   e8????????           |                     
            //   83ec0c               | sub                 esp, 0xc
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   8d5f38               | lea                 ebx, [edi + 0x38]
            //   8bcc                 | mov                 ecx, esp
            //   53                   | push                ebx

        $sequence_6 = { ff752c 8bc8 c745fc01000000 ff7528 ff7524 ff7520 ff751c }
            // n = 7, score = 300
            //   ff752c               | push                dword ptr [ebp + 0x2c]
            //   8bc8                 | mov                 ecx, eax
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1
            //   ff7528               | push                dword ptr [ebp + 0x28]
            //   ff7524               | push                dword ptr [ebp + 0x24]
            //   ff7520               | push                dword ptr [ebp + 0x20]
            //   ff751c               | push                dword ptr [ebp + 0x1c]

        $sequence_7 = { 8d4df4 e8???????? f30f7e00 660fd606 8b4808 894e08 8bc7 }
            // n = 7, score = 300
            //   8d4df4               | lea                 ecx, [ebp - 0xc]
            //   e8????????           |                     
            //   f30f7e00             | movq                xmm0, qword ptr [eax]
            //   660fd606             | movq                qword ptr [esi], xmm0
            //   8b4808               | mov                 ecx, dword ptr [eax + 8]
            //   894e08               | mov                 dword ptr [esi + 8], ecx
            //   8bc7                 | mov                 eax, edi

        $sequence_8 = { 3bfb 744d 83c704 8b37 85f6 743a c745fc00000000 }
            // n = 7, score = 300
            //   3bfb                 | cmp                 edi, ebx
            //   744d                 | je                  0x4f
            //   83c704               | add                 edi, 4
            //   8b37                 | mov                 esi, dword ptr [edi]
            //   85f6                 | test                esi, esi
            //   743a                 | je                  0x3c
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0

        $sequence_9 = { 56 e8???????? 8bd0 b9feffff0f 8b4704 2bc8 83f901 }
            // n = 7, score = 300
            //   56                   | push                esi
            //   e8????????           |                     
            //   8bd0                 | mov                 edx, eax
            //   b9feffff0f           | mov                 ecx, 0xffffffe
            //   8b4704               | mov                 eax, dword ptr [edi + 4]
            //   2bc8                 | sub                 ecx, eax
            //   83f901               | cmp                 ecx, 1

    condition:
        7 of them and filesize < 2252800
}