rule win_plaintee_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.plaintee."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.plaintee"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { b001 5e 81c490010000 c3 }
            // n = 4, score = 300
            //   b001                 | mov                 al, 1
            //   5e                   | pop                 esi
            //   81c490010000         | add                 esp, 0x190
            //   c3                   | ret                 

        $sequence_1 = { 740a b001 5e 81c490010000 c3 6a11 }
            // n = 6, score = 300
            //   740a                 | je                  0xc
            //   b001                 | mov                 al, 1
            //   5e                   | pop                 esi
            //   81c490010000         | add                 esp, 0x190
            //   c3                   | ret                 
            //   6a11                 | push                0x11

        $sequence_2 = { 8b742410 f7f9 8b4c240c b801000000 80c20a }
            // n = 5, score = 300
            //   8b742410             | mov                 esi, dword ptr [esp + 0x10]
            //   f7f9                 | idiv                ecx
            //   8b4c240c             | mov                 ecx, dword ptr [esp + 0xc]
            //   b801000000           | mov                 eax, 1
            //   80c20a               | add                 dl, 0xa

        $sequence_3 = { 8b442414 8b4c2410 8b54240c 56 8b74240c 50 }
            // n = 6, score = 300
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]
            //   8b54240c             | mov                 edx, dword ptr [esp + 0xc]
            //   56                   | push                esi
            //   8b74240c             | mov                 esi, dword ptr [esp + 0xc]
            //   50                   | push                eax

        $sequence_4 = { 50 6a00 56 51 8b4c241c 51 ff15???????? }
            // n = 7, score = 300
            //   50                   | push                eax
            //   6a00                 | push                0
            //   56                   | push                esi
            //   51                   | push                ecx
            //   8b4c241c             | mov                 ecx, dword ptr [esp + 0x1c]
            //   51                   | push                ecx
            //   ff15????????         |                     

        $sequence_5 = { 33f6 8bce e8???????? 8a8669010000 84c0 7416 85f6 }
            // n = 7, score = 300
            //   33f6                 | xor                 esi, esi
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   8a8669010000         | mov                 al, byte ptr [esi + 0x169]
            //   84c0                 | test                al, al
            //   7416                 | je                  0x18
            //   85f6                 | test                esi, esi

        $sequence_6 = { 32da 881c31 41 3bc8 7cf3 5b }
            // n = 6, score = 300
            //   32da                 | xor                 bl, dl
            //   881c31               | mov                 byte ptr [ecx + esi], bl
            //   41                   | inc                 ecx
            //   3bc8                 | cmp                 ecx, eax
            //   7cf3                 | jl                  0xfffffff5
            //   5b                   | pop                 ebx

        $sequence_7 = { ff15???????? 83f8ff 898638010000 750a b001 5e }
            // n = 6, score = 300
            //   ff15????????         |                     
            //   83f8ff               | cmp                 eax, -1
            //   898638010000         | mov                 dword ptr [esi + 0x138], eax
            //   750a                 | jne                 0xc
            //   b001                 | mov                 al, 1
            //   5e                   | pop                 esi

        $sequence_8 = { a4 83c9ff 8bfb f2ae f7d1 }
            // n = 5, score = 300
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   8bfb                 | mov                 edi, ebx
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx

        $sequence_9 = { 8b442414 52 50 6a00 56 51 }
            // n = 6, score = 300
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   52                   | push                edx
            //   50                   | push                eax
            //   6a00                 | push                0
            //   56                   | push                esi
            //   51                   | push                ecx

    condition:
        7 of them and filesize < 73728
}