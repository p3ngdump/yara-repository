rule win_zerot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.zerot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zerot"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7523 80bd4afeffff01 bf???????? b8???????? 0f44f8 }
            // n = 5, score = 200
            //   7523                 | jne                 0x25
            //   80bd4afeffff01       | cmp                 byte ptr [ebp - 0x1b6], 1
            //   bf????????           |                     
            //   b8????????           |                     
            //   0f44f8               | cmove               edi, eax

        $sequence_1 = { c78524fdffff40000000 50 6a00 ffd6 8d8524fdffff 50 }
            // n = 6, score = 200
            //   c78524fdffff40000000     | mov    dword ptr [ebp - 0x2dc], 0x40
            //   50                   | push                eax
            //   6a00                 | push                0
            //   ffd6                 | call                esi
            //   8d8524fdffff         | lea                 eax, [ebp - 0x2dc]
            //   50                   | push                eax

        $sequence_2 = { 7409 57 e8???????? 83c404 8b8540fdffff }
            // n = 5, score = 200
            //   7409                 | je                  0xb
            //   57                   | push                edi
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b8540fdffff         | mov                 eax, dword ptr [ebp - 0x2c0]

        $sequence_3 = { 0f57c0 8945bc a1???????? 6800040000 8945c0 8d853cf6ffff 56 }
            // n = 7, score = 200
            //   0f57c0               | xorps               xmm0, xmm0
            //   8945bc               | mov                 dword ptr [ebp - 0x44], eax
            //   a1????????           |                     
            //   6800040000           | push                0x400
            //   8945c0               | mov                 dword ptr [ebp - 0x40], eax
            //   8d853cf6ffff         | lea                 eax, [ebp - 0x9c4]
            //   56                   | push                esi

        $sequence_4 = { 02c8 880c32 8a47f8 c0e005 02c1 880432 8a4ff9 }
            // n = 7, score = 200
            //   02c8                 | add                 cl, al
            //   880c32               | mov                 byte ptr [edx + esi], cl
            //   8a47f8               | mov                 al, byte ptr [edi - 8]
            //   c0e005               | shl                 al, 5
            //   02c1                 | add                 al, cl
            //   880432               | mov                 byte ptr [edx + esi], al
            //   8a4ff9               | mov                 cl, byte ptr [edi - 7]

        $sequence_5 = { 6800010000 8d85fcfeffff 6a00 50 e8???????? 83c408 }
            // n = 6, score = 200
            //   6800010000           | push                0x100
            //   8d85fcfeffff         | lea                 eax, [ebp - 0x104]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8

        $sequence_6 = { 57 8918 e8???????? 83c404 81fb0000a000 }
            // n = 5, score = 200
            //   57                   | push                edi
            //   8918                 | mov                 dword ptr [eax], ebx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   81fb0000a000         | cmp                 ebx, 0xa00000

        $sequence_7 = { 68???????? ffb578f6ffff ff15???????? 85c0 741c ffb578f6ffff }
            // n = 6, score = 200
            //   68????????           |                     
            //   ffb578f6ffff         | push                dword ptr [ebp - 0x988]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   741c                 | je                  0x1e
            //   ffb578f6ffff         | push                dword ptr [ebp - 0x988]

        $sequence_8 = { 83c40c 8d8504fcffff 50 ffb54cfcffff 57 }
            // n = 5, score = 200
            //   83c40c               | add                 esp, 0xc
            //   8d8504fcffff         | lea                 eax, [ebp - 0x3fc]
            //   50                   | push                eax
            //   ffb54cfcffff         | push                dword ptr [ebp - 0x3b4]
            //   57                   | push                edi

        $sequence_9 = { 898530fcffff 90 33db bf01000000 }
            // n = 4, score = 200
            //   898530fcffff         | mov                 dword ptr [ebp - 0x3d0], eax
            //   90                   | nop                 
            //   33db                 | xor                 ebx, ebx
            //   bf01000000           | mov                 edi, 1

    condition:
        7 of them and filesize < 303104
}