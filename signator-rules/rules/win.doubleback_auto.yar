rule win_doubleback_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.doubleback."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.doubleback"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 741c 3dd73a0000 740e 3dab3f0000 755e b9ad060000 eb57 }
            // n = 7, score = 400
            //   741c                 | mov                 dword ptr [edi + 0x41c], 0x48
            //   3dd73a0000           | inc                 edx
            //   740e                 | mov                 dword ptr [edi + 0x414], edx
            //   3dab3f0000           | mov                 dword ptr [edi + 0x448], 0x185
            //   755e                 | xor                 eax, eax
            //   b9ad060000           | test                edx, edx
            //   eb57                 | jne                 0x179

        $sequence_1 = { eb42 b9e3050000 eb3b b90b070000 }
            // n = 4, score = 400
            //   eb42                 | mov                 dword ptr [ebp - 4], eax
            //   b9e3050000           | push                0x8000
            //   eb3b                 | push                0
            //   b90b070000           | push                ebx

        $sequence_2 = { 7438 3d5a290000 742a 3d39380000 741c 3dd73a0000 }
            // n = 6, score = 400
            //   7438                 | dec                 eax
            //   3d5a290000           | mov                 edi, eax
            //   742a                 | inc                 ecx
            //   3d39380000           | mov                 edx, esi
            //   741c                 | inc                 esp
            //   3dd73a0000           | lea                 ecx, [edi + 4]

        $sequence_3 = { 741c 3dd73a0000 740e 3dab3f0000 755e b9ad060000 }
            // n = 6, score = 400
            //   741c                 | jne                 0x1477
            //   3dd73a0000           | mov                 byte ptr [esi], 6
            //   740e                 | inc                 ecx
            //   3dab3f0000           | cmp                 byte ptr [esi + 8], 0xa
            //   755e                 | inc                 ecx
            //   b9ad060000           | mov                 ecx, dword ptr [esi + 0x54]

        $sequence_4 = { eb13 b975070000 eb0c b96f070000 }
            // n = 4, score = 400
            //   eb13                 | mov                 dword ptr [ebp - 0xc], eax
            //   b975070000           | mov                 edx, dword ptr [ecx]
            //   eb0c                 | test                edx, edx
            //   b96f070000           | je                  0x15c2

        $sequence_5 = { b9d4070000 eb13 b975070000 eb0c b96f070000 }
            // n = 5, score = 400
            //   b9d4070000           | pop                 ecx
            //   eb13                 | pop                 ecx
            //   b975070000           | push                0x65
            //   eb0c                 | pop                 esi
            //   b96f070000           | push                0x78

        $sequence_6 = { 3d39380000 741c 3dd73a0000 740e }
            // n = 4, score = 400
            //   3d39380000           | dec                 eax
            //   741c                 | test                eax, eax
            //   3dd73a0000           | je                  0x3bc
            //   740e                 | xor                 esi, esi

        $sequence_7 = { b9e7050000 eb42 b9e3050000 eb3b b90b070000 eb34 2d63450000 }
            // n = 7, score = 400
            //   b9e7050000           | xor                 ecx, ecx
            //   eb42                 | inc                 ecx
            //   b9e3050000           | mov                 eax, 0x3000
            //   eb3b                 | dec                 eax
            //   b90b070000           | mov                 dword ptr [eax + 0x20], edi
            //   eb34                 | inc                 ecx
            //   2d63450000           | push                esi

        $sequence_8 = { b9e3050000 eb3b b90b070000 eb34 2d63450000 }
            // n = 5, score = 400
            //   b9e3050000           | pop                 edx
            //   eb3b                 | pop                 ecx
            //   b90b070000           | push                0x65
            //   eb34                 | mov                 word ptr [esi + edi*2 + 0x6b0], cx
            //   2d63450000           | pop                 ecx

        $sequence_9 = { 751a b9d4070000 eb13 b975070000 }
            // n = 4, score = 400
            //   751a                 | dec                 eax
            //   b9d4070000           | add                 edx, 0x20
            //   eb13                 | dec                 esp
            //   b975070000           | lea                 ecx, [ebp + 0xa0]

    condition:
        7 of them and filesize < 106496
}