rule win_safenet_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.safenet."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.safenet"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 ff15???????? 85c0 7409 e8???????? 33c0 }
            // n = 6, score = 100
            //   56                   | push                esi
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7409                 | je                  0xb
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax

        $sequence_1 = { 56 be???????? 57 56 83cbff e8???????? }
            // n = 6, score = 100
            //   56                   | push                esi
            //   be????????           |                     
            //   57                   | push                edi
            //   56                   | push                esi
            //   83cbff               | or                  ebx, 0xffffffff
            //   e8????????           |                     

        $sequence_2 = { e8???????? 83c410 eb25 0fb7c1 50 ff75e8 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   eb25                 | jmp                 0x27
            //   0fb7c1               | movzx               eax, cx
            //   50                   | push                eax
            //   ff75e8               | push                dword ptr [ebp - 0x18]

        $sequence_3 = { 8d85a8f9ffff 53 50 ffd6 8d85a8f9ffff }
            // n = 5, score = 100
            //   8d85a8f9ffff         | lea                 eax, [ebp - 0x658]
            //   53                   | push                ebx
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   8d85a8f9ffff         | lea                 eax, [ebp - 0x658]

        $sequence_4 = { ff7008 ff7604 ff15???????? 8bcf e8???????? }
            // n = 5, score = 100
            //   ff7008               | push                dword ptr [eax + 8]
            //   ff7604               | push                dword ptr [esi + 4]
            //   ff15????????         |                     
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     

        $sequence_5 = { 66f7d9 1bc9 f7d1 23c1 c3 833d????????00 }
            // n = 6, score = 100
            //   66f7d9               | neg                 cx
            //   1bc9                 | sbb                 ecx, ecx
            //   f7d1                 | not                 ecx
            //   23c1                 | and                 eax, ecx
            //   c3                   | ret                 
            //   833d????????00       |                     

        $sequence_6 = { 8b4e08 8945e0 8b4650 50 }
            // n = 4, score = 100
            //   8b4e08               | mov                 ecx, dword ptr [esi + 8]
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax
            //   8b4650               | mov                 eax, dword ptr [esi + 0x50]
            //   50                   | push                eax

        $sequence_7 = { ff75f0 ff15???????? ff75ac ff15???????? 807d1700 7509 }
            // n = 6, score = 100
            //   ff75f0               | push                dword ptr [ebp - 0x10]
            //   ff15????????         |                     
            //   ff75ac               | push                dword ptr [ebp - 0x54]
            //   ff15????????         |                     
            //   807d1700             | cmp                 byte ptr [ebp + 0x17], 0
            //   7509                 | jne                 0xb

        $sequence_8 = { 59 50 8d85a4fdffff 50 }
            // n = 4, score = 100
            //   59                   | pop                 ecx
            //   50                   | push                eax
            //   8d85a4fdffff         | lea                 eax, [ebp - 0x25c]
            //   50                   | push                eax

        $sequence_9 = { bb00000100 7404 0fb75df2 668b4de6 6685c9 }
            // n = 5, score = 100
            //   bb00000100           | mov                 ebx, 0x10000
            //   7404                 | je                  6
            //   0fb75df2             | movzx               ebx, word ptr [ebp - 0xe]
            //   668b4de6             | mov                 cx, word ptr [ebp - 0x1a]
            //   6685c9               | test                cx, cx

    condition:
        7 of them and filesize < 262144
}