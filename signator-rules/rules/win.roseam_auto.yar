rule win_roseam_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.roseam."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.roseam"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b4d18 8b4514 51 8b4d0c }
            // n = 4, score = 100
            //   8b4d18               | mov                 ecx, dword ptr [ebp + 0x18]
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   51                   | push                ecx
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]

        $sequence_1 = { 5d 5d 9d 5d 8b7508 803e00 7509 }
            // n = 7, score = 100
            //   5d                   | pop                 ebp
            //   5d                   | pop                 ebp
            //   9d                   | popfd               
            //   5d                   | pop                 ebp
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   803e00               | cmp                 byte ptr [esi], 0
            //   7509                 | jne                 0xb

        $sequence_2 = { 897d0c 8a10 8aca 3a16 751c 84c9 }
            // n = 6, score = 100
            //   897d0c               | mov                 dword ptr [ebp + 0xc], edi
            //   8a10                 | mov                 dl, byte ptr [eax]
            //   8aca                 | mov                 cl, dl
            //   3a16                 | cmp                 dl, byte ptr [esi]
            //   751c                 | jne                 0x1e
            //   84c9                 | test                cl, cl

        $sequence_3 = { 3c41 0f840d020000 68???????? 50 9c b80a000000 }
            // n = 6, score = 100
            //   3c41                 | cmp                 al, 0x41
            //   0f840d020000         | je                  0x213
            //   68????????           |                     
            //   50                   | push                eax
            //   9c                   | pushfd              
            //   b80a000000           | mov                 eax, 0xa

        $sequence_4 = { 8b7508 6841812cd2 56 e8???????? 68868f523c 56 a3???????? }
            // n = 7, score = 100
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   6841812cd2           | push                0xd22c8141
            //   56                   | push                esi
            //   e8????????           |                     
            //   68868f523c           | push                0x3c528f86
            //   56                   | push                esi
            //   a3????????           |                     

        $sequence_5 = { 6689b504eeffff f3ab 66ab b9ff000000 33c0 8dbd76e8ffff }
            // n = 6, score = 100
            //   6689b504eeffff       | mov                 word ptr [ebp - 0x11fc], si
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   b9ff000000           | mov                 ecx, 0xff
            //   33c0                 | xor                 eax, eax
            //   8dbd76e8ffff         | lea                 edi, [ebp - 0x178a]

        $sequence_6 = { 56 57 b91f000000 33c0 8dbd3effffff 66c7853cffffff0000 }
            // n = 6, score = 100
            //   56                   | push                esi
            //   57                   | push                edi
            //   b91f000000           | mov                 ecx, 0x1f
            //   33c0                 | xor                 eax, eax
            //   8dbd3effffff         | lea                 edi, [ebp - 0xc2]
            //   66c7853cffffff0000     | mov    word ptr [ebp - 0xc4], 0

        $sequence_7 = { 8d450c 6a01 50 6a01 c745f810000000 ff15???????? 85c0 }
            // n = 7, score = 100
            //   8d450c               | lea                 eax, [ebp + 0xc]
            //   6a01                 | push                1
            //   50                   | push                eax
            //   6a01                 | push                1
            //   c745f810000000       | mov                 dword ptr [ebp - 8], 0x10
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_8 = { 6a00 50 6a4c 51 e8???????? }
            // n = 5, score = 100
            //   6a00                 | push                0
            //   50                   | push                eax
            //   6a4c                 | push                0x4c
            //   51                   | push                ecx
            //   e8????????           |                     

        $sequence_9 = { 8a8524f9ffff 84c0 754f 68f4010000 ff15???????? 68???????? 68???????? }
            // n = 7, score = 100
            //   8a8524f9ffff         | mov                 al, byte ptr [ebp - 0x6dc]
            //   84c0                 | test                al, al
            //   754f                 | jne                 0x51
            //   68f4010000           | push                0x1f4
            //   ff15????????         |                     
            //   68????????           |                     
            //   68????????           |                     

    condition:
        7 of them and filesize < 221184
}