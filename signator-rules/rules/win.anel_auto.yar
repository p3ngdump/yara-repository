rule win_anel_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.anel."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.anel"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 33db 43 53 33ff 8db5ecfeffff }
            // n = 6, score = 200
            //   ff15????????         |                     
            //   33db                 | xor                 ebx, ebx
            //   43                   | inc                 ebx
            //   53                   | push                ebx
            //   33ff                 | xor                 edi, edi
            //   8db5ecfeffff         | lea                 esi, [ebp - 0x114]

        $sequence_1 = { 8d7508 e8???????? 8bc3 e8???????? c21c00 6a3c b8???????? }
            // n = 7, score = 200
            //   8d7508               | lea                 esi, [ebp + 8]
            //   e8????????           |                     
            //   8bc3                 | mov                 eax, ebx
            //   e8????????           |                     
            //   c21c00               | ret                 0x1c
            //   6a3c                 | push                0x3c
            //   b8????????           |                     

        $sequence_2 = { 8b00 50 ff15???????? 83e83c 99 8945a4 8d45a4 }
            // n = 7, score = 200
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83e83c               | sub                 eax, 0x3c
            //   99                   | cdq                 
            //   8945a4               | mov                 dword ptr [ebp - 0x5c], eax
            //   8d45a4               | lea                 eax, [ebp - 0x5c]

        $sequence_3 = { b8???????? e8???????? 8b7508 33db 895dfc 53 895df0 }
            // n = 7, score = 200
            //   b8????????           |                     
            //   e8????????           |                     
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   33db                 | xor                 ebx, ebx
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   53                   | push                ebx
            //   895df0               | mov                 dword ptr [ebp - 0x10], ebx

        $sequence_4 = { 8d45c4 89b51cfeffff c74590677a6970 c745942c206465 c74598666c6174 66c7459c6500 c7856cffffff41636365 }
            // n = 7, score = 200
            //   8d45c4               | lea                 eax, [ebp - 0x3c]
            //   89b51cfeffff         | mov                 dword ptr [ebp - 0x1e4], esi
            //   c74590677a6970       | mov                 dword ptr [ebp - 0x70], 0x70697a67
            //   c745942c206465       | mov                 dword ptr [ebp - 0x6c], 0x6564202c
            //   c74598666c6174       | mov                 dword ptr [ebp - 0x68], 0x74616c66
            //   66c7459c6500         | mov                 word ptr [ebp - 0x64], 0x65
            //   c7856cffffff41636365     | mov    dword ptr [ebp - 0x94], 0x65636341

        $sequence_5 = { 7698 894e08 8b4df4 894e10 }
            // n = 4, score = 200
            //   7698                 | jbe                 0xffffff9a
            //   894e08               | mov                 dword ptr [esi + 8], ecx
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   894e10               | mov                 dword ptr [esi + 0x10], ecx

        $sequence_6 = { ffb580feffff 8d7594 ffb57cfeffff c68593feffff01 e8???????? 59 }
            // n = 6, score = 200
            //   ffb580feffff         | push                dword ptr [ebp - 0x180]
            //   8d7594               | lea                 esi, [ebp - 0x6c]
            //   ffb57cfeffff         | push                dword ptr [ebp - 0x184]
            //   c68593feffff01       | mov                 byte ptr [ebp - 0x16d], 1
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_7 = { 58 6a4c 668945a6 58 6a45 668945a8 58 }
            // n = 7, score = 200
            //   58                   | pop                 eax
            //   6a4c                 | push                0x4c
            //   668945a6             | mov                 word ptr [ebp - 0x5a], ax
            //   58                   | pop                 eax
            //   6a45                 | push                0x45
            //   668945a8             | mov                 word ptr [ebp - 0x58], ax
            //   58                   | pop                 eax

        $sequence_8 = { 51 c645fc06 e8???????? 59 59 57 c645fc07 }
            // n = 7, score = 200
            //   51                   | push                ecx
            //   c645fc06             | mov                 byte ptr [ebp - 4], 6
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   57                   | push                edi
            //   c645fc07             | mov                 byte ptr [ebp - 4], 7

        $sequence_9 = { 53 33ff 8db5c0feffff e8???????? 53 8db530ffffff e8???????? }
            // n = 7, score = 200
            //   53                   | push                ebx
            //   33ff                 | xor                 edi, edi
            //   8db5c0feffff         | lea                 esi, [ebp - 0x140]
            //   e8????????           |                     
            //   53                   | push                ebx
            //   8db530ffffff         | lea                 esi, [ebp - 0xd0]
            //   e8????????           |                     

    condition:
        7 of them and filesize < 376832
}