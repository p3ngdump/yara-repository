rule win_gup_proxy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.gup_proxy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gup_proxy"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 68???????? 8d0c45dc984100 8bc1 2d???????? }
            // n = 4, score = 100
            //   68????????           |                     
            //   8d0c45dc984100       | lea                 ecx, [eax*2 + 0x4198dc]
            //   8bc1                 | mov                 eax, ecx
            //   2d????????           |                     

        $sequence_1 = { c785e0f5ffff01000000 ff15???????? 8b3d???????? 8da42400000000 8b06 8985f0f6ffff 8985e8f5ffff }
            // n = 7, score = 100
            //   c785e0f5ffff01000000     | mov    dword ptr [ebp - 0xa20], 1
            //   ff15????????         |                     
            //   8b3d????????         |                     
            //   8da42400000000       | lea                 esp, [esp]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8985f0f6ffff         | mov                 dword ptr [ebp - 0x910], eax
            //   8985e8f5ffff         | mov                 dword ptr [ebp - 0xa18], eax

        $sequence_2 = { f30f7f851cfbffff 660f6f05???????? f30f7f852cfbffff 660f6f05???????? f30f7f853cfbffff }
            // n = 5, score = 100
            //   f30f7f851cfbffff     | movdqu              xmmword ptr [ebp - 0x4e4], xmm0
            //   660f6f05????????     |                     
            //   f30f7f852cfbffff     | movdqu              xmmword ptr [ebp - 0x4d4], xmm0
            //   660f6f05????????     |                     
            //   f30f7f853cfbffff     | movdqu              xmmword ptr [ebp - 0x4c4], xmm0

        $sequence_3 = { 2b45fc 83c010 894df8 03c2 394710 7549 }
            // n = 6, score = 100
            //   2b45fc               | sub                 eax, dword ptr [ebp - 4]
            //   83c010               | add                 eax, 0x10
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   03c2                 | add                 eax, edx
            //   394710               | cmp                 dword ptr [edi + 0x10], eax
            //   7549                 | jne                 0x4b

        $sequence_4 = { c74424580f000000 c744245400000000 c644244400 720c ff74242c e8???????? }
            // n = 6, score = 100
            //   c74424580f000000     | mov                 dword ptr [esp + 0x58], 0xf
            //   c744245400000000     | mov                 dword ptr [esp + 0x54], 0
            //   c644244400           | mov                 byte ptr [esp + 0x44], 0
            //   720c                 | jb                  0xe
            //   ff74242c             | push                dword ptr [esp + 0x2c]
            //   e8????????           |                     

        $sequence_5 = { c745f4741f4100 50 e8???????? cc }
            // n = 4, score = 100
            //   c745f4741f4100       | mov                 dword ptr [ebp - 0xc], 0x411f74
            //   50                   | push                eax
            //   e8????????           |                     
            //   cc                   | int3                

        $sequence_6 = { 8bd8 895c2420 83fbff 743c b802000000 }
            // n = 5, score = 100
            //   8bd8                 | mov                 ebx, eax
            //   895c2420             | mov                 dword ptr [esp + 0x20], ebx
            //   83fbff               | cmp                 ebx, -1
            //   743c                 | je                  0x3e
            //   b802000000           | mov                 eax, 2

        $sequence_7 = { 8d858cfeffff 6868010000 50 e8???????? 83c418 c7461000000000 }
            // n = 6, score = 100
            //   8d858cfeffff         | lea                 eax, [ebp - 0x174]
            //   6868010000           | push                0x168
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c418               | add                 esp, 0x18
            //   c7461000000000       | mov                 dword ptr [esi + 0x10], 0

        $sequence_8 = { ff36 ff15???????? 83f801 7c1a 0103 8b8ddcf5ffff 50 }
            // n = 7, score = 100
            //   ff36                 | push                dword ptr [esi]
            //   ff15????????         |                     
            //   83f801               | cmp                 eax, 1
            //   7c1a                 | jl                  0x1c
            //   0103                 | add                 dword ptr [ebx], eax
            //   8b8ddcf5ffff         | mov                 ecx, dword ptr [ebp - 0xa24]
            //   50                   | push                eax

        $sequence_9 = { 8944241c c74424480f000000 c744244400000000 c644243400 }
            // n = 4, score = 100
            //   8944241c             | mov                 dword ptr [esp + 0x1c], eax
            //   c74424480f000000     | mov                 dword ptr [esp + 0x48], 0xf
            //   c744244400000000     | mov                 dword ptr [esp + 0x44], 0
            //   c644243400           | mov                 byte ptr [esp + 0x34], 0

    condition:
        7 of them and filesize < 247808
}