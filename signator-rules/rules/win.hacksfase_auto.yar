rule win_hacksfase_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.hacksfase."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.hacksfase"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d7c2414 50 50 f3ab 8b5500 }
            // n = 5, score = 100
            //   8d7c2414             | lea                 edi, [esp + 0x14]
            //   50                   | push                eax
            //   50                   | push                eax
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8b5500               | mov                 edx, dword ptr [ebp]

        $sequence_1 = { 8b0d???????? 51 ff15???????? 8a442410 a801 743e a1???????? }
            // n = 7, score = 100
            //   8b0d????????         |                     
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   8a442410             | mov                 al, byte ptr [esp + 0x10]
            //   a801                 | test                al, 1
            //   743e                 | je                  0x40
            //   a1????????           |                     

        $sequence_2 = { 50 895dfc ff15???????? 8bf0 59 }
            // n = 5, score = 100
            //   50                   | push                eax
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   59                   | pop                 ecx

        $sequence_3 = { 6800000840 6a00 6a01 e8???????? 8b15???????? 83c40c 50 }
            // n = 7, score = 100
            //   6800000840           | push                0x40080000
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   e8????????           |                     
            //   8b15????????         |                     
            //   83c40c               | add                 esp, 0xc
            //   50                   | push                eax

        $sequence_4 = { 33ff 51 57 68???????? }
            // n = 4, score = 100
            //   33ff                 | xor                 edi, edi
            //   51                   | push                ecx
            //   57                   | push                edi
            //   68????????           |                     

        $sequence_5 = { b9???????? e8???????? 68c8000000 eb05 68f4010000 }
            // n = 5, score = 100
            //   b9????????           |                     
            //   e8????????           |                     
            //   68c8000000           | push                0xc8
            //   eb05                 | jmp                 7
            //   68f4010000           | push                0x1f4

        $sequence_6 = { 85c0 a3???????? 0f8425020000 53 }
            // n = 4, score = 100
            //   85c0                 | test                eax, eax
            //   a3????????           |                     
            //   0f8425020000         | je                  0x22b
            //   53                   | push                ebx

        $sequence_7 = { 2bc6 a1???????? 745e 85c0 0f8451050000 50 }
            // n = 6, score = 100
            //   2bc6                 | sub                 eax, esi
            //   a1????????           |                     
            //   745e                 | je                  0x60
            //   85c0                 | test                eax, eax
            //   0f8451050000         | je                  0x557
            //   50                   | push                eax

        $sequence_8 = { 885dfc e8???????? 8b7dcc 3bfb 7466 395dc4 }
            // n = 6, score = 100
            //   885dfc               | mov                 byte ptr [ebp - 4], bl
            //   e8????????           |                     
            //   8b7dcc               | mov                 edi, dword ptr [ebp - 0x34]
            //   3bfb                 | cmp                 edi, ebx
            //   7466                 | je                  0x68
            //   395dc4               | cmp                 dword ptr [ebp - 0x3c], ebx

        $sequence_9 = { 832600 83c60c 4b 75ef 5e 5b }
            // n = 6, score = 100
            //   832600               | and                 dword ptr [esi], 0
            //   83c60c               | add                 esi, 0xc
            //   4b                   | dec                 ebx
            //   75ef                 | jne                 0xfffffff1
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

    condition:
        7 of them and filesize < 106496
}