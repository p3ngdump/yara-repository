rule win_chches_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.chches."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.chches"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffd2 50 8b4650 ffd0 eb03 8b75ec 8b45f8 }
            // n = 7, score = 200
            //   ffd2                 | call                edx
            //   50                   | push                eax
            //   8b4650               | mov                 eax, dword ptr [esi + 0x50]
            //   ffd0                 | call                eax
            //   eb03                 | jmp                 5
            //   8b75ec               | mov                 esi, dword ptr [ebp - 0x14]
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]

        $sequence_1 = { c645d0d9 c645d19b c645d2e3 c645d395 c645d48a c645d552 c645d693 }
            // n = 7, score = 200
            //   c645d0d9             | mov                 byte ptr [ebp - 0x30], 0xd9
            //   c645d19b             | mov                 byte ptr [ebp - 0x2f], 0x9b
            //   c645d2e3             | mov                 byte ptr [ebp - 0x2e], 0xe3
            //   c645d395             | mov                 byte ptr [ebp - 0x2d], 0x95
            //   c645d48a             | mov                 byte ptr [ebp - 0x2c], 0x8a
            //   c645d552             | mov                 byte ptr [ebp - 0x2b], 0x52
            //   c645d693             | mov                 byte ptr [ebp - 0x2a], 0x93

        $sequence_2 = { 52 8b55f0 52 50 8b8620020000 51 ffd0 }
            // n = 7, score = 200
            //   52                   | push                edx
            //   8b55f0               | mov                 edx, dword ptr [ebp - 0x10]
            //   52                   | push                edx
            //   50                   | push                eax
            //   8b8620020000         | mov                 eax, dword ptr [esi + 0x220]
            //   51                   | push                ecx
            //   ffd0                 | call                eax

        $sequence_3 = { c68565ffffff38 c68566fffffff4 c68567ffffff21 c68568ffffffe2 c68569ffffff3d c6856affffffab c6856bfffffffc }
            // n = 7, score = 200
            //   c68565ffffff38       | mov                 byte ptr [ebp - 0x9b], 0x38
            //   c68566fffffff4       | mov                 byte ptr [ebp - 0x9a], 0xf4
            //   c68567ffffff21       | mov                 byte ptr [ebp - 0x99], 0x21
            //   c68568ffffffe2       | mov                 byte ptr [ebp - 0x98], 0xe2
            //   c68569ffffff3d       | mov                 byte ptr [ebp - 0x97], 0x3d
            //   c6856affffffab       | mov                 byte ptr [ebp - 0x96], 0xab
            //   c6856bfffffffc       | mov                 byte ptr [ebp - 0x95], 0xfc

        $sequence_4 = { 3bc7 0f8d43ffffff 397c2410 7411 8b442410 8b4e44 50 }
            // n = 7, score = 200
            //   3bc7                 | cmp                 eax, edi
            //   0f8d43ffffff         | jge                 0xffffff49
            //   397c2410             | cmp                 dword ptr [esp + 0x10], edi
            //   7411                 | je                  0x13
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   8b4e44               | mov                 ecx, dword ptr [esi + 0x44]
            //   50                   | push                eax

        $sequence_5 = { 0f84aa010000 8b4660 8bd1 52 ffd0 8b5644 8bd8 }
            // n = 7, score = 200
            //   0f84aa010000         | je                  0x1b0
            //   8b4660               | mov                 eax, dword ptr [esi + 0x60]
            //   8bd1                 | mov                 edx, ecx
            //   52                   | push                edx
            //   ffd0                 | call                eax
            //   8b5644               | mov                 edx, dword ptr [esi + 0x44]
            //   8bd8                 | mov                 ebx, eax

        $sequence_6 = { 8b4118 8d5701 52 3bc3 750f 8b4644 6a08 }
            // n = 7, score = 200
            //   8b4118               | mov                 eax, dword ptr [ecx + 0x18]
            //   8d5701               | lea                 edx, [edi + 1]
            //   52                   | push                edx
            //   3bc3                 | cmp                 eax, ebx
            //   750f                 | jne                 0x11
            //   8b4644               | mov                 eax, dword ptr [esi + 0x44]
            //   6a08                 | push                8

        $sequence_7 = { 8b5674 6aff ffd2 8bc7 5f 5e 5b }
            // n = 7, score = 200
            //   8b5674               | mov                 edx, dword ptr [esi + 0x74]
            //   6aff                 | push                -1
            //   ffd2                 | call                edx
            //   8bc7                 | mov                 eax, edi
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_8 = { 7413 57 8b7df8 8b5744 6a00 ffd2 50 }
            // n = 7, score = 200
            //   7413                 | je                  0x15
            //   57                   | push                edi
            //   8b7df8               | mov                 edi, dword ptr [ebp - 8]
            //   8b5744               | mov                 edx, dword ptr [edi + 0x44]
            //   6a00                 | push                0
            //   ffd2                 | call                edx
            //   50                   | push                eax

        $sequence_9 = { 7408 33c9 66890b 83c302 8b75f4 eb97 33db }
            // n = 7, score = 200
            //   7408                 | je                  0xa
            //   33c9                 | xor                 ecx, ecx
            //   66890b               | mov                 word ptr [ebx], cx
            //   83c302               | add                 ebx, 2
            //   8b75f4               | mov                 esi, dword ptr [ebp - 0xc]
            //   eb97                 | jmp                 0xffffff99
            //   33db                 | xor                 ebx, ebx

    condition:
        7 of them and filesize < 122880
}