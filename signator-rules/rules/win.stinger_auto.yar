rule win_stinger_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.stinger."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.stinger"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83c404 6805000080 6a00 8b45f0 85c0 7505 b8???????? }
            // n = 7, score = 200
            //   83c404               | add                 esp, 4
            //   6805000080           | push                0x80000005
            //   6a00                 | push                0
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   85c0                 | test                eax, eax
            //   7505                 | jne                 7
            //   b8????????           |                     

        $sequence_1 = { b800000000 e8???????? 83c410 8945ec 8b5df0 85db 7409 }
            // n = 7, score = 200
            //   b800000000           | mov                 eax, 0
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   8b5df0               | mov                 ebx, dword ptr [ebp - 0x10]
            //   85db                 | test                ebx, ebx
            //   7409                 | je                  0xb

        $sequence_2 = { 7409 53 e8???????? 83c404 8b5df4 e8???????? 53 }
            // n = 7, score = 200
            //   7409                 | je                  0xb
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b5df4               | mov                 ebx, dword ptr [ebp - 0xc]
            //   e8????????           |                     
            //   53                   | push                ebx

        $sequence_3 = { 83c404 03d8 895df0 8b5df0 c60300 }
            // n = 5, score = 200
            //   83c404               | add                 esp, 4
            //   03d8                 | add                 ebx, eax
            //   895df0               | mov                 dword ptr [ebp - 0x10], ebx
            //   8b5df0               | mov                 ebx, dword ptr [ebp - 0x10]
            //   c60300               | mov                 byte ptr [ebx], 0

        $sequence_4 = { 83c608 b900010000 33db 3bdf 7202 33db 8a2413 }
            // n = 7, score = 200
            //   83c608               | add                 esi, 8
            //   b900010000           | mov                 ecx, 0x100
            //   33db                 | xor                 ebx, ebx
            //   3bdf                 | cmp                 ebx, edi
            //   7202                 | jb                  4
            //   33db                 | xor                 ebx, ebx
            //   8a2413               | mov                 ah, byte ptr [ebx + edx]

        $sequence_5 = { 8b45c8 85c0 7505 b8???????? 50 6802000000 }
            // n = 6, score = 200
            //   8b45c8               | mov                 eax, dword ptr [ebp - 0x38]
            //   85c0                 | test                eax, eax
            //   7505                 | jne                 7
            //   b8????????           |                     
            //   50                   | push                eax
            //   6802000000           | push                2

        $sequence_6 = { 0f8505000000 e9???????? 6801030080 6a00 }
            // n = 4, score = 200
            //   0f8505000000         | jne                 0xb
            //   e9????????           |                     
            //   6801030080           | push                0x80000301
            //   6a00                 | push                0

        $sequence_7 = { 50 6802000000 bb6c020000 e8???????? 83c41c 8b5dec 85db }
            // n = 7, score = 200
            //   50                   | push                eax
            //   6802000000           | push                2
            //   bb6c020000           | mov                 ebx, 0x26c
            //   e8????????           |                     
            //   83c41c               | add                 esp, 0x1c
            //   8b5dec               | mov                 ebx, dword ptr [ebp - 0x14]
            //   85db                 | test                ebx, ebx

        $sequence_8 = { 85c0 7537 8d4c241c e8???????? 8d4c241c c7442438ffffffff c744241cd8904000 }
            // n = 7, score = 200
            //   85c0                 | test                eax, eax
            //   7537                 | jne                 0x39
            //   8d4c241c             | lea                 ecx, [esp + 0x1c]
            //   e8????????           |                     
            //   8d4c241c             | lea                 ecx, [esp + 0x1c]
            //   c7442438ffffffff     | mov                 dword ptr [esp + 0x38], 0xffffffff
            //   c744241cd8904000     | mov                 dword ptr [esp + 0x1c], 0x4090d8

        $sequence_9 = { e8???????? 83c404 33c9 8d45fc 8bd8 }
            // n = 5, score = 200
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   33c9                 | xor                 ecx, ecx
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   8bd8                 | mov                 ebx, eax

    condition:
        7 of them and filesize < 197096
}