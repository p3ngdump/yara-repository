rule win_pirpi_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.pirpi."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pirpi"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 57 8b7c2420 85ed }
            // n = 4, score = 200
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b7c2420             | mov                 edi, dword ptr [esp + 0x20]
            //   85ed                 | test                ebp, ebp

        $sequence_1 = { 50 56 55 53 ff15???????? 53 ff15???????? }
            // n = 7, score = 200
            //   50                   | push                eax
            //   56                   | push                esi
            //   55                   | push                ebp
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   53                   | push                ebx
            //   ff15????????         |                     

        $sequence_2 = { a1???????? 8b8c24ec000000 55 03cb 51 50 e8???????? }
            // n = 7, score = 200
            //   a1????????           |                     
            //   8b8c24ec000000       | mov                 ecx, dword ptr [esp + 0xec]
            //   55                   | push                ebp
            //   03cb                 | add                 ecx, ebx
            //   51                   | push                ecx
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_3 = { 83c410 c20800 57 8bfd 83c9ff }
            // n = 5, score = 200
            //   83c410               | add                 esp, 0x10
            //   c20800               | ret                 8
            //   57                   | push                edi
            //   8bfd                 | mov                 edi, ebp
            //   83c9ff               | or                  ecx, 0xffffffff

        $sequence_4 = { f3a4 ffd3 8bd8 83c408 }
            // n = 4, score = 200
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   ffd3                 | call                ebx
            //   8bd8                 | mov                 ebx, eax
            //   83c408               | add                 esp, 8

        $sequence_5 = { 5e 5d 5b c3 85f6 7406 c70600000000 }
            // n = 7, score = 200
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   5b                   | pop                 ebx
            //   c3                   | ret                 
            //   85f6                 | test                esi, esi
            //   7406                 | je                  8
            //   c70600000000         | mov                 dword ptr [esi], 0

        $sequence_6 = { 8bce 50 e8???????? 8bce e8???????? 56 }
            // n = 6, score = 200
            //   8bce                 | mov                 ecx, esi
            //   50                   | push                eax
            //   e8????????           |                     
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   56                   | push                esi

        $sequence_7 = { 8d5c03ff ebb7 6a01 8d8c24cc000000 }
            // n = 4, score = 200
            //   8d5c03ff             | lea                 ebx, [ebx + eax - 1]
            //   ebb7                 | jmp                 0xffffffb9
            //   6a01                 | push                1
            //   8d8c24cc000000       | lea                 ecx, [esp + 0xcc]

        $sequence_8 = { 8b54244c 83c408 33db 33ed 8b02 }
            // n = 5, score = 200
            //   8b54244c             | mov                 edx, dword ptr [esp + 0x4c]
            //   83c408               | add                 esp, 8
            //   33db                 | xor                 ebx, ebx
            //   33ed                 | xor                 ebp, ebp
            //   8b02                 | mov                 eax, dword ptr [edx]

        $sequence_9 = { 03c2 8b94245c010000 c1f80a 50 }
            // n = 4, score = 200
            //   03c2                 | add                 eax, edx
            //   8b94245c010000       | mov                 edx, dword ptr [esp + 0x15c]
            //   c1f80a               | sar                 eax, 0xa
            //   50                   | push                eax

    condition:
        7 of them and filesize < 327680
}