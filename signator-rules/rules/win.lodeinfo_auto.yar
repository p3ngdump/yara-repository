rule win_lodeinfo_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.lodeinfo."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.lodeinfo"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 2bc7 5f 1bd3 5b c9 c20c00 e9???????? }
            // n = 7, score = 200
            //   2bc7                 | sub                 eax, edi
            //   5f                   | pop                 edi
            //   1bd3                 | sbb                 edx, ebx
            //   5b                   | pop                 ebx
            //   c9                   | leave               
            //   c20c00               | ret                 0xc
            //   e9????????           |                     

        $sequence_1 = { 8bf0 83c404 8b45fc eb07 be59000000 }
            // n = 5, score = 200
            //   8bf0                 | mov                 esi, eax
            //   83c404               | add                 esp, 4
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   eb07                 | jmp                 9
            //   be59000000           | mov                 esi, 0x59

        $sequence_2 = { 85d2 750b 5f 8806 33c0 5e 5b }
            // n = 7, score = 200
            //   85d2                 | test                edx, edx
            //   750b                 | jne                 0xd
            //   5f                   | pop                 edi
            //   8806                 | mov                 byte ptr [esi], al
            //   33c0                 | xor                 eax, eax
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_3 = { 03c8 0fb64213 c1e108 03c8 898ea4000000 0fb64a14 0fb64215 }
            // n = 7, score = 200
            //   03c8                 | add                 ecx, eax
            //   0fb64213             | movzx               eax, byte ptr [edx + 0x13]
            //   c1e108               | shl                 ecx, 8
            //   03c8                 | add                 ecx, eax
            //   898ea4000000         | mov                 dword ptr [esi + 0xa4], ecx
            //   0fb64a14             | movzx               ecx, byte ptr [edx + 0x14]
            //   0fb64215             | movzx               eax, byte ptr [edx + 0x15]

        $sequence_4 = { 41 898d50ffffff 8bca 83e107 c1ea03 0fafc8 0fafd0 }
            // n = 7, score = 200
            //   41                   | inc                 ecx
            //   898d50ffffff         | mov                 dword ptr [ebp - 0xb0], ecx
            //   8bca                 | mov                 ecx, edx
            //   83e107               | and                 ecx, 7
            //   c1ea03               | shr                 edx, 3
            //   0fafc8               | imul                ecx, eax
            //   0fafd0               | imul                edx, eax

        $sequence_5 = { e8???????? 33f6 297c240c 742c 8b5c240c }
            // n = 5, score = 200
            //   e8????????           |                     
            //   33f6                 | xor                 esi, esi
            //   297c240c             | sub                 dword ptr [esp + 0xc], edi
            //   742c                 | je                  0x2e
            //   8b5c240c             | mov                 ebx, dword ptr [esp + 0xc]

        $sequence_6 = { 3b4da8 7539 8b5514 51 8b4d10 50 }
            // n = 6, score = 200
            //   3b4da8               | cmp                 ecx, dword ptr [ebp - 0x58]
            //   7539                 | jne                 0x3b
            //   8b5514               | mov                 edx, dword ptr [ebp + 0x14]
            //   51                   | push                ecx
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   50                   | push                eax

        $sequence_7 = { b9???????? e8???????? 85db 0f8437010000 33d2 895c2418 }
            // n = 6, score = 200
            //   b9????????           |                     
            //   e8????????           |                     
            //   85db                 | test                ebx, ebx
            //   0f8437010000         | je                  0x13d
            //   33d2                 | xor                 edx, edx
            //   895c2418             | mov                 dword ptr [esp + 0x18], ebx

        $sequence_8 = { d1ee 2bce 3bd1 7607 8bc8 8945ec eb0b }
            // n = 7, score = 200
            //   d1ee                 | shr                 esi, 1
            //   2bce                 | sub                 ecx, esi
            //   3bd1                 | cmp                 edx, ecx
            //   7607                 | jbe                 9
            //   8bc8                 | mov                 ecx, eax
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   eb0b                 | jmp                 0xd

        $sequence_9 = { 884dff 0fb6c8 8845fd 0fb7c3 0fafc8 8a45ff 0fb6c0 }
            // n = 7, score = 200
            //   884dff               | mov                 byte ptr [ebp - 1], cl
            //   0fb6c8               | movzx               ecx, al
            //   8845fd               | mov                 byte ptr [ebp - 3], al
            //   0fb7c3               | movzx               eax, bx
            //   0fafc8               | imul                ecx, eax
            //   8a45ff               | mov                 al, byte ptr [ebp - 1]
            //   0fb6c0               | movzx               eax, al

    condition:
        7 of them and filesize < 712704
}