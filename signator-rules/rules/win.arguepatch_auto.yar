rule win_arguepatch_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.arguepatch."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.arguepatch"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { cc 6826010000 e8???????? 803d????????00 7401 cc 6827010000 }
            // n = 7, score = 100
            //   cc                   | int3                
            //   6826010000           | push                0x126
            //   e8????????           |                     
            //   803d????????00       |                     
            //   7401                 | je                  3
            //   cc                   | int3                
            //   6827010000           | push                0x127

        $sequence_1 = { e8???????? 32db ff75e4 c745fc02000000 e8???????? 8ac3 8b4df4 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   32db                 | xor                 bl, bl
            //   ff75e4               | push                dword ptr [ebp - 0x1c]
            //   c745fc02000000       | mov                 dword ptr [ebp - 4], 2
            //   e8????????           |                     
            //   8ac3                 | mov                 al, bl
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]

        $sequence_2 = { 8d04c8 83c0e8 50 8d45d8 50 e8???????? 8b87f0000000 }
            // n = 7, score = 100
            //   8d04c8               | lea                 eax, [eax + ecx*8]
            //   83c0e8               | add                 eax, -0x18
            //   50                   | push                eax
            //   8d45d8               | lea                 eax, [ebp - 0x28]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b87f0000000         | mov                 eax, dword ptr [edi + 0xf0]

        $sequence_3 = { 8bc7 8bcf 83e03f c1f906 6bf030 03348d80a04900 837e18ff }
            // n = 7, score = 100
            //   8bc7                 | mov                 eax, edi
            //   8bcf                 | mov                 ecx, edi
            //   83e03f               | and                 eax, 0x3f
            //   c1f906               | sar                 ecx, 6
            //   6bf030               | imul                esi, eax, 0x30
            //   03348d80a04900       | add                 esi, dword ptr [ecx*4 + 0x49a080]
            //   837e18ff             | cmp                 dword ptr [esi + 0x18], -1

        $sequence_4 = { e8???????? 8bd8 83c404 85db 0f840a020000 56 ff74241c }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8bd8                 | mov                 ebx, eax
            //   83c404               | add                 esp, 4
            //   85db                 | test                ebx, ebx
            //   0f840a020000         | je                  0x210
            //   56                   | push                esi
            //   ff74241c             | push                dword ptr [esp + 0x1c]

        $sequence_5 = { 83f819 7309 8b048dbcd393fe eb14 51 e8???????? eb0c }
            // n = 7, score = 100
            //   83f819               | cmp                 eax, 0x19
            //   7309                 | jae                 0xb
            //   8b048dbcd393fe       | mov                 eax, dword ptr [ecx*4 - 0x16c2c44]
            //   eb14                 | jmp                 0x16
            //   51                   | push                ecx
            //   e8????????           |                     
            //   eb0c                 | jmp                 0xe

        $sequence_6 = { 0f8e81000000 8a0a 884c2418 56 90 03c7 3808 }
            // n = 7, score = 100
            //   0f8e81000000         | jle                 0x87
            //   8a0a                 | mov                 cl, byte ptr [edx]
            //   884c2418             | mov                 byte ptr [esp + 0x18], cl
            //   56                   | push                esi
            //   90                   | nop                 
            //   03c7                 | add                 eax, edi
            //   3808                 | cmp                 byte ptr [eax], cl

        $sequence_7 = { 0fb6c3 50 e8???????? 83c404 85c0 750e 80fb5f }
            // n = 7, score = 100
            //   0fb6c3               | movzx               eax, bl
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   85c0                 | test                eax, eax
            //   750e                 | jne                 0x10
            //   80fb5f               | cmp                 bl, 0x5f

        $sequence_8 = { 881c01 ff4604 ff4778 33c0 5f 5e 5b }
            // n = 7, score = 100
            //   881c01               | mov                 byte ptr [ecx + eax], bl
            //   ff4604               | inc                 dword ptr [esi + 4]
            //   ff4778               | inc                 dword ptr [edi + 0x78]
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_9 = { c7856cffffff00000000 c78570ffffff00000000 c78574ffffff00000000 ffb6d4000000 8d8d6cffffff c645fc02 e8???????? }
            // n = 7, score = 100
            //   c7856cffffff00000000     | mov    dword ptr [ebp - 0x94], 0
            //   c78570ffffff00000000     | mov    dword ptr [ebp - 0x90], 0
            //   c78574ffffff00000000     | mov    dword ptr [ebp - 0x8c], 0
            //   ffb6d4000000         | push                dword ptr [esi + 0xd4]
            //   8d8d6cffffff         | lea                 ecx, [ebp - 0x94]
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   e8????????           |                     

    condition:
        7 of them and filesize < 1318912
}