rule win_acridrain_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.acridrain."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.acridrain"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 8be5 5d c3 85c9 74e9 3975e0 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   85c9                 | test                ecx, ecx
            //   74e9                 | je                  0xffffffeb
            //   3975e0               | cmp                 dword ptr [ebp - 0x20], esi

        $sequence_1 = { e9???????? 0fb644242d 8d48a6 83f903 0f87f4000000 ff248dd4a14b00 b9???????? }
            // n = 7, score = 200
            //   e9????????           |                     
            //   0fb644242d           | movzx               eax, byte ptr [esp + 0x2d]
            //   8d48a6               | lea                 ecx, [eax - 0x5a]
            //   83f903               | cmp                 ecx, 3
            //   0f87f4000000         | ja                  0xfa
            //   ff248dd4a14b00       | jmp                 dword ptr [ecx*4 + 0x4ba1d4]
            //   b9????????           |                     

        $sequence_2 = { 8b4dfc 8b55f4 d1e9 894dfc 3b5628 0f82befcffff b801000000 }
            // n = 7, score = 200
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   d1e9                 | shr                 ecx, 1
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   3b5628               | cmp                 edx, dword ptr [esi + 0x28]
            //   0f82befcffff         | jb                  0xfffffcc4
            //   b801000000           | mov                 eax, 1

        $sequence_3 = { eb37 8d4201 894620 8d0c92 8b4604 66c704882500 c644880300 }
            // n = 7, score = 200
            //   eb37                 | jmp                 0x39
            //   8d4201               | lea                 eax, [edx + 1]
            //   894620               | mov                 dword ptr [esi + 0x20], eax
            //   8d0c92               | lea                 ecx, [edx + edx*4]
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   66c704882500         | mov                 word ptr [eax + ecx*4], 0x25
            //   c644880300           | mov                 byte ptr [eax + ecx*4 + 3], 0

        $sequence_4 = { ff750c ff7718 56 e8???????? 83c40c 894718 83be4c01000000 }
            // n = 7, score = 200
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7718               | push                dword ptr [edi + 0x18]
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   894718               | mov                 dword ptr [edi + 0x18], eax
            //   83be4c01000000       | cmp                 dword ptr [esi + 0x14c], 0

        $sequence_5 = { 8d45e4 ff75cc 50 8b45d8 50 68???????? 53 }
            // n = 7, score = 200
            //   8d45e4               | lea                 eax, [ebp - 0x1c]
            //   ff75cc               | push                dword ptr [ebp - 0x34]
            //   50                   | push                eax
            //   8b45d8               | mov                 eax, dword ptr [ebp - 0x28]
            //   50                   | push                eax
            //   68????????           |                     
            //   53                   | push                ebx

        $sequence_6 = { e8???????? c6460a01 b801000000 66894630 83c410 0fb74f58 83e103 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   c6460a01             | mov                 byte ptr [esi + 0xa], 1
            //   b801000000           | mov                 eax, 1
            //   66894630             | mov                 word ptr [esi + 0x30], ax
            //   83c410               | add                 esp, 0x10
            //   0fb74f58             | movzx               ecx, word ptr [edi + 0x58]
            //   83e103               | and                 ecx, 3

        $sequence_7 = { 8d4e20 e9???????? 833d????????00 743f a1???????? 85c0 740e }
            // n = 7, score = 200
            //   8d4e20               | lea                 ecx, [esi + 0x20]
            //   e9????????           |                     
            //   833d????????00       |                     
            //   743f                 | je                  0x41
            //   a1????????           |                     
            //   85c0                 | test                eax, eax
            //   740e                 | je                  0x10

        $sequence_8 = { e9???????? 80ff5d 7408 5f 5e 5d 33c0 }
            // n = 7, score = 200
            //   e9????????           |                     
            //   80ff5d               | cmp                 bh, 0x5d
            //   7408                 | je                  0xa
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   33c0                 | xor                 eax, eax

        $sequence_9 = { ffd0 56 ffb5d0fdffff 8985d4fdffff e8???????? 8b85f0fdffff 85c0 }
            // n = 7, score = 200
            //   ffd0                 | call                eax
            //   56                   | push                esi
            //   ffb5d0fdffff         | push                dword ptr [ebp - 0x230]
            //   8985d4fdffff         | mov                 dword ptr [ebp - 0x22c], eax
            //   e8????????           |                     
            //   8b85f0fdffff         | mov                 eax, dword ptr [ebp - 0x210]
            //   85c0                 | test                eax, eax

    condition:
        7 of them and filesize < 2244608
}