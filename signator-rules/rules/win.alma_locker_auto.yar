rule win_alma_locker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.alma_locker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.alma_locker"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a04 58 6bc000 c7801c61021002000000 6a04 58 }
            // n = 6, score = 100
            //   6a04                 | push                4
            //   58                   | pop                 eax
            //   6bc000               | imul                eax, eax, 0
            //   c7801c61021002000000     | mov    dword ptr [eax + 0x1002611c], 2
            //   6a04                 | push                4
            //   58                   | pop                 eax

        $sequence_1 = { 8bd3 8d8da0fbffff e8???????? 83c404 6a00 }
            // n = 5, score = 100
            //   8bd3                 | mov                 edx, ebx
            //   8d8da0fbffff         | lea                 ecx, [ebp - 0x460]
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   6a00                 | push                0

        $sequence_2 = { c7461000000000 33ff 668906 66390500000000 7425 }
            // n = 5, score = 100
            //   c7461000000000       | mov                 dword ptr [esi + 0x10], 0
            //   33ff                 | xor                 edi, edi
            //   668906               | mov                 word ptr [esi], ax
            //   66390500000000       | cmp                 word ptr [0], ax
            //   7425                 | je                  0x27

        $sequence_3 = { 8d857cfbffff 50 8d8db8fdffff e8???????? 83ec08 c645fc03 }
            // n = 6, score = 100
            //   8d857cfbffff         | lea                 eax, [ebp - 0x484]
            //   50                   | push                eax
            //   8d8db8fdffff         | lea                 ecx, [ebp - 0x248]
            //   e8????????           |                     
            //   83ec08               | sub                 esp, 8
            //   c645fc03             | mov                 byte ptr [ebp - 4], 3

        $sequence_4 = { 56 ffb570ffffff ff15???????? 85c0 7485 }
            // n = 5, score = 100
            //   56                   | push                esi
            //   ffb570ffffff         | push                dword ptr [ebp - 0x90]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7485                 | je                  0xffffff87

        $sequence_5 = { ffb510fbffff e8???????? 83c404 83bdb4fbffff08 }
            // n = 4, score = 100
            //   ffb510fbffff         | push                dword ptr [ebp - 0x4f0]
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   83bdb4fbffff08       | cmp                 dword ptr [ebp - 0x44c], 8

        $sequence_6 = { 8d8d58fbffff c78568fbffff00000000 66898558fbffff e8???????? 6aff c745fc00000000 }
            // n = 6, score = 100
            //   8d8d58fbffff         | lea                 ecx, [ebp - 0x4a8]
            //   c78568fbffff00000000     | mov    dword ptr [ebp - 0x498], 0
            //   66898558fbffff       | mov                 word ptr [ebp - 0x4a8], ax
            //   e8????????           |                     
            //   6aff                 | push                -1
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0

        $sequence_7 = { 8d45bc 8b1d???????? 8d7da4 0f4345bc 837db808 }
            // n = 5, score = 100
            //   8d45bc               | lea                 eax, [ebp - 0x44]
            //   8b1d????????         |                     
            //   8d7da4               | lea                 edi, [ebp - 0x5c]
            //   0f4345bc             | cmovae              eax, dword ptr [ebp - 0x44]
            //   837db808             | cmp                 dword ptr [ebp - 0x48], 8

        $sequence_8 = { c745d00f000000 c745cc00000000 c645bc00 7219 ff758c e8???????? }
            // n = 6, score = 100
            //   c745d00f000000       | mov                 dword ptr [ebp - 0x30], 0xf
            //   c745cc00000000       | mov                 dword ptr [ebp - 0x34], 0
            //   c645bc00             | mov                 byte ptr [ebp - 0x44], 0
            //   7219                 | jb                  0x1b
            //   ff758c               | push                dword ptr [ebp - 0x74]
            //   e8????????           |                     

        $sequence_9 = { 83c404 c645fc00 83bde4fdffff08 0f823b020000 ffb5d0fdffff e9???????? c785ccfdffff07000000 }
            // n = 7, score = 100
            //   83c404               | add                 esp, 4
            //   c645fc00             | mov                 byte ptr [ebp - 4], 0
            //   83bde4fdffff08       | cmp                 dword ptr [ebp - 0x21c], 8
            //   0f823b020000         | jb                  0x241
            //   ffb5d0fdffff         | push                dword ptr [ebp - 0x230]
            //   e9????????           |                     
            //   c785ccfdffff07000000     | mov    dword ptr [ebp - 0x234], 7

    condition:
        7 of them and filesize < 335872
}