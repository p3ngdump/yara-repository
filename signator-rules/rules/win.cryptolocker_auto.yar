rule win_cryptolocker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.cryptolocker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cryptolocker"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5e 8be5 5d c20800 8d45fc 50 ff7508 }
            // n = 7, score = 600
            //   5e                   | pop                 esi
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c20800               | ret                 8
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_1 = { 0f85eb000000 807e3800 7405 8b4634 eb02 33c0 }
            // n = 6, score = 600
            //   0f85eb000000         | jne                 0xf1
            //   807e3800             | cmp                 byte ptr [esi + 0x38], 0
            //   7405                 | je                  7
            //   8b4634               | mov                 eax, dword ptr [esi + 0x34]
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax

        $sequence_2 = { 8bec 53 8b5d08 56 8bf1 3b5e08 }
            // n = 6, score = 600
            //   8bec                 | mov                 ebp, esp
            //   53                   | push                ebx
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   3b5e08               | cmp                 ebx, dword ptr [esi + 8]

        $sequence_3 = { 6a00 8d45ec 50 8b03 8b4804 03cb e8???????? }
            // n = 7, score = 600
            //   6a00                 | push                0
            //   8d45ec               | lea                 eax, [ebp - 0x14]
            //   50                   | push                eax
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   8b4804               | mov                 ecx, dword ptr [eax + 4]
            //   03cb                 | add                 ecx, ebx
            //   e8????????           |                     

        $sequence_4 = { 5e c3 8b7208 3bc6 7227 8b4a04 8d0c4e }
            // n = 7, score = 600
            //   5e                   | pop                 esi
            //   c3                   | ret                 
            //   8b7208               | mov                 esi, dword ptr [edx + 8]
            //   3bc6                 | cmp                 eax, esi
            //   7227                 | jb                  0x29
            //   8b4a04               | mov                 ecx, dword ptr [edx + 4]
            //   8d0c4e               | lea                 ecx, [esi + ecx*2]

        $sequence_5 = { ff35???????? ffd3 8a4517 84c0 0f8431010000 83c604 }
            // n = 6, score = 600
            //   ff35????????         |                     
            //   ffd3                 | call                ebx
            //   8a4517               | mov                 al, byte ptr [ebp + 0x17]
            //   84c0                 | test                al, al
            //   0f8431010000         | je                  0x137
            //   83c604               | add                 esi, 4

        $sequence_6 = { c745a400000000 c745a800000000 c745ac00000000 c745b400000001 c745b800000000 ff15???????? }
            // n = 6, score = 600
            //   c745a400000000       | mov                 dword ptr [ebp - 0x5c], 0
            //   c745a800000000       | mov                 dword ptr [ebp - 0x58], 0
            //   c745ac00000000       | mov                 dword ptr [ebp - 0x54], 0
            //   c745b400000001       | mov                 dword ptr [ebp - 0x4c], 0x1000000
            //   c745b800000000       | mov                 dword ptr [ebp - 0x48], 0
            //   ff15????????         |                     

        $sequence_7 = { 8bd9 895df4 85ff 7407 0f57c0 660fd607 f605????????01 }
            // n = 7, score = 600
            //   8bd9                 | mov                 ebx, ecx
            //   895df4               | mov                 dword ptr [ebp - 0xc], ebx
            //   85ff                 | test                edi, edi
            //   7407                 | je                  9
            //   0f57c0               | xorps               xmm0, xmm0
            //   660fd607             | movq                qword ptr [edi], xmm0
            //   f605????????01       |                     

        $sequence_8 = { ff15???????? 8b4604 8b4004 ff743008 ff15???????? 5f 5e }
            // n = 7, score = 600
            //   ff15????????         |                     
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   ff743008             | push                dword ptr [eax + esi + 8]
            //   ff15????????         |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_9 = { c745ac00000000 c745b400000001 c745b800000000 ff15???????? }
            // n = 4, score = 600
            //   c745ac00000000       | mov                 dword ptr [ebp - 0x54], 0
            //   c745b400000001       | mov                 dword ptr [ebp - 0x4c], 0x1000000
            //   c745b800000000       | mov                 dword ptr [ebp - 0x48], 0
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 778240
}