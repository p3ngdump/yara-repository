rule win_alreay_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.alreay."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.alreay"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 68???????? e8???????? 8be8 83c414 85ed 0f8409080000 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   68????????           |                     
            //   e8????????           |                     
            //   8be8                 | mov                 ebp, eax
            //   83c414               | add                 esp, 0x14
            //   85ed                 | test                ebp, ebp
            //   0f8409080000         | je                  0x80f

        $sequence_1 = { 8bca 83e103 f3a4 8bb42498020000 03e8 8d44241c 8d4c2428 }
            // n = 7, score = 100
            //   8bca                 | mov                 ecx, edx
            //   83e103               | and                 ecx, 3
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8bb42498020000       | mov                 esi, dword ptr [esp + 0x298]
            //   03e8                 | add                 ebp, eax
            //   8d44241c             | lea                 eax, [esp + 0x1c]
            //   8d4c2428             | lea                 ecx, [esp + 0x28]

        $sequence_2 = { 8b4c245c 8d048d00000000 8b4c2460 8bd0 48 85d2 7408 }
            // n = 7, score = 100
            //   8b4c245c             | mov                 ecx, dword ptr [esp + 0x5c]
            //   8d048d00000000       | lea                 eax, [ecx*4]
            //   8b4c2460             | mov                 ecx, dword ptr [esp + 0x60]
            //   8bd0                 | mov                 edx, eax
            //   48                   | dec                 eax
            //   85d2                 | test                edx, edx
            //   7408                 | je                  0xa

        $sequence_3 = { 8d542450 52 e8???????? 83c408 85f6 7409 57 }
            // n = 7, score = 100
            //   8d542450             | lea                 edx, [esp + 0x50]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   85f6                 | test                esi, esi
            //   7409                 | je                  0xb
            //   57                   | push                edi

        $sequence_4 = { 8b742410 23d8 03f7 8b7c2414 0bdd 83c720 03de }
            // n = 7, score = 100
            //   8b742410             | mov                 esi, dword ptr [esp + 0x10]
            //   23d8                 | and                 ebx, eax
            //   03f7                 | add                 esi, edi
            //   8b7c2414             | mov                 edi, dword ptr [esp + 0x14]
            //   0bdd                 | or                  ebx, ebp
            //   83c720               | add                 edi, 0x20
            //   03de                 | add                 ebx, esi

        $sequence_5 = { e9???????? 8b4008 89442404 e9???????? 8b4008 89442404 e9???????? }
            // n = 7, score = 100
            //   e9????????           |                     
            //   8b4008               | mov                 eax, dword ptr [eax + 8]
            //   89442404             | mov                 dword ptr [esp + 4], eax
            //   e9????????           |                     
            //   8b4008               | mov                 eax, dword ptr [eax + 8]
            //   89442404             | mov                 dword ptr [esp + 4], eax
            //   e9????????           |                     

        $sequence_6 = { 8d54241c 55 52 e8???????? 8bf0 83c414 3bf5 }
            // n = 7, score = 100
            //   8d54241c             | lea                 edx, [esp + 0x1c]
            //   55                   | push                ebp
            //   52                   | push                edx
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   83c414               | add                 esp, 0x14
            //   3bf5                 | cmp                 esi, ebp

        $sequence_7 = { 8b4d00 f681cc00000001 7507 c745040f000000 8b89cc000000 83e101 80f901 }
            // n = 7, score = 100
            //   8b4d00               | mov                 ecx, dword ptr [ebp]
            //   f681cc00000001       | test                byte ptr [ecx + 0xcc], 1
            //   7507                 | jne                 9
            //   c745040f000000       | mov                 dword ptr [ebp + 4], 0xf
            //   8b89cc000000         | mov                 ecx, dword ptr [ecx + 0xcc]
            //   83e101               | and                 ecx, 1
            //   80f901               | cmp                 cl, 1

        $sequence_8 = { 8a16 8bcf 84d2 8bc6 741d 8a10 80fa5c }
            // n = 7, score = 100
            //   8a16                 | mov                 dl, byte ptr [esi]
            //   8bcf                 | mov                 ecx, edi
            //   84d2                 | test                dl, dl
            //   8bc6                 | mov                 eax, esi
            //   741d                 | je                  0x1f
            //   8a10                 | mov                 dl, byte ptr [eax]
            //   80fa5c               | cmp                 dl, 0x5c

        $sequence_9 = { c3 c60301 43 8bce 4e 85c9 761e }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   c60301               | mov                 byte ptr [ebx], 1
            //   43                   | inc                 ebx
            //   8bce                 | mov                 ecx, esi
            //   4e                   | dec                 esi
            //   85c9                 | test                ecx, ecx
            //   761e                 | jbe                 0x20

    condition:
        7 of them and filesize < 1867776
}