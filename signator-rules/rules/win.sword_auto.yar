rule win_sword_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.sword."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.sword"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83d8ff 3bc3 7472 385c2428 0f849f000000 8d8424940a0000 }
            // n = 6, score = 100
            //   83d8ff               | sbb                 eax, -1
            //   3bc3                 | cmp                 eax, ebx
            //   7472                 | je                  0x74
            //   385c2428             | cmp                 byte ptr [esp + 0x28], bl
            //   0f849f000000         | je                  0xa5
            //   8d8424940a0000       | lea                 eax, [esp + 0xa94]

        $sequence_1 = { be???????? 8d442428 8a10 8aca 3a16 751c }
            // n = 6, score = 100
            //   be????????           |                     
            //   8d442428             | lea                 eax, [esp + 0x28]
            //   8a10                 | mov                 dl, byte ptr [eax]
            //   8aca                 | mov                 cl, dl
            //   3a16                 | cmp                 dl, byte ptr [esi]
            //   751c                 | jne                 0x1e

        $sequence_2 = { 8d542418 8d842424030000 52 50 e8???????? 8d4c2420 6a3a }
            // n = 7, score = 100
            //   8d542418             | lea                 edx, [esp + 0x18]
            //   8d842424030000       | lea                 eax, [esp + 0x324]
            //   52                   | push                edx
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d4c2420             | lea                 ecx, [esp + 0x20]
            //   6a3a                 | push                0x3a

        $sequence_3 = { 83ff03 7d22 8d4c2410 6a10 51 56 ffd3 }
            // n = 7, score = 100
            //   83ff03               | cmp                 edi, 3
            //   7d22                 | jge                 0x24
            //   8d4c2410             | lea                 ecx, [esp + 0x10]
            //   6a10                 | push                0x10
            //   51                   | push                ecx
            //   56                   | push                esi
            //   ffd3                 | call                ebx

        $sequence_4 = { 83c408 85ff 750a 5f 5e 5b 81c41c000100 }
            // n = 7, score = 100
            //   83c408               | add                 esp, 8
            //   85ff                 | test                edi, edi
            //   750a                 | jne                 0xc
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   81c41c000100         | add                 esp, 0x1001c

        $sequence_5 = { e8???????? 8d8c248c020000 6a5c 51 8bf0 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   8d8c248c020000       | lea                 ecx, [esp + 0x28c]
            //   6a5c                 | push                0x5c
            //   51                   | push                ecx
            //   8bf0                 | mov                 esi, eax

        $sequence_6 = { f7d1 49 807c0c2722 7512 8d7c2428 83c9ff 33c0 }
            // n = 7, score = 100
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   807c0c2722           | cmp                 byte ptr [esp + ecx + 0x27], 0x22
            //   7512                 | jne                 0x14
            //   8d7c2428             | lea                 edi, [esp + 0x28]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax

        $sequence_7 = { f3a5 8bc8 83e103 f3a4 385c2428 0f84b9f9ffff e9???????? }
            // n = 7, score = 100
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bc8                 | mov                 ecx, eax
            //   83e103               | and                 ecx, 3
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   385c2428             | cmp                 byte ptr [esp + 0x28], bl
            //   0f84b9f9ffff         | je                  0xfffff9bf
            //   e9????????           |                     

        $sequence_8 = { 8dbc2494060000 83c9ff 33c0 f2ae f7d1 49 }
            // n = 6, score = 100
            //   8dbc2494060000       | lea                 edi, [esp + 0x694]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx

        $sequence_9 = { 88942420020000 f3ab 66ab aa b940000000 }
            // n = 5, score = 100
            //   88942420020000       | mov                 byte ptr [esp + 0x220], dl
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   b940000000           | mov                 ecx, 0x40

    condition:
        7 of them and filesize < 106496
}