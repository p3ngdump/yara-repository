rule win_joanap_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.joanap."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.joanap"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6880000000 56 ff15???????? 53 56 ff15???????? 57 }
            // n = 7, score = 100
            //   6880000000           | push                0x80
            //   56                   | push                esi
            //   ff15????????         |                     
            //   53                   | push                ebx
            //   56                   | push                esi
            //   ff15????????         |                     
            //   57                   | push                edi

        $sequence_1 = { c1fb18 8a8900ba2c00 32cb 8bde 88480c 33c9 8a4c2412 }
            // n = 7, score = 100
            //   c1fb18               | sar                 ebx, 0x18
            //   8a8900ba2c00         | mov                 cl, byte ptr [ecx + 0x2cba00]
            //   32cb                 | xor                 cl, bl
            //   8bde                 | mov                 ebx, esi
            //   88480c               | mov                 byte ptr [eax + 0xc], cl
            //   33c9                 | xor                 ecx, ecx
            //   8a4c2412             | mov                 cl, byte ptr [esp + 0x12]

        $sequence_2 = { 03c3 57 50 51 ff15???????? }
            // n = 5, score = 100
            //   03c3                 | add                 eax, ebx
            //   57                   | push                edi
            //   50                   | push                eax
            //   51                   | push                ecx
            //   ff15????????         |                     

        $sequence_3 = { c1e003 8d0c10 8b542420 8911 8b542424 }
            // n = 5, score = 100
            //   c1e003               | shl                 eax, 3
            //   8d0c10               | lea                 ecx, [eax + edx]
            //   8b542420             | mov                 edx, dword ptr [esp + 0x20]
            //   8911                 | mov                 dword ptr [ecx], edx
            //   8b542424             | mov                 edx, dword ptr [esp + 0x24]

        $sequence_4 = { 8b5c2408 55 56 57 8b7c2424 6a01 }
            // n = 6, score = 100
            //   8b5c2408             | mov                 ebx, dword ptr [esp + 8]
            //   55                   | push                ebp
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b7c2424             | mov                 edi, dword ptr [esp + 0x24]
            //   6a01                 | push                1

        $sequence_5 = { c3 8bc6 5e 83c410 }
            // n = 4, score = 100
            //   c3                   | ret                 
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi
            //   83c410               | add                 esp, 0x10

        $sequence_6 = { a1???????? 6aff 668b4824 51 6a00 6a00 e8???????? }
            // n = 7, score = 100
            //   a1????????           |                     
            //   6aff                 | push                -1
            //   668b4824             | mov                 cx, word ptr [eax + 0x24]
            //   51                   | push                ecx
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   e8????????           |                     

        $sequence_7 = { 8b54240c 6a01 6820bf0200 56 }
            // n = 4, score = 100
            //   8b54240c             | mov                 edx, dword ptr [esp + 0xc]
            //   6a01                 | push                1
            //   6820bf0200           | push                0x2bf20
            //   56                   | push                esi

        $sequence_8 = { b870210000 e8???????? 53 55 }
            // n = 4, score = 100
            //   b870210000           | mov                 eax, 0x2170
            //   e8????????           |                     
            //   53                   | push                ebx
            //   55                   | push                ebp

        $sequence_9 = { 7e4b 53 55 8bac2414010000 47 81e7ff000000 8a4c3c10 }
            // n = 7, score = 100
            //   7e4b                 | jle                 0x4d
            //   53                   | push                ebx
            //   55                   | push                ebp
            //   8bac2414010000       | mov                 ebp, dword ptr [esp + 0x114]
            //   47                   | inc                 edi
            //   81e7ff000000         | and                 edi, 0xff
            //   8a4c3c10             | mov                 cl, byte ptr [esp + edi + 0x10]

    condition:
        7 of them and filesize < 270336
}