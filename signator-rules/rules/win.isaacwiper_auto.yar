rule win_isaacwiper_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.isaacwiper."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.isaacwiper"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { d1f8 8d044502000000 50 8bc1 8bce 50 e8???????? }
            // n = 7, score = 100
            //   d1f8                 | sar                 eax, 1
            //   8d044502000000       | lea                 eax, [eax*2 + 2]
            //   50                   | push                eax
            //   8bc1                 | mov                 eax, ecx
            //   8bce                 | mov                 ecx, esi
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_1 = { 894514 c7422000000000 c7422400000000 e8???????? 8b942484000000 83c430 }
            // n = 6, score = 100
            //   894514               | mov                 dword ptr [ebp + 0x14], eax
            //   c7422000000000       | mov                 dword ptr [edx + 0x20], 0
            //   c7422400000000       | mov                 dword ptr [edx + 0x24], 0
            //   e8????????           |                     
            //   8b942484000000       | mov                 edx, dword ptr [esp + 0x84]
            //   83c430               | add                 esp, 0x30

        $sequence_2 = { 8bf0 6a01 e8???????? 894604 8d5f24 897734 8d4708 }
            // n = 7, score = 100
            //   8bf0                 | mov                 esi, eax
            //   6a01                 | push                1
            //   e8????????           |                     
            //   894604               | mov                 dword ptr [esi + 4], eax
            //   8d5f24               | lea                 ebx, [edi + 0x24]
            //   897734               | mov                 dword ptr [edi + 0x34], esi
            //   8d4708               | lea                 eax, [edi + 8]

        $sequence_3 = { 8b06 83c404 8bce ff5004 8d4df8 8935???????? e8???????? }
            // n = 7, score = 100
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   83c404               | add                 esp, 4
            //   8bce                 | mov                 ecx, esi
            //   ff5004               | call                dword ptr [eax + 4]
            //   8d4df8               | lea                 ecx, [ebp - 8]
            //   8935????????         |                     
            //   e8????????           |                     

        $sequence_4 = { 03fb 13c8 0faccf03 c1e903 8bc7 0bc1 894dfc }
            // n = 7, score = 100
            //   03fb                 | add                 edi, ebx
            //   13c8                 | adc                 ecx, eax
            //   0faccf03             | shrd                edi, ecx, 3
            //   c1e903               | shr                 ecx, 3
            //   8bc7                 | mov                 eax, edi
            //   0bc1                 | or                  eax, ecx
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx

        $sequence_5 = { 0f94c1 fec9 8b1485e8670310 80e102 8a44172d 24fd 0ac8 }
            // n = 7, score = 100
            //   0f94c1               | sete                cl
            //   fec9                 | dec                 cl
            //   8b1485e8670310       | mov                 edx, dword ptr [eax*4 + 0x100367e8]
            //   80e102               | and                 cl, 2
            //   8a44172d             | mov                 al, byte ptr [edi + edx + 0x2d]
            //   24fd                 | and                 al, 0xfd
            //   0ac8                 | or                  cl, al

        $sequence_6 = { 52 51 e8???????? 83c408 33ff 39bc24181a0000 }
            // n = 6, score = 100
            //   52                   | push                edx
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   33ff                 | xor                 edi, edi
            //   39bc24181a0000       | cmp                 dword ptr [esp + 0x1a18], edi

        $sequence_7 = { 7436 2bd7 8d8c2498010000 8b7c242c 03cf 6bc268 ba900a0000 }
            // n = 7, score = 100
            //   7436                 | je                  0x38
            //   2bd7                 | sub                 edx, edi
            //   8d8c2498010000       | lea                 ecx, [esp + 0x198]
            //   8b7c242c             | mov                 edi, dword ptr [esp + 0x2c]
            //   03cf                 | add                 ecx, edi
            //   6bc268               | imul                eax, edx, 0x68
            //   ba900a0000           | mov                 edx, 0xa90

        $sequence_8 = { 8b5dfc 8bd3 8b4de0 6a01 e8???????? 8b7df4 8ac8 }
            // n = 7, score = 100
            //   8b5dfc               | mov                 ebx, dword ptr [ebp - 4]
            //   8bd3                 | mov                 edx, ebx
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   6a01                 | push                1
            //   e8????????           |                     
            //   8b7df4               | mov                 edi, dword ptr [ebp - 0xc]
            //   8ac8                 | mov                 cl, al

        $sequence_9 = { baffffff7f 8bc2 56 8b7508 8b4b10 2bc1 894dfc }
            // n = 7, score = 100
            //   baffffff7f           | mov                 edx, 0x7fffffff
            //   8bc2                 | mov                 eax, edx
            //   56                   | push                esi
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8b4b10               | mov                 ecx, dword ptr [ebx + 0x10]
            //   2bc1                 | sub                 eax, ecx
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx

    condition:
        7 of them and filesize < 467968
}