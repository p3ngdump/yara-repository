rule win_narilam_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.narilam."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.narilam"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0001 a0???????? 34cf 11b67000aa00 }
            // n = 4, score = 100
            //   0001                 | add                 byte ptr [ecx], al
            //   a0????????           |                     
            //   34cf                 | xor                 al, 0xcf
            //   11b67000aa00         | adc                 dword ptr [esi + 0xaa0070], esi

        $sequence_1 = { 0000 b802000053 56 8bf2 }
            // n = 4, score = 100
            //   0000                 | add                 byte ptr [eax], al
            //   b802000053           | mov                 eax, 0x53000002
            //   56                   | push                esi
            //   8bf2                 | mov                 esi, edx

        $sequence_2 = { 0000 007006 00a4000000083c 383c82 }
            // n = 4, score = 100
            //   0000                 | add                 byte ptr [eax], al
            //   007006               | add                 byte ptr [eax + 6], dh
            //   00a4000000083c       | add                 byte ptr [eax + eax + 0x3c080000], ah
            //   383c82               | cmp                 byte ptr [edx + eax*4], bh

        $sequence_3 = { 0000 4c d94600 02c1 }
            // n = 4, score = 100
            //   0000                 | add                 byte ptr [eax], al
            //   4c                   | dec                 esp
            //   d94600               | fld                 dword ptr [esi]
            //   02c1                 | add                 al, cl

        $sequence_4 = { 0000 44 3964396c 397039 }
            // n = 4, score = 100
            //   0000                 | add                 byte ptr [eax], al
            //   44                   | inc                 esp
            //   3964396c             | cmp                 dword ptr [ecx + edi + 0x6c], esp
            //   397039               | cmp                 dword ptr [eax + 0x39], esi

        $sequence_5 = { 0000 000f cc 1500000000 }
            // n = 4, score = 100
            //   0000                 | add                 byte ptr [eax], al
            //   000f                 | add                 byte ptr [edi], cl
            //   cc                   | int3                
            //   1500000000           | adc                 eax, 0

        $sequence_6 = { 0000 005818 8be2 86ec }
            // n = 4, score = 100
            //   0000                 | add                 byte ptr [eax], al
            //   005818               | add                 byte ptr [eax + 0x18], bl
            //   8be2                 | mov                 esp, edx
            //   86ec                 | xchg                ah, ch

        $sequence_7 = { 0000 90 000c00 ac }
            // n = 4, score = 100
            //   0000                 | add                 byte ptr [eax], al
            //   90                   | nop                 
            //   000c00               | add                 byte ptr [eax + eax], cl
            //   ac                   | lodsb               al, byte ptr [esi]

    condition:
        7 of them and filesize < 3325952
}