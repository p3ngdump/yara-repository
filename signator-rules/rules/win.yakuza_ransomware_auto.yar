rule win_yakuza_ransomware_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.yakuza_ransomware."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.yakuza_ransomware"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e9???????? 8d8d88f1ffff e9???????? 8d8dacf1ffff e9???????? 8d8df8f4ffff e9???????? }
            // n = 7, score = 100
            //   e9????????           |                     
            //   8d8d88f1ffff         | lea                 ecx, [ebp - 0xe78]
            //   e9????????           |                     
            //   8d8dacf1ffff         | lea                 ecx, [ebp - 0xe54]
            //   e9????????           |                     
            //   8d8df8f4ffff         | lea                 ecx, [ebp - 0xb08]
            //   e9????????           |                     

        $sequence_1 = { 8d8d30ffffff 8d45cc 51 0f49c2 50 ff75e8 e8???????? }
            // n = 7, score = 100
            //   8d8d30ffffff         | lea                 ecx, [ebp - 0xd0]
            //   8d45cc               | lea                 eax, [ebp - 0x34]
            //   51                   | push                ecx
            //   0f49c2               | cmovns              eax, edx
            //   50                   | push                eax
            //   ff75e8               | push                dword ptr [ebp - 0x18]
            //   e8????????           |                     

        $sequence_2 = { c645fc11 8b55b8 e8???????? ba???????? e8???????? b9???????? e8???????? }
            // n = 7, score = 100
            //   c645fc11             | mov                 byte ptr [ebp - 4], 0x11
            //   8b55b8               | mov                 edx, dword ptr [ebp - 0x48]
            //   e8????????           |                     
            //   ba????????           |                     
            //   e8????????           |                     
            //   b9????????           |                     
            //   e8????????           |                     

        $sequence_3 = { c745f078bc4d00 50 ff7508 c745f40f000000 e8???????? e9???????? 8b4d08 }
            // n = 7, score = 100
            //   c745f078bc4d00       | mov                 dword ptr [ebp - 0x10], 0x4dbc78
            //   50                   | push                eax
            //   ff7508               | push                dword ptr [ebp + 8]
            //   c745f40f000000       | mov                 dword ptr [ebp - 0xc], 0xf
            //   e8????????           |                     
            //   e9????????           |                     
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

        $sequence_4 = { c645fc02 8d4da8 e8???????? c645fc01 8b95a0fdffff 85d2 7415 }
            // n = 7, score = 100
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   8d4da8               | lea                 ecx, [ebp - 0x58]
            //   e8????????           |                     
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   8b95a0fdffff         | mov                 edx, dword ptr [ebp - 0x260]
            //   85d2                 | test                edx, edx
            //   7415                 | je                  0x17

        $sequence_5 = { c3 8d4dc8 e9???????? 68ec000000 8b8568fdffff 50 e8???????? }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   8d4dc8               | lea                 ecx, [ebp - 0x38]
            //   e9????????           |                     
            //   68ec000000           | push                0xec
            //   8b8568fdffff         | mov                 eax, dword ptr [ebp - 0x298]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_6 = { a1???????? 8b0401 8b0410 8b30 3bf0 0f8473020000 0f1f440000 }
            // n = 7, score = 100
            //   a1????????           |                     
            //   8b0401               | mov                 eax, dword ptr [ecx + eax]
            //   8b0410               | mov                 eax, dword ptr [eax + edx]
            //   8b30                 | mov                 esi, dword ptr [eax]
            //   3bf0                 | cmp                 esi, eax
            //   0f8473020000         | je                  0x279
            //   0f1f440000           | nop                 dword ptr [eax + eax]

        $sequence_7 = { a1???????? 894344 c7433800000000 c645fc04 8b4334 8b4804 894de4 }
            // n = 7, score = 100
            //   a1????????           |                     
            //   894344               | mov                 dword ptr [ebx + 0x44], eax
            //   c7433800000000       | mov                 dword ptr [ebx + 0x38], 0
            //   c645fc04             | mov                 byte ptr [ebp - 4], 4
            //   8b4334               | mov                 eax, dword ptr [ebx + 0x34]
            //   8b4804               | mov                 ecx, dword ptr [eax + 4]
            //   894de4               | mov                 dword ptr [ebp - 0x1c], ecx

        $sequence_8 = { b9???????? e8???????? c645fc0c 68???????? e8???????? 83c404 85c0 }
            // n = 7, score = 100
            //   b9????????           |                     
            //   e8????????           |                     
            //   c645fc0c             | mov                 byte ptr [ebp - 4], 0xc
            //   68????????           |                     
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   85c0                 | test                eax, eax

        $sequence_9 = { c745c04c414d00 c745c408424d00 c745b0b03f4d00 c745b400000000 c745b800000000 c745bc00000000 8d45c0 }
            // n = 7, score = 100
            //   c745c04c414d00       | mov                 dword ptr [ebp - 0x40], 0x4d414c
            //   c745c408424d00       | mov                 dword ptr [ebp - 0x3c], 0x4d4208
            //   c745b0b03f4d00       | mov                 dword ptr [ebp - 0x50], 0x4d3fb0
            //   c745b400000000       | mov                 dword ptr [ebp - 0x4c], 0
            //   c745b800000000       | mov                 dword ptr [ebp - 0x48], 0
            //   c745bc00000000       | mov                 dword ptr [ebp - 0x44], 0
            //   8d45c0               | lea                 eax, [ebp - 0x40]

    condition:
        7 of them and filesize < 2811904
}