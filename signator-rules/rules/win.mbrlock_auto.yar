rule win_mbrlock_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.mbrlock."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mbrlock"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff2495d86b4600 8bc7 ba03000000 83e904 720c 83e003 03c8 }
            // n = 7, score = 100
            //   ff2495d86b4600       | jmp                 dword ptr [edx*4 + 0x466bd8]
            //   8bc7                 | mov                 eax, edi
            //   ba03000000           | mov                 edx, 3
            //   83e904               | sub                 ecx, 4
            //   720c                 | jb                  0xe
            //   83e003               | and                 eax, 3
            //   03c8                 | add                 ecx, eax

        $sequence_1 = { f2ae f7d1 49 7467 56 33ff e8???????? }
            // n = 7, score = 100
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   7467                 | je                  0x69
            //   56                   | push                esi
            //   33ff                 | xor                 edi, edi
            //   e8????????           |                     

        $sequence_2 = { 8b8e04010000 8bae00010000 898e08010000 89ae14010000 8b5e7c 33c0 8a865a010000 }
            // n = 7, score = 100
            //   8b8e04010000         | mov                 ecx, dword ptr [esi + 0x104]
            //   8bae00010000         | mov                 ebp, dword ptr [esi + 0x100]
            //   898e08010000         | mov                 dword ptr [esi + 0x108], ecx
            //   89ae14010000         | mov                 dword ptr [esi + 0x114], ebp
            //   8b5e7c               | mov                 ebx, dword ptr [esi + 0x7c]
            //   33c0                 | xor                 eax, eax
            //   8a865a010000         | mov                 al, byte ptr [esi + 0x15a]

        $sequence_3 = { ff15???????? 8b4c241c 8b442420 41 40 89442420 894c241c }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   8b4c241c             | mov                 ecx, dword ptr [esp + 0x1c]
            //   8b442420             | mov                 eax, dword ptr [esp + 0x20]
            //   41                   | inc                 ecx
            //   40                   | inc                 eax
            //   89442420             | mov                 dword ptr [esp + 0x20], eax
            //   894c241c             | mov                 dword ptr [esp + 0x1c], ecx

        $sequence_4 = { eb0f 8b4c2408 40 3bc1 7c06 3b44240c 7e02 }
            // n = 7, score = 100
            //   eb0f                 | jmp                 0x11
            //   8b4c2408             | mov                 ecx, dword ptr [esp + 8]
            //   40                   | inc                 eax
            //   3bc1                 | cmp                 eax, ecx
            //   7c06                 | jl                  8
            //   3b44240c             | cmp                 eax, dword ptr [esp + 0xc]
            //   7e02                 | jle                 4

        $sequence_5 = { e8???????? c745fc03000000 c645fc04 8b55e0 8bc6 2bc2 a803 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c745fc03000000       | mov                 dword ptr [ebp - 4], 3
            //   c645fc04             | mov                 byte ptr [ebp - 4], 4
            //   8b55e0               | mov                 edx, dword ptr [ebp - 0x20]
            //   8bc6                 | mov                 eax, esi
            //   2bc2                 | sub                 eax, edx
            //   a803                 | test                al, 3

        $sequence_6 = { ffd7 8b5604 68f4350110 52 894608 ffd7 894614 }
            // n = 7, score = 100
            //   ffd7                 | call                edi
            //   8b5604               | mov                 edx, dword ptr [esi + 4]
            //   68f4350110           | push                0x100135f4
            //   52                   | push                edx
            //   894608               | mov                 dword ptr [esi + 8], eax
            //   ffd7                 | call                edi
            //   894614               | mov                 dword ptr [esi + 0x14], eax

        $sequence_7 = { eb1e 8b4004 50 e8???????? 83c404 89460c 85c0 }
            // n = 7, score = 100
            //   eb1e                 | jmp                 0x20
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   89460c               | mov                 dword ptr [esi + 0xc], eax
            //   85c0                 | test                eax, eax

        $sequence_8 = { ff45f4 f68121f94e0004 89750c 7453 803e00 7504 33f6 }
            // n = 7, score = 100
            //   ff45f4               | inc                 dword ptr [ebp - 0xc]
            //   f68121f94e0004       | test                byte ptr [ecx + 0x4ef921], 4
            //   89750c               | mov                 dword ptr [ebp + 0xc], esi
            //   7453                 | je                  0x55
            //   803e00               | cmp                 byte ptr [esi], 0
            //   7504                 | jne                 6
            //   33f6                 | xor                 esi, esi

        $sequence_9 = { 8955d8 8955fc e8???????? 833b00 7519 68945f0110 6a04 }
            // n = 7, score = 100
            //   8955d8               | mov                 dword ptr [ebp - 0x28], edx
            //   8955fc               | mov                 dword ptr [ebp - 4], edx
            //   e8????????           |                     
            //   833b00               | cmp                 dword ptr [ebx], 0
            //   7519                 | jne                 0x1b
            //   68945f0110           | push                0x10015f94
            //   6a04                 | push                4

    condition:
        7 of them and filesize < 2031616
}