rule win_bubblewrap_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.bubblewrap."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bubblewrap"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c1e902 f3a5 8bcb 83e103 33db }
            // n = 5, score = 100
            //   c1e902               | shr                 ecx, 2
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bcb                 | mov                 ecx, ebx
            //   83e103               | and                 ecx, 3
            //   33db                 | xor                 ebx, ebx

        $sequence_1 = { 6800010000 894c2430 52 894c2438 }
            // n = 4, score = 100
            //   6800010000           | push                0x100
            //   894c2430             | mov                 dword ptr [esp + 0x30], ecx
            //   52                   | push                edx
            //   894c2438             | mov                 dword ptr [esp + 0x38], ecx

        $sequence_2 = { e9???????? 68???????? e8???????? 0fbec0 }
            // n = 4, score = 100
            //   e9????????           |                     
            //   68????????           |                     
            //   e8????????           |                     
            //   0fbec0               | movsx               eax, al

        $sequence_3 = { 8dbc2470030000 f2ae f7d1 2bf9 8be9 8bf7 }
            // n = 6, score = 100
            //   8dbc2470030000       | lea                 edi, [esp + 0x370]
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   8be9                 | mov                 ebp, ecx
            //   8bf7                 | mov                 esi, edi

        $sequence_4 = { 2410 8dbc2479010000 f6d8 1bc0 }
            // n = 4, score = 100
            //   2410                 | and                 al, 0x10
            //   8dbc2479010000       | lea                 edi, [esp + 0x179]
            //   f6d8                 | neg                 al
            //   1bc0                 | sbb                 eax, eax

        $sequence_5 = { 83c408 50 57 8b3d???????? ffd7 68???????? }
            // n = 6, score = 100
            //   83c408               | add                 esp, 8
            //   50                   | push                eax
            //   57                   | push                edi
            //   8b3d????????         |                     
            //   ffd7                 | call                edi
            //   68????????           |                     

        $sequence_6 = { 0f861dffffff 8b4c2424 8b35???????? 51 ffd6 8b542428 }
            // n = 6, score = 100
            //   0f861dffffff         | jbe                 0xffffff23
            //   8b4c2424             | mov                 ecx, dword ptr [esp + 0x24]
            //   8b35????????         |                     
            //   51                   | push                ecx
            //   ffd6                 | call                esi
            //   8b542428             | mov                 edx, dword ptr [esp + 0x28]

        $sequence_7 = { 52 f3a5 e8???????? 69c0b1180400 }
            // n = 4, score = 100
            //   52                   | push                edx
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   e8????????           |                     
            //   69c0b1180400         | imul                eax, eax, 0x418b1

        $sequence_8 = { f3a4 891d???????? c605????????ee c605????????05 a3???????? a3???????? 891d???????? }
            // n = 7, score = 100
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   891d????????         |                     
            //   c605????????ee       |                     
            //   c605????????05       |                     
            //   a3????????           |                     
            //   a3????????           |                     
            //   891d????????         |                     

        $sequence_9 = { 83c404 a801 740d 8d54240c 52 e8???????? 83c404 }
            // n = 7, score = 100
            //   83c404               | add                 esp, 4
            //   a801                 | test                al, 1
            //   740d                 | je                  0xf
            //   8d54240c             | lea                 edx, [esp + 0xc]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

    condition:
        7 of them and filesize < 57136
}