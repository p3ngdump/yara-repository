rule win_biscuit_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.biscuit."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.biscuit"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5e 5d 32c0 5b 83c408 c3 8bce }
            // n = 7, score = 100
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   32c0                 | xor                 al, al
            //   5b                   | pop                 ebx
            //   83c408               | add                 esp, 8
            //   c3                   | ret                 
            //   8bce                 | mov                 ecx, esi

        $sequence_1 = { 0f87d4000000 8b8d7cb7ffff 83e901 8b9588b7ffff 2bd1 899588b7ffff }
            // n = 6, score = 100
            //   0f87d4000000         | ja                  0xda
            //   8b8d7cb7ffff         | mov                 ecx, dword ptr [ebp - 0x4884]
            //   83e901               | sub                 ecx, 1
            //   8b9588b7ffff         | mov                 edx, dword ptr [ebp - 0x4878]
            //   2bd1                 | sub                 edx, ecx
            //   899588b7ffff         | mov                 dword ptr [ebp - 0x4878], edx

        $sequence_2 = { 8d8de4faffff e8???????? 8a8528b9ffff 8845ec 6a00 8d4dec }
            // n = 6, score = 100
            //   8d8de4faffff         | lea                 ecx, [ebp - 0x51c]
            //   e8????????           |                     
            //   8a8528b9ffff         | mov                 al, byte ptr [ebp - 0x46d8]
            //   8845ec               | mov                 byte ptr [ebp - 0x14], al
            //   6a00                 | push                0
            //   8d4dec               | lea                 ecx, [ebp - 0x14]

        $sequence_3 = { f2ae 8b542414 f7d1 2bf9 8bf7 8bd9 8bfa }
            // n = 7, score = 100
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   8b542414             | mov                 edx, dword ptr [esp + 0x14]
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   8bf7                 | mov                 esi, edi
            //   8bd9                 | mov                 ebx, ecx
            //   8bfa                 | mov                 edi, edx

        $sequence_4 = { 2b85c8feffff 83c001 8b8dd0feffff 2bc8 898dd0feffff 8b95ccfeffff 83c201 }
            // n = 7, score = 100
            //   2b85c8feffff         | sub                 eax, dword ptr [ebp - 0x138]
            //   83c001               | add                 eax, 1
            //   8b8dd0feffff         | mov                 ecx, dword ptr [ebp - 0x130]
            //   2bc8                 | sub                 ecx, eax
            //   898dd0feffff         | mov                 dword ptr [ebp - 0x130], ecx
            //   8b95ccfeffff         | mov                 edx, dword ptr [ebp - 0x134]
            //   83c201               | add                 edx, 1

        $sequence_5 = { 894d08 eb03 8b4d08 8a02 3c2d 7415 880411 }
            // n = 7, score = 100
            //   894d08               | mov                 dword ptr [ebp + 8], ecx
            //   eb03                 | jmp                 5
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8a02                 | mov                 al, byte ptr [edx]
            //   3c2d                 | cmp                 al, 0x2d
            //   7415                 | je                  0x17
            //   880411               | mov                 byte ptr [ecx + edx], al

        $sequence_6 = { f3ab bf???????? ba???????? 83c9ff 33c0 f2ae f7d1 }
            // n = 7, score = 100
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   bf????????           |                     
            //   ba????????           |                     
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx

        $sequence_7 = { b9???????? e8???????? c745fcffffffff 6a01 8d4de0 e8???????? e9???????? }
            // n = 7, score = 100
            //   b9????????           |                     
            //   e8????????           |                     
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   6a01                 | push                1
            //   8d4de0               | lea                 ecx, [ebp - 0x20]
            //   e8????????           |                     
            //   e9????????           |                     

        $sequence_8 = { 81c440220000 c20c00 b900080000 33c0 8dbc2450020000 53 f3ab }
            // n = 7, score = 100
            //   81c440220000         | add                 esp, 0x2240
            //   c20c00               | ret                 0xc
            //   b900080000           | mov                 ecx, 0x800
            //   33c0                 | xor                 eax, eax
            //   8dbc2450020000       | lea                 edi, [esp + 0x250]
            //   53                   | push                ebx
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax

        $sequence_9 = { 83c404 eb22 8b85d4daffff 83e801 898538b6ffff 8b8d38b6ffff 8a11 }
            // n = 7, score = 100
            //   83c404               | add                 esp, 4
            //   eb22                 | jmp                 0x24
            //   8b85d4daffff         | mov                 eax, dword ptr [ebp - 0x252c]
            //   83e801               | sub                 eax, 1
            //   898538b6ffff         | mov                 dword ptr [ebp - 0x49c8], eax
            //   8b8d38b6ffff         | mov                 ecx, dword ptr [ebp - 0x49c8]
            //   8a11                 | mov                 dl, byte ptr [ecx]

    condition:
        7 of them and filesize < 180224
}