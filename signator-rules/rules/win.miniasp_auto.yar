rule win_miniasp_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.miniasp."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.miniasp"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83c8ff e9???????? c645fb00 8b4508 83c008 8945b0 33c0 }
            // n = 7, score = 100
            //   83c8ff               | or                  eax, 0xffffffff
            //   e9????????           |                     
            //   c645fb00             | mov                 byte ptr [ebp - 5], 0
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   83c008               | add                 eax, 8
            //   8945b0               | mov                 dword ptr [ebp - 0x50], eax
            //   33c0                 | xor                 eax, eax

        $sequence_1 = { c60000 8b45f8 8945b8 8b45b8 40 8945b4 8b45b8 }
            // n = 7, score = 100
            //   c60000               | mov                 byte ptr [eax], 0
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   8945b8               | mov                 dword ptr [ebp - 0x48], eax
            //   8b45b8               | mov                 eax, dword ptr [ebp - 0x48]
            //   40                   | inc                 eax
            //   8945b4               | mov                 dword ptr [ebp - 0x4c], eax
            //   8b45b8               | mov                 eax, dword ptr [ebp - 0x48]

        $sequence_2 = { 8b45b0 8b00 3b45d8 7502 eb05 e9???????? 83c8ff }
            // n = 7, score = 100
            //   8b45b0               | mov                 eax, dword ptr [ebp - 0x50]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   3b45d8               | cmp                 eax, dword ptr [ebp - 0x28]
            //   7502                 | jne                 4
            //   eb05                 | jmp                 7
            //   e9????????           |                     
            //   83c8ff               | or                  eax, 0xffffffff

        $sequence_3 = { e8???????? 99 6a1a 59 f7f9 83c261 8b45fc }
            // n = 7, score = 100
            //   e8????????           |                     
            //   99                   | cdq                 
            //   6a1a                 | push                0x1a
            //   59                   | pop                 ecx
            //   f7f9                 | idiv                ecx
            //   83c261               | add                 edx, 0x61
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]

        $sequence_4 = { 6800000010 ffb5b0fbffff 8d85f8fbffff 50 8b85d4fbffff ffb018040000 ff15???????? }
            // n = 7, score = 100
            //   6800000010           | push                0x10000000
            //   ffb5b0fbffff         | push                dword ptr [ebp - 0x450]
            //   8d85f8fbffff         | lea                 eax, [ebp - 0x408]
            //   50                   | push                eax
            //   8b85d4fbffff         | mov                 eax, dword ptr [ebp - 0x42c]
            //   ffb018040000         | push                dword ptr [eax + 0x418]
            //   ff15????????         |                     

        $sequence_5 = { 8b80ec000000 8b4dbc c6040800 b001 e9???????? eb07 }
            // n = 6, score = 100
            //   8b80ec000000         | mov                 eax, dword ptr [eax + 0xec]
            //   8b4dbc               | mov                 ecx, dword ptr [ebp - 0x44]
            //   c6040800             | mov                 byte ptr [eax + ecx], 0
            //   b001                 | mov                 al, 1
            //   e9????????           |                     
            //   eb07                 | jmp                 9

        $sequence_6 = { 48 89857cdeffff 8b857cdeffff 8a4001 88857bdeffff ff857cdeffff 80bd7bdeffff00 }
            // n = 7, score = 100
            //   48                   | dec                 eax
            //   89857cdeffff         | mov                 dword ptr [ebp - 0x2184], eax
            //   8b857cdeffff         | mov                 eax, dword ptr [ebp - 0x2184]
            //   8a4001               | mov                 al, byte ptr [eax + 1]
            //   88857bdeffff         | mov                 byte ptr [ebp - 0x2185], al
            //   ff857cdeffff         | inc                 dword ptr [ebp - 0x2184]
            //   80bd7bdeffff00       | cmp                 byte ptr [ebp - 0x2185], 0

        $sequence_7 = { 0385e4fbffff 50 ff7518 e8???????? 83c40c eb28 }
            // n = 6, score = 100
            //   0385e4fbffff         | add                 eax, dword ptr [ebp - 0x41c]
            //   50                   | push                eax
            //   ff7518               | push                dword ptr [ebp + 0x18]
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   eb28                 | jmp                 0x2a

        $sequence_8 = { ff75f8 ff15???????? 8b4de0 33cd e8???????? c9 c21000 }
            // n = 7, score = 100
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   ff15????????         |                     
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   33cd                 | xor                 ecx, ebp
            //   e8????????           |                     
            //   c9                   | leave               
            //   c21000               | ret                 0x10

        $sequence_9 = { 0345e4 8945fc ff7510 ff75fc e8???????? 59 59 }
            // n = 7, score = 100
            //   0345e4               | add                 eax, dword ptr [ebp - 0x1c]
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx

    condition:
        7 of them and filesize < 139264
}