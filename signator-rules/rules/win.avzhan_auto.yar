rule win_avzhan_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.avzhan."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.avzhan"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d442464 52 50 e8???????? 83c404 }
            // n = 5, score = 200
            //   8d442464             | lea                 eax, [esp + 0x64]
            //   52                   | push                edx
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_1 = { 85c0 741e 8d442464 8d4c2464 50 }
            // n = 5, score = 200
            //   85c0                 | test                eax, eax
            //   741e                 | je                  0x20
            //   8d442464             | lea                 eax, [esp + 0x64]
            //   8d4c2464             | lea                 ecx, [esp + 0x64]
            //   50                   | push                eax

        $sequence_2 = { 51 ff15???????? 8b2d???????? 8b1d???????? }
            // n = 4, score = 200
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   8b2d????????         |                     
            //   8b1d????????         |                     

        $sequence_3 = { 8d542468 51 8d8424ec000000 52 50 }
            // n = 5, score = 200
            //   8d542468             | lea                 edx, [esp + 0x68]
            //   51                   | push                ecx
            //   8d8424ec000000       | lea                 eax, [esp + 0xec]
            //   52                   | push                edx
            //   50                   | push                eax

        $sequence_4 = { f3ab 8b442464 8b3d???????? 83c418 }
            // n = 4, score = 200
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8b442464             | mov                 eax, dword ptr [esp + 0x64]
            //   8b3d????????         |                     
            //   83c418               | add                 esp, 0x18

        $sequence_5 = { e8???????? 8bf0 6a64 81c600040000 e8???????? }
            // n = 5, score = 200
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   6a64                 | push                0x64
            //   81c600040000         | add                 esi, 0x400
            //   e8????????           |                     

        $sequence_6 = { 51 6a00 ffd5 85c0 7410 }
            // n = 5, score = 200
            //   51                   | push                ecx
            //   6a00                 | push                0
            //   ffd5                 | call                ebp
            //   85c0                 | test                eax, eax
            //   7410                 | je                  0x12

        $sequence_7 = { 8dbc2404020000 83c9ff 33c0 83c408 }
            // n = 4, score = 200
            //   8dbc2404020000       | lea                 edi, [esp + 0x204]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   83c408               | add                 esp, 8

        $sequence_8 = { 8bf0 52 89742420 e8???????? 8bf8 6860ea0000 897c2428 }
            // n = 7, score = 200
            //   8bf0                 | mov                 esi, eax
            //   52                   | push                edx
            //   89742420             | mov                 dword ptr [esp + 0x20], esi
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   6860ea0000           | push                0xea60
            //   897c2428             | mov                 dword ptr [esp + 0x28], edi

        $sequence_9 = { 8d4c2464 50 8d542468 51 8d8424ec000000 }
            // n = 5, score = 200
            //   8d4c2464             | lea                 ecx, [esp + 0x64]
            //   50                   | push                eax
            //   8d542468             | lea                 edx, [esp + 0x68]
            //   51                   | push                ecx
            //   8d8424ec000000       | lea                 eax, [esp + 0xec]

    condition:
        7 of them and filesize < 122880
}