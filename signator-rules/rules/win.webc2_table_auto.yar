rule win_webc2_table_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.webc2_table."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.webc2_table"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d851cfeffff 50 8d8580feffff 50 e8???????? }
            // n = 5, score = 100
            //   8d851cfeffff         | lea                 eax, [ebp - 0x1e4]
            //   50                   | push                eax
            //   8d8580feffff         | lea                 eax, [ebp - 0x180]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_1 = { ff15???????? 8d85dcfbffff 68???????? 50 e8???????? }
            // n = 5, score = 100
            //   ff15????????         |                     
            //   8d85dcfbffff         | lea                 eax, [ebp - 0x424]
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_2 = { 83c420 8d85e4feffff 50 ffd7 }
            // n = 4, score = 100
            //   83c420               | add                 esp, 0x20
            //   8d85e4feffff         | lea                 eax, [ebp - 0x11c]
            //   50                   | push                eax
            //   ffd7                 | call                edi

        $sequence_3 = { 33c0 8dbd4dffffff 889d4cffffff f3ab 66ab aa 6a18 }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   8dbd4dffffff         | lea                 edi, [ebp - 0xb3]
            //   889d4cffffff         | mov                 byte ptr [ebp - 0xb4], bl
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   6a18                 | push                0x18

        $sequence_4 = { 7407 50 ff15???????? 391d???????? 7420 68???????? }
            // n = 6, score = 100
            //   7407                 | je                  9
            //   50                   | push                eax
            //   ff15????????         |                     
            //   391d????????         |                     
            //   7420                 | je                  0x22
            //   68????????           |                     

        $sequence_5 = { ff15???????? 8b3d???????? 8945fc 8d45d4 }
            // n = 4, score = 100
            //   ff15????????         |                     
            //   8b3d????????         |                     
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8d45d4               | lea                 eax, [ebp - 0x2c]

        $sequence_6 = { 57 53 68???????? 895df4 e8???????? 57 8d85d8f6ffff }
            // n = 7, score = 100
            //   57                   | push                edi
            //   53                   | push                ebx
            //   68????????           |                     
            //   895df4               | mov                 dword ptr [ebp - 0xc], ebx
            //   e8????????           |                     
            //   57                   | push                edi
            //   8d85d8f6ffff         | lea                 eax, [ebp - 0x928]

        $sequence_7 = { ff15???????? 85c0 750a c78548fdffff94000000 }
            // n = 4, score = 100
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   750a                 | jne                 0xc
            //   c78548fdffff94000000     | mov    dword ptr [ebp - 0x2b8], 0x94

        $sequence_8 = { 48 53 50 57 ff15???????? ff7710 }
            // n = 6, score = 100
            //   48                   | dec                 eax
            //   53                   | push                ebx
            //   50                   | push                eax
            //   57                   | push                edi
            //   ff15????????         |                     
            //   ff7710               | push                dword ptr [edi + 0x10]

        $sequence_9 = { 33c0 8dbd1dfdffff 889d1cfdffff f3ab }
            // n = 4, score = 100
            //   33c0                 | xor                 eax, eax
            //   8dbd1dfdffff         | lea                 edi, [ebp - 0x2e3]
            //   889d1cfdffff         | mov                 byte ptr [ebp - 0x2e4], bl
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax

    condition:
        7 of them and filesize < 49152
}