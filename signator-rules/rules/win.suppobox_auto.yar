rule win_suppobox_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.suppobox."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.suppobox"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3bc8 7d10 a1???????? 2b05???????? }
            // n = 4, score = 200
            //   3bc8                 | cmp                 ecx, eax
            //   7d10                 | jge                 0x12
            //   a1????????           |                     
            //   2b05????????         |                     

        $sequence_1 = { 890d???????? e8???????? 8bf0 e8???????? 03f0 }
            // n = 5, score = 200
            //   890d????????         |                     
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   e8????????           |                     
            //   03f0                 | add                 esi, eax

        $sequence_2 = { 7f12 a1???????? 2b05???????? a3???????? }
            // n = 4, score = 200
            //   7f12                 | jg                  0x14
            //   a1????????           |                     
            //   2b05????????         |                     
            //   a3????????           |                     

        $sequence_3 = { 8945f0 a1???????? 83e801 a3???????? }
            // n = 4, score = 200
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   a1????????           |                     
            //   83e801               | sub                 eax, 1
            //   a3????????           |                     

        $sequence_4 = { 7412 8b0d???????? 030d???????? 890d???????? }
            // n = 4, score = 200
            //   7412                 | je                  0x14
            //   8b0d????????         |                     
            //   030d????????         |                     
            //   890d????????         |                     

        $sequence_5 = { 7d10 a1???????? 0b05???????? a3???????? }
            // n = 4, score = 200
            //   7d10                 | jge                 0x12
            //   a1????????           |                     
            //   0b05????????         |                     
            //   a3????????           |                     

        $sequence_6 = { 7f10 a1???????? 2305???????? a3???????? }
            // n = 4, score = 200
            //   7f10                 | jg                  0x12
            //   a1????????           |                     
            //   2305????????         |                     
            //   a3????????           |                     

        $sequence_7 = { 01bdacf7ffff 83c40c 83bdc8f7ffff00 8b95c8f7ffff }
            // n = 4, score = 100
            //   01bdacf7ffff         | add                 dword ptr [ebp - 0x854], edi
            //   83c40c               | add                 esp, 0xc
            //   83bdc8f7ffff00       | cmp                 dword ptr [ebp - 0x838], 0
            //   8b95c8f7ffff         | mov                 edx, dword ptr [ebp - 0x838]

        $sequence_8 = { 01c6 ebdb ff7510 57 }
            // n = 4, score = 100
            //   01c6                 | add                 esi, eax
            //   ebdb                 | jmp                 0xffffffdd
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   57                   | push                edi

        $sequence_9 = { 019dacf7ffff 83c40c 299dc4f7ffff e9???????? }
            // n = 4, score = 100
            //   019dacf7ffff         | add                 dword ptr [ebp - 0x854], ebx
            //   83c40c               | add                 esp, 0xc
            //   299dc4f7ffff         | sub                 dword ptr [ebp - 0x83c], ebx
            //   e9????????           |                     

        $sequence_10 = { 8b942484000000 89442440 0fb644244c e8???????? 8bbc2480000000 }
            // n = 5, score = 100
            //   8b942484000000       | mov                 edx, dword ptr [esp + 0x84]
            //   89442440             | mov                 dword ptr [esp + 0x40], eax
            //   0fb644244c           | movzx               eax, byte ptr [esp + 0x4c]
            //   e8????????           |                     
            //   8bbc2480000000       | mov                 edi, dword ptr [esp + 0x80]

        $sequence_11 = { 01c6 39fe 0f8d7e010000 80bc2ef4f7ffff0a }
            // n = 4, score = 100
            //   01c6                 | add                 esi, eax
            //   39fe                 | cmp                 esi, edi
            //   0f8d7e010000         | jge                 0x184
            //   80bc2ef4f7ffff0a     | cmp                 byte ptr [esi + ebp - 0x80c], 0xa

        $sequence_12 = { 8b9424ac000000 8b4c2430 8b0c0a 8908 }
            // n = 4, score = 100
            //   8b9424ac000000       | mov                 edx, dword ptr [esp + 0xac]
            //   8b4c2430             | mov                 ecx, dword ptr [esp + 0x30]
            //   8b0c0a               | mov                 ecx, dword ptr [edx + ecx]
            //   8908                 | mov                 dword ptr [eax], ecx

        $sequence_13 = { 01d8 3b85b0f7ffff 7e2f 8b95c8f7ffff }
            // n = 4, score = 100
            //   01d8                 | add                 eax, ebx
            //   3b85b0f7ffff         | cmp                 eax, dword ptr [ebp - 0x850]
            //   7e2f                 | jle                 0x31
            //   8b95c8f7ffff         | mov                 edx, dword ptr [ebp - 0x838]

        $sequence_14 = { 8b942494000000 85d2 0f8ecf040000 83bc24940000000e }
            // n = 4, score = 100
            //   8b942494000000       | mov                 edx, dword ptr [esp + 0x94]
            //   85d2                 | test                edx, edx
            //   0f8ecf040000         | jle                 0x4d5
            //   83bc24940000000e     | cmp                 dword ptr [esp + 0x94], 0xe

        $sequence_15 = { 01c9 4a 79f2 833b54 }
            // n = 4, score = 100
            //   01c9                 | add                 ecx, ecx
            //   4a                   | dec                 edx
            //   79f2                 | jns                 0xfffffff4
            //   833b54               | cmp                 dword ptr [ebx], 0x54

        $sequence_16 = { 01d7 68???????? 57 e8???????? }
            // n = 4, score = 100
            //   01d7                 | add                 edi, edx
            //   68????????           |                     
            //   57                   | push                edi
            //   e8????????           |                     

        $sequence_17 = { 8b9500ffffff 83ea01 29d0 899500ffffff }
            // n = 4, score = 100
            //   8b9500ffffff         | mov                 edx, dword ptr [ebp - 0x100]
            //   83ea01               | sub                 edx, 1
            //   29d0                 | sub                 eax, edx
            //   899500ffffff         | mov                 dword ptr [ebp - 0x100], edx

        $sequence_18 = { 8b9500ffffff 8d42ff 898500ffffff 0fb79d10feffff }
            // n = 4, score = 100
            //   8b9500ffffff         | mov                 edx, dword ptr [ebp - 0x100]
            //   8d42ff               | lea                 eax, [edx - 1]
            //   898500ffffff         | mov                 dword ptr [ebp - 0x100], eax
            //   0fb79d10feffff       | movzx               ebx, word ptr [ebp - 0x1f0]

        $sequence_19 = { 8b9504f9ffff 01c8 01d0 898504f9ffff }
            // n = 4, score = 100
            //   8b9504f9ffff         | mov                 edx, dword ptr [ebp - 0x6fc]
            //   01c8                 | add                 eax, ecx
            //   01d0                 | add                 eax, edx
            //   898504f9ffff         | mov                 dword ptr [ebp - 0x6fc], eax

        $sequence_20 = { 8b9424ac000000 0f843cfeffff 31c9 e9???????? }
            // n = 4, score = 100
            //   8b9424ac000000       | mov                 edx, dword ptr [esp + 0xac]
            //   0f843cfeffff         | je                  0xfffffe42
            //   31c9                 | xor                 ecx, ecx
            //   e9????????           |                     

        $sequence_21 = { 01c6 39fe 0f8d2f020000 80bc2ef4f7ffff0a }
            // n = 4, score = 100
            //   01c6                 | add                 esi, eax
            //   39fe                 | cmp                 esi, edi
            //   0f8d2f020000         | jge                 0x235
            //   80bc2ef4f7ffff0a     | cmp                 byte ptr [esi + ebp - 0x80c], 0xa

    condition:
        7 of them and filesize < 1875968
}