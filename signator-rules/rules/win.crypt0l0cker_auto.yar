rule win_crypt0l0cker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.crypt0l0cker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.crypt0l0cker"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 55 6a00 6a00 ff15???????? 85c0 7e10 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   55                   | push                ebp
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7e10                 | jle                 0x12

        $sequence_1 = { 8bc1 c1e110 c1e810 03f0 8b45f0 03c1 8975ec }
            // n = 7, score = 100
            //   8bc1                 | mov                 eax, ecx
            //   c1e110               | shl                 ecx, 0x10
            //   c1e810               | shr                 eax, 0x10
            //   03f0                 | add                 esi, eax
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   03c1                 | add                 eax, ecx
            //   8975ec               | mov                 dword ptr [ebp - 0x14], esi

        $sequence_2 = { 6a00 ff35???????? ffd7 5f 5b 8bc6 5e }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   ff35????????         |                     
            //   ffd7                 | call                edi
            //   5f                   | pop                 edi
            //   5b                   | pop                 ebx
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi

        $sequence_3 = { 56 8bcf 8945fc e8???????? 8904b7 83c708 8b45fc }
            // n = 7, score = 100
            //   56                   | push                esi
            //   8bcf                 | mov                 ecx, edi
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   e8????????           |                     
            //   8904b7               | mov                 dword ptr [edi + esi*4], eax
            //   83c708               | add                 edi, 8
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]

        $sequence_4 = { 0145fc 3945fc 7301 42 8b45fc 03c1 3bc1 }
            // n = 7, score = 100
            //   0145fc               | add                 dword ptr [ebp - 4], eax
            //   3945fc               | cmp                 dword ptr [ebp - 4], eax
            //   7301                 | jae                 3
            //   42                   | inc                 edx
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   03c1                 | add                 eax, ecx
            //   3bc1                 | cmp                 eax, ecx

        $sequence_5 = { 03c2 3bc2 7301 47 03df 3bdf 7301 }
            // n = 7, score = 100
            //   03c2                 | add                 eax, edx
            //   3bc2                 | cmp                 eax, edx
            //   7301                 | jae                 3
            //   47                   | inc                 edi
            //   03df                 | add                 ebx, edi
            //   3bdf                 | cmp                 ebx, edi
            //   7301                 | jae                 3

        $sequence_6 = { 8d442428 50 8d4c2414 e8???????? 83c404 03c6 7415 }
            // n = 7, score = 100
            //   8d442428             | lea                 eax, [esp + 0x28]
            //   50                   | push                eax
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   03c6                 | add                 eax, esi
            //   7415                 | je                  0x17

        $sequence_7 = { 50 57 8b7df4 ff37 e8???????? 8b45e4 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   57                   | push                edi
            //   8b7df4               | mov                 edi, dword ptr [ebp - 0xc]
            //   ff37                 | push                dword ptr [edi]
            //   e8????????           |                     
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]

        $sequence_8 = { 8945f8 8b45e0 f7d8 8945e0 }
            // n = 4, score = 100
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   f7d8                 | neg                 eax
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax

        $sequence_9 = { 897c2410 51 8bd0 8bcb e8???????? 83c404 }
            // n = 6, score = 100
            //   897c2410             | mov                 dword ptr [esp + 0x10], edi
            //   51                   | push                ecx
            //   8bd0                 | mov                 edx, eax
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

    condition:
        7 of them and filesize < 917504
}