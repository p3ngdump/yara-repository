rule win_yanluowang_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.yanluowang."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.yanluowang"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c705????????00000000 c705????????0f000000 c605????????00 e8???????? c645fc0d b9???????? 6a0a }
            // n = 7, score = 100
            //   c705????????00000000     |     
            //   c705????????0f000000     |     
            //   c605????????00       |                     
            //   e8????????           |                     
            //   c645fc0d             | mov                 byte ptr [ebp - 4], 0xd
            //   b9????????           |                     
            //   6a0a                 | push                0xa

        $sequence_1 = { e8???????? 8b953ceeffff 83fa10 722f 8b8d28eeffff 42 8bc1 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b953ceeffff         | mov                 edx, dword ptr [ebp - 0x11c4]
            //   83fa10               | cmp                 edx, 0x10
            //   722f                 | jb                  0x31
            //   8b8d28eeffff         | mov                 ecx, dword ptr [ebp - 0x11d8]
            //   42                   | inc                 edx
            //   8bc1                 | mov                 eax, ecx

        $sequence_2 = { c1c208 8b45fc 03c1 894db4 8b4de4 33c6 8b7db4 }
            // n = 7, score = 100
            //   c1c208               | rol                 edx, 8
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   03c1                 | add                 eax, ecx
            //   894db4               | mov                 dword ptr [ebp - 0x4c], ecx
            //   8b4de4               | mov                 ecx, dword ptr [ebp - 0x1c]
            //   33c6                 | xor                 eax, esi
            //   8b7db4               | mov                 edi, dword ptr [ebp - 0x4c]

        $sequence_3 = { 8b0c8538034600 0f95c0 02c0 3244392d 2402 3044392d 8d0412 }
            // n = 7, score = 100
            //   8b0c8538034600       | mov                 ecx, dword ptr [eax*4 + 0x460338]
            //   0f95c0               | setne               al
            //   02c0                 | add                 al, al
            //   3244392d             | xor                 al, byte ptr [ecx + edi + 0x2d]
            //   2402                 | and                 al, 2
            //   3044392d             | xor                 byte ptr [ecx + edi + 0x2d], al
            //   8d0412               | lea                 eax, [edx + edx]

        $sequence_4 = { 51 e8???????? 83c408 8b5574 c7858800000000000000 }
            // n = 5, score = 100
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8b5574               | mov                 edx, dword ptr [ebp + 0x74]
            //   c7858800000000000000     | mov    dword ptr [ebp + 0x88], 0

        $sequence_5 = { 6880000000 ffb5bcfcffff 56 ff15???????? 85c0 0f84a2030000 }
            // n = 6, score = 100
            //   6880000000           | push                0x80
            //   ffb5bcfcffff         | push                dword ptr [ebp - 0x344]
            //   56                   | push                esi
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f84a2030000         | je                  0x3a8

        $sequence_6 = { 8b484c 8b5044 89783c 33d1 8b7840 f7d1 8b7048 }
            // n = 7, score = 100
            //   8b484c               | mov                 ecx, dword ptr [eax + 0x4c]
            //   8b5044               | mov                 edx, dword ptr [eax + 0x44]
            //   89783c               | mov                 dword ptr [eax + 0x3c], edi
            //   33d1                 | xor                 edx, ecx
            //   8b7840               | mov                 edi, dword ptr [eax + 0x40]
            //   f7d1                 | not                 ecx
            //   8b7048               | mov                 esi, dword ptr [eax + 0x48]

        $sequence_7 = { 334dd4 03ce 8945bc 8b750c 8bd6 3375dc 23d3 }
            // n = 7, score = 100
            //   334dd4               | xor                 ecx, dword ptr [ebp - 0x2c]
            //   03ce                 | add                 ecx, esi
            //   8945bc               | mov                 dword ptr [ebp - 0x44], eax
            //   8b750c               | mov                 esi, dword ptr [ebp + 0xc]
            //   8bd6                 | mov                 edx, esi
            //   3375dc               | xor                 esi, dword ptr [ebp - 0x24]
            //   23d3                 | and                 edx, ebx

        $sequence_8 = { 8bc7 5f c9 c3 8b410c c3 55 }
            // n = 7, score = 100
            //   8bc7                 | mov                 eax, edi
            //   5f                   | pop                 edi
            //   c9                   | leave               
            //   c3                   | ret                 
            //   8b410c               | mov                 eax, dword ptr [ecx + 0xc]
            //   c3                   | ret                 
            //   55                   | push                ebp

        $sequence_9 = { 83e03f c1fa06 57 6bf830 8955fc 8b049538034600 8945f8 }
            // n = 7, score = 100
            //   83e03f               | and                 eax, 0x3f
            //   c1fa06               | sar                 edx, 6
            //   57                   | push                edi
            //   6bf830               | imul                edi, eax, 0x30
            //   8955fc               | mov                 dword ptr [ebp - 4], edx
            //   8b049538034600       | mov                 eax, dword ptr [edx*4 + 0x460338]
            //   8945f8               | mov                 dword ptr [ebp - 8], eax

    condition:
        7 of them and filesize < 834560
}