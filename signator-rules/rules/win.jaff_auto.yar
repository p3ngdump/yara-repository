rule win_jaff_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.jaff."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.jaff"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a2d 53 50 e8???????? 83c40c 56 }
            // n = 6, score = 600
            //   6a2d                 | push                0x2d
            //   53                   | push                ebx
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   56                   | push                esi

        $sequence_1 = { eb02 8bd0 41 3bc8 72ea 8d45d4 }
            // n = 6, score = 600
            //   eb02                 | jmp                 4
            //   8bd0                 | mov                 edx, eax
            //   41                   | inc                 ecx
            //   3bc8                 | cmp                 ecx, eax
            //   72ea                 | jb                  0xffffffec
            //   8d45d4               | lea                 eax, [ebp - 0x2c]

        $sequence_2 = { 8b7de8 66891438 46 83c002 49 8945f8 894dfc }
            // n = 7, score = 600
            //   8b7de8               | mov                 edi, dword ptr [ebp - 0x18]
            //   66891438             | mov                 word ptr [eax + edi], dx
            //   46                   | inc                 esi
            //   83c002               | add                 eax, 2
            //   49                   | dec                 ecx
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx

        $sequence_3 = { 8b55f8 8b45f4 6a00 8d4dfc 51 }
            // n = 5, score = 600
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   6a00                 | push                0
            //   8d4dfc               | lea                 ecx, [ebp - 4]
            //   51                   | push                ecx

        $sequence_4 = { 5e 5f 0f99c0 5b 8be5 5d c3 }
            // n = 7, score = 600
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi
            //   0f99c0               | setns               al
            //   5b                   | pop                 ebx
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 

        $sequence_5 = { 56 57 84c0 7439 807b0c00 7433 }
            // n = 6, score = 600
            //   56                   | push                esi
            //   57                   | push                edi
            //   84c0                 | test                al, al
            //   7439                 | je                  0x3b
            //   807b0c00             | cmp                 byte ptr [ebx + 0xc], 0
            //   7433                 | je                  0x35

        $sequence_6 = { 8b4604 8a4e0c 894704 8b4608 8d1400 52 }
            // n = 6, score = 600
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   8a4e0c               | mov                 cl, byte ptr [esi + 0xc]
            //   894704               | mov                 dword ptr [edi + 4], eax
            //   8b4608               | mov                 eax, dword ptr [esi + 8]
            //   8d1400               | lea                 edx, [eax + eax]
            //   52                   | push                edx

        $sequence_7 = { 8b75f0 8b5de8 c645f401 c645b100 85f6 7419 33c0 }
            // n = 7, score = 600
            //   8b75f0               | mov                 esi, dword ptr [ebp - 0x10]
            //   8b5de8               | mov                 ebx, dword ptr [ebp - 0x18]
            //   c645f401             | mov                 byte ptr [ebp - 0xc], 1
            //   c645b100             | mov                 byte ptr [ebp - 0x4f], 0
            //   85f6                 | test                esi, esi
            //   7419                 | je                  0x1b
            //   33c0                 | xor                 eax, eax

        $sequence_8 = { 8b4d08 8945ec 8b450c 50 51 }
            // n = 5, score = 600
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   50                   | push                eax
            //   51                   | push                ecx

        $sequence_9 = { 56 6a00 ff15???????? 6a0a }
            // n = 4, score = 600
            //   56                   | push                esi
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   6a0a                 | push                0xa

    condition:
        7 of them and filesize < 106496
}