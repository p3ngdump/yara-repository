rule win_badflick_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.badflick."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.badflick"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0f841c010000 83e804 746b 83e805 0f8566010000 }
            // n = 5, score = 100
            //   0f841c010000         | je                  0x122
            //   83e804               | sub                 eax, 4
            //   746b                 | je                  0x6d
            //   83e805               | sub                 eax, 5
            //   0f8566010000         | jne                 0x16c

        $sequence_1 = { 50 c7459844000000 e8???????? 33c0 }
            // n = 4, score = 100
            //   50                   | push                eax
            //   c7459844000000       | mov                 dword ptr [ebp - 0x68], 0x44
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax

        $sequence_2 = { e8???????? 59 59 8b4d08 894805 8b4d0c 89480d }
            // n = 7, score = 100
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   894805               | mov                 dword ptr [eax + 5], ecx
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   89480d               | mov                 dword ptr [eax + 0xd], ecx

        $sequence_3 = { 0f8574ffffff ff75f4 ff15???????? ff75fc }
            // n = 4, score = 100
            //   0f8574ffffff         | jne                 0xffffff7a
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   ff15????????         |                     
            //   ff75fc               | push                dword ptr [ebp - 4]

        $sequence_4 = { 8b450c 89460d 8b4510 57 ff7514 894611 }
            // n = 6, score = 100
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   89460d               | mov                 dword ptr [esi + 0xd], eax
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   57                   | push                edi
            //   ff7514               | push                dword ptr [ebp + 0x14]
            //   894611               | mov                 dword ptr [esi + 0x11], eax

        $sequence_5 = { 83c42c eb0b c605????????01 c645ff01 53 e8???????? 807dff00 }
            // n = 7, score = 100
            //   83c42c               | add                 esp, 0x2c
            //   eb0b                 | jmp                 0xd
            //   c605????????01       |                     
            //   c645ff01             | mov                 byte ptr [ebp - 1], 1
            //   53                   | push                ebx
            //   e8????????           |                     
            //   807dff00             | cmp                 byte ptr [ebp - 1], 0

        $sequence_6 = { ff75f8 ff75e4 ff15???????? ebce 55 8bec 56 }
            // n = 7, score = 100
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   ff75e4               | push                dword ptr [ebp - 0x1c]
            //   ff15????????         |                     
            //   ebce                 | jmp                 0xffffffd0
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   56                   | push                esi

        $sequence_7 = { 8d85a8fbffff 50 7408 e8???????? }
            // n = 4, score = 100
            //   8d85a8fbffff         | lea                 eax, [ebp - 0x458]
            //   50                   | push                eax
            //   7408                 | je                  0xa
            //   e8????????           |                     

        $sequence_8 = { 50 c645ff00 e8???????? 8b7d0c 83c709 57 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   c645ff00             | mov                 byte ptr [ebp - 1], 0
            //   e8????????           |                     
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   83c709               | add                 edi, 9
            //   57                   | push                edi

        $sequence_9 = { 8d85ccfdffff 50 8b45fc 8d8418d8fdffff 50 e8???????? }
            // n = 6, score = 100
            //   8d85ccfdffff         | lea                 eax, [ebp - 0x234]
            //   50                   | push                eax
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8d8418d8fdffff       | lea                 eax, [eax + ebx - 0x228]
            //   50                   | push                eax
            //   e8????????           |                     

    condition:
        7 of them and filesize < 81920
}