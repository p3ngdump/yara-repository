rule win_getmail_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.getmail."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.getmail"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7407 fec8 8841ff eb37 49 51 }
            // n = 6, score = 100
            //   7407                 | je                  9
            //   fec8                 | dec                 al
            //   8841ff               | mov                 byte ptr [ecx - 1], al
            //   eb37                 | jmp                 0x39
            //   49                   | dec                 ecx
            //   51                   | push                ecx

        $sequence_1 = { e8???????? 8b00 8d4c2418 50 51 8bce }
            // n = 6, score = 100
            //   e8????????           |                     
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8d4c2418             | lea                 ecx, [esp + 0x18]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   8bce                 | mov                 ecx, esi

        $sequence_2 = { 7552 85db 0f84a1000000 8a43ff 84c0 7421 }
            // n = 6, score = 100
            //   7552                 | jne                 0x54
            //   85db                 | test                ebx, ebx
            //   0f84a1000000         | je                  0xa7
            //   8a43ff               | mov                 al, byte ptr [ebx - 1]
            //   84c0                 | test                al, al
            //   7421                 | je                  0x23

        $sequence_3 = { e8???????? 83c40c 85c0 7530 8a430b 83c30b }
            // n = 6, score = 100
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   7530                 | jne                 0x32
            //   8a430b               | mov                 al, byte ptr [ebx + 0xb]
            //   83c30b               | add                 ebx, 0xb

        $sequence_4 = { 8945ec 8365f000 8365f400 8365f800 8365fc00 c745f08aa54000 8965f4 }
            // n = 7, score = 100
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   8365f000             | and                 dword ptr [ebp - 0x10], 0
            //   8365f400             | and                 dword ptr [ebp - 0xc], 0
            //   8365f800             | and                 dword ptr [ebp - 8], 0
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   c745f08aa54000       | mov                 dword ptr [ebp - 0x10], 0x40a58a
            //   8965f4               | mov                 dword ptr [ebp - 0xc], esp

        $sequence_5 = { 33f6 8b44242c 50 8b08 }
            // n = 4, score = 100
            //   33f6                 | xor                 esi, esi
            //   8b44242c             | mov                 eax, dword ptr [esp + 0x2c]
            //   50                   | push                eax
            //   8b08                 | mov                 ecx, dword ptr [eax]

        $sequence_6 = { 8d4b14 c644241c01 8811 896904 896908 89690c }
            // n = 6, score = 100
            //   8d4b14               | lea                 ecx, [ebx + 0x14]
            //   c644241c01           | mov                 byte ptr [esp + 0x1c], 1
            //   8811                 | mov                 byte ptr [ecx], dl
            //   896904               | mov                 dword ptr [ecx + 4], ebp
            //   896908               | mov                 dword ptr [ecx + 8], ebp
            //   89690c               | mov                 dword ptr [ecx + 0xc], ebp

        $sequence_7 = { 51 8b442410 56 8b742410 894c2404 }
            // n = 5, score = 100
            //   51                   | push                ecx
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   56                   | push                esi
            //   8b742410             | mov                 esi, dword ptr [esp + 0x10]
            //   894c2404             | mov                 dword ptr [esp + 4], ecx

        $sequence_8 = { eb0a 49 51 e8???????? 83c404 8b4c2444 8974241c }
            // n = 7, score = 100
            //   eb0a                 | jmp                 0xc
            //   49                   | dec                 ecx
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b4c2444             | mov                 ecx, dword ptr [esp + 0x44]
            //   8974241c             | mov                 dword ptr [esp + 0x1c], esi

        $sequence_9 = { c1e902 f3a5 a1???????? 8bcb 83e103 85c0 f3a4 }
            // n = 7, score = 100
            //   c1e902               | shr                 ecx, 2
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   a1????????           |                     
            //   8bcb                 | mov                 ecx, ebx
            //   83e103               | and                 ecx, 3
            //   85c0                 | test                eax, eax
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]

    condition:
        7 of them and filesize < 188416
}