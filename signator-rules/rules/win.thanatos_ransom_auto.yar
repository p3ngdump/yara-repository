rule win_thanatos_ransom_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.thanatos_ransom."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.thanatos_ransom"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { d1fe 6a55 ff34f5407a4200 ff7508 e8???????? 83c40c }
            // n = 6, score = 100
            //   d1fe                 | sar                 esi, 1
            //   6a55                 | push                0x55
            //   ff34f5407a4200       | push                dword ptr [esi*8 + 0x427a40]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_1 = { 8b4f14 83f910 7204 8b07 eb02 8bc7 803c303d }
            // n = 7, score = 100
            //   8b4f14               | mov                 ecx, dword ptr [edi + 0x14]
            //   83f910               | cmp                 ecx, 0x10
            //   7204                 | jb                  6
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   eb02                 | jmp                 4
            //   8bc7                 | mov                 eax, edi
            //   803c303d             | cmp                 byte ptr [eax + esi], 0x3d

        $sequence_2 = { 8d4dd8 e8???????? 83c404 68???????? 8bd0 c645fc10 }
            // n = 6, score = 100
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   68????????           |                     
            //   8bd0                 | mov                 edx, eax
            //   c645fc10             | mov                 byte ptr [ebp - 4], 0x10

        $sequence_3 = { 41 4a c60100 b8???????? c745dcfcb24200 8945bc 33db }
            // n = 7, score = 100
            //   41                   | inc                 ecx
            //   4a                   | dec                 edx
            //   c60100               | mov                 byte ptr [ecx], 0
            //   b8????????           |                     
            //   c745dcfcb24200       | mov                 dword ptr [ebp - 0x24], 0x42b2fc
            //   8945bc               | mov                 dword ptr [ebp - 0x44], eax
            //   33db                 | xor                 ebx, ebx

        $sequence_4 = { 037de0 8b45f0 8b55e8 8b0485e0774300 f644022880 }
            // n = 5, score = 100
            //   037de0               | add                 edi, dword ptr [ebp - 0x20]
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]
            //   8b0485e0774300       | mov                 eax, dword ptr [eax*4 + 0x4377e0]
            //   f644022880           | test                byte ptr [edx + eax + 0x28], 0x80

        $sequence_5 = { 8bc6 8bde c1fb06 83e03f 6bd030 895de4 8b049de0774300 }
            // n = 7, score = 100
            //   8bc6                 | mov                 eax, esi
            //   8bde                 | mov                 ebx, esi
            //   c1fb06               | sar                 ebx, 6
            //   83e03f               | and                 eax, 0x3f
            //   6bd030               | imul                edx, eax, 0x30
            //   895de4               | mov                 dword ptr [ebp - 0x1c], ebx
            //   8b049de0774300       | mov                 eax, dword ptr [ebx*4 + 0x4377e0]

        $sequence_6 = { 33c5 50 8d45f4 64a300000000 8b7508 837e1410 7204 }
            // n = 7, score = 100
            //   33c5                 | xor                 eax, ebp
            //   50                   | push                eax
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   837e1410             | cmp                 dword ptr [esi + 0x14], 0x10
            //   7204                 | jb                  6

        $sequence_7 = { c6459000 c645fc08 8b458c 83f810 7245 8b8d78ffffff 40 }
            // n = 7, score = 100
            //   c6459000             | mov                 byte ptr [ebp - 0x70], 0
            //   c645fc08             | mov                 byte ptr [ebp - 4], 8
            //   8b458c               | mov                 eax, dword ptr [ebp - 0x74]
            //   83f810               | cmp                 eax, 0x10
            //   7245                 | jb                  0x47
            //   8b8d78ffffff         | mov                 ecx, dword ptr [ebp - 0x88]
            //   40                   | inc                 eax

        $sequence_8 = { 7cde 8b45e8 8ad4 8b7d08 }
            // n = 4, score = 100
            //   7cde                 | jl                  0xffffffe0
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   8ad4                 | mov                 dl, ah
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]

        $sequence_9 = { 80e10f 8855ee 02c8 33f6 884ded 0f1f440000 0fb64435ec }
            // n = 7, score = 100
            //   80e10f               | and                 cl, 0xf
            //   8855ee               | mov                 byte ptr [ebp - 0x12], dl
            //   02c8                 | add                 cl, al
            //   33f6                 | xor                 esi, esi
            //   884ded               | mov                 byte ptr [ebp - 0x13], cl
            //   0f1f440000           | nop                 dword ptr [eax + eax]
            //   0fb64435ec           | movzx               eax, byte ptr [ebp + esi - 0x14]

    condition:
        7 of them and filesize < 516096
}