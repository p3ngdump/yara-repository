rule win_doppelpaymer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.doppelpaymer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.doppelpaymer"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 8b08 e8???????? 3db6389096 }
            // n = 4, score = 700
            //   e8????????           |                     
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   e8????????           |                     
            //   3db6389096           | cmp                 eax, 0x969038b6

        $sequence_1 = { 80790600 7523 80790264 751d }
            // n = 4, score = 700
            //   80790600             | cmp                 byte ptr [ecx + 6], 0
            //   7523                 | jne                 0x25
            //   80790264             | cmp                 byte ptr [ecx + 2], 0x64
            //   751d                 | jne                 0x1f

        $sequence_2 = { 80790561 7517 80790361 7511 80790474 750b }
            // n = 6, score = 700
            //   80790561             | cmp                 byte ptr [ecx + 5], 0x61
            //   7517                 | jne                 0x19
            //   80790361             | cmp                 byte ptr [ecx + 3], 0x61
            //   7511                 | jne                 0x13
            //   80790474             | cmp                 byte ptr [ecx + 4], 0x74
            //   750b                 | jne                 0xd

        $sequence_3 = { baffffff7f 43 e8???????? 3bd8 }
            // n = 4, score = 700
            //   baffffff7f           | mov                 edx, 0x7fffffff
            //   43                   | inc                 ebx
            //   e8????????           |                     
            //   3bd8                 | cmp                 ebx, eax

        $sequence_4 = { 83ec28 6800002002 6a00 6a01 }
            // n = 4, score = 700
            //   83ec28               | sub                 esp, 0x28
            //   6800002002           | push                0x2200000
            //   6a00                 | push                0
            //   6a01                 | push                1

        $sequence_5 = { 80790264 751d 80790561 7517 }
            // n = 4, score = 700
            //   80790264             | cmp                 byte ptr [ecx + 2], 0x64
            //   751d                 | jne                 0x1f
            //   80790561             | cmp                 byte ptr [ecx + 5], 0x61
            //   7517                 | jne                 0x19

        $sequence_6 = { 8d4c2414 e8???????? 6a00 8d4c241c e8???????? 8d84248c000000 }
            // n = 6, score = 600
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   e8????????           |                     
            //   6a00                 | push                0
            //   8d4c241c             | lea                 ecx, [esp + 0x1c]
            //   e8????????           |                     
            //   8d84248c000000       | lea                 eax, [esp + 0x8c]

        $sequence_7 = { 8d4c2414 e8???????? 6a00 8d4c2414 e8???????? 8944243c c7042400000000 }
            // n = 7, score = 600
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   e8????????           |                     
            //   6a00                 | push                0
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   e8????????           |                     
            //   8944243c             | mov                 dword ptr [esp + 0x3c], eax
            //   c7042400000000       | mov                 dword ptr [esp], 0

        $sequence_8 = { e9???????? 8b8568ffffff 8b8d6cffffff 8d55b4 }
            // n = 4, score = 100
            //   e9????????           |                     
            //   8b8568ffffff         | mov                 eax, dword ptr [ebp - 0x98]
            //   8b8d6cffffff         | mov                 ecx, dword ptr [ebp - 0x94]
            //   8d55b4               | lea                 edx, [ebp - 0x4c]

        $sequence_9 = { 888572ffffff 894dc0 0f84f2fdffff e9???????? 55 }
            // n = 5, score = 100
            //   888572ffffff         | mov                 byte ptr [ebp - 0x8e], al
            //   894dc0               | mov                 dword ptr [ebp - 0x40], ecx
            //   0f84f2fdffff         | je                  0xfffffdf8
            //   e9????????           |                     
            //   55                   | push                ebp

        $sequence_10 = { 8a3406 89c7 01cf 38d6 8945e4 }
            // n = 5, score = 100
            //   8a3406               | mov                 dh, byte ptr [esi + eax]
            //   89c7                 | mov                 edi, eax
            //   01cf                 | add                 edi, ecx
            //   38d6                 | cmp                 dh, dl
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax

        $sequence_11 = { 8975cc 897dc8 895dc4 894dc0 0f85bc000000 8b45c0 81c484000000 }
            // n = 7, score = 100
            //   8975cc               | mov                 dword ptr [ebp - 0x34], esi
            //   897dc8               | mov                 dword ptr [ebp - 0x38], edi
            //   895dc4               | mov                 dword ptr [ebp - 0x3c], ebx
            //   894dc0               | mov                 dword ptr [ebp - 0x40], ecx
            //   0f85bc000000         | jne                 0xc2
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   81c484000000         | add                 esp, 0x84

        $sequence_12 = { c1e106 c1ea1a 0fb69248644201 c1e91a }
            // n = 4, score = 100
            //   c1e106               | shl                 ecx, 6
            //   c1ea1a               | shr                 edx, 0x1a
            //   0fb69248644201       | movzx               edx, byte ptr [edx + 0x1426448]
            //   c1e91a               | shr                 ecx, 0x1a

        $sequence_13 = { 897594 895590 8b4590 8b4df0 81f1e6566258 8b55c0 8a1c02 }
            // n = 7, score = 100
            //   897594               | mov                 dword ptr [ebp - 0x6c], esi
            //   895590               | mov                 dword ptr [ebp - 0x70], edx
            //   8b4590               | mov                 eax, dword ptr [ebp - 0x70]
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   81f1e6566258         | xor                 ecx, 0x586256e6
            //   8b55c0               | mov                 edx, dword ptr [ebp - 0x40]
            //   8a1c02               | mov                 bl, byte ptr [edx + eax]

        $sequence_14 = { ebe5 31c0 8b4df0 88ca 8855e7 8945e8 ebd6 }
            // n = 7, score = 100
            //   ebe5                 | jmp                 0xffffffe7
            //   31c0                 | xor                 eax, eax
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   88ca                 | mov                 dl, cl
            //   8855e7               | mov                 byte ptr [ebp - 0x19], dl
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   ebd6                 | jmp                 0xffffffd8

        $sequence_15 = { e8???????? 31d2 8d75c8 8b7dc0 897dcc 8945a0 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   31d2                 | xor                 edx, edx
            //   8d75c8               | lea                 esi, [ebp - 0x38]
            //   8b7dc0               | mov                 edi, dword ptr [ebp - 0x40]
            //   897dcc               | mov                 dword ptr [ebp - 0x34], edi
            //   8945a0               | mov                 dword ptr [ebp - 0x60], eax

        $sequence_16 = { 894de8 eb0a 8b45e4 83c414 5e 5f 5d }
            // n = 7, score = 100
            //   894de8               | mov                 dword ptr [ebp - 0x18], ecx
            //   eb0a                 | jmp                 0xc
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]
            //   83c414               | add                 esp, 0x14
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi
            //   5d                   | pop                 ebp

        $sequence_17 = { c1e106 8bd1 c1ea1a 0fb69248644201 c1e106 885601 }
            // n = 6, score = 100
            //   c1e106               | shl                 ecx, 6
            //   8bd1                 | mov                 edx, ecx
            //   c1ea1a               | shr                 edx, 0x1a
            //   0fb69248644201       | movzx               edx, byte ptr [edx + 0x1426448]
            //   c1e106               | shl                 ecx, 6
            //   885601               | mov                 byte ptr [esi + 1], dl

    condition:
        7 of them and filesize < 7266304
}