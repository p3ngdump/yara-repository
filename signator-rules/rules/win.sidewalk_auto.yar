rule win_sidewalk_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.sidewalk."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.sidewalk"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 4503fa c1c00c 4403c0 4133f8 }
            // n = 4, score = 200
            //   4503fa               | add                 ebp, esi
            //   c1c00c               | inc                 ecx
            //   4403c0               | rol                 edx, 0x10
            //   4133f8               | inc                 ecx

        $sequence_1 = { 33d0 418bc7 33c3 c1c207 c1c00c 4403c8 4533d1 }
            // n = 7, score = 200
            //   33d0                 | inc                 esp
            //   418bc7               | add                 ebp, eax
            //   33c3                 | inc                 ecx
            //   c1c207               | xor                 ebx, ebx
            //   c1c00c               | inc                 ebp
            //   4403c8               | xor                 edx, ecx
            //   4533d1               | inc                 esp

        $sequence_2 = { 8a040f 3201 41880408 48ffc1 488d040a }
            // n = 5, score = 200
            //   8a040f               | xor                 ebx, ebx
            //   3201                 | rol                 ebx, 0xc
            //   41880408             | add                 edx, ebx
            //   48ffc1               | mov                 esi, edx
            //   488d040a             | inc                 esp

        $sequence_3 = { c1e108 0bc8 41890c10 488d5204 }
            // n = 4, score = 200
            //   c1e108               | add                 ebx, esi
            //   0bc8                 | inc                 esp
            //   41890c10             | add                 ebp, eax
            //   488d5204             | inc                 ecx

        $sequence_4 = { 89750b 4489750f 44897d03 448965ff 44896dfb }
            // n = 5, score = 200
            //   89750b               | add                 ebx, eax
            //   4489750f             | inc                 ecx
            //   44897d03             | xor                 ebx, ebx
            //   448965ff             | rol                 ebx, 0xc
            //   44896dfb             | add                 edx, ebx

        $sequence_5 = { c1e002 4d8d4904 4863d0 41ffc0 }
            // n = 4, score = 200
            //   c1e002               | inc                 ecx
            //   4d8d4904             | xor                 ebx, ebx
            //   4863d0               | inc                 ecx
            //   41ffc0               | mov                 ecx, ebp

        $sequence_6 = { 418b09 418bc0 c1e002 4d8d4904 }
            // n = 4, score = 200
            //   418b09               | inc                 ecx
            //   418bc0               | rol                 esi, 0x10
            //   c1e002               | inc                 ebp
            //   4d8d4904             | add                 esp, esi

        $sequence_7 = { 4403d8 4133db c1c30c 03d3 }
            // n = 4, score = 200
            //   4403d8               | mov                 eax, ebx
            //   4133db               | xor                 edx, eax
            //   c1c30c               | inc                 ecx
            //   03d3                 | mov                 eax, edi

        $sequence_8 = { 488d5204 4983e901 75d4 4863457f 33db }
            // n = 5, score = 200
            //   488d5204             | xor                 eax, esi
            //   4983e901             | rol                 eax, 0x10
            //   75d4                 | inc                 esp
            //   4863457f             | add                 ebx, eax
            //   33db                 | inc                 ecx

        $sequence_9 = { 4533d1 41c1c208 4503fa 418bdf 33d8 }
            // n = 5, score = 200
            //   4533d1               | inc                 ebp
            //   41c1c208             | xor                 edx, ecx
            //   4503fa               | inc                 ecx
            //   418bdf               | rol                 edx, 8
            //   33d8                 | inc                 ebp

        $sequence_10 = { 483bc6 7ce2 4883c640 4883c340 4883ef40 }
            // n = 5, score = 200
            //   483bc6               | rol                 ebx, 7
            //   7ce2                 | inc                 esp
            //   4883c640             | add                 ebx, esi
            //   4883c340             | inc                 esp
            //   4883ef40             | add                 ebp, eax

        $sequence_11 = { 33c6 c1c010 4403d8 4133db }
            // n = 4, score = 200
            //   33c6                 | inc                 esp
            //   c1c010               | add                 ebx, eax
            //   4403d8               | inc                 ecx
            //   4133db               | xor                 ebx, ebx

        $sequence_12 = { 4403de 4403e8 4133db 418bcd c1c307 4133c8 }
            // n = 6, score = 200
            //   4403de               | inc                 ebp
            //   4403e8               | add                 edi, edx
            //   4133db               | inc                 ecx
            //   418bcd               | mov                 ebx, edi
            //   c1c307               | xor                 ebx, eax
            //   4133c8               | xor                 eax, esi

        $sequence_13 = { c1e918 884202 884a03 4183f810 }
            // n = 4, score = 200
            //   c1e918               | dec                 eax
            //   884202               | arpl                word ptr [ebp + 0x7f], ax
            //   884a03               | xor                 ebx, ebx
            //   4183f810             | mov                 al, byte ptr [edi + ecx]

        $sequence_14 = { 4533d1 4403ee 41c1c210 418bc3 }
            // n = 4, score = 200
            //   4533d1               | rol                 esi, 8
            //   4403ee               | rol                 eax, 0x10
            //   41c1c210             | inc                 esp
            //   418bc3               | add                 ebx, esi

        $sequence_15 = { 4133c6 c1c608 c1c010 4403de 4403e8 4133db }
            // n = 6, score = 200
            //   4133c6               | add                 edi, edx
            //   c1c608               | inc                 ecx
            //   c1c010               | mov                 ebx, edi
            //   4403de               | xor                 ebx, eax
            //   4403e8               | inc                 ecx
            //   4133db               | xor                 eax, esi

    condition:
        7 of them and filesize < 237568
}