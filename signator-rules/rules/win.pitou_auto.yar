rule win_pitou_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.pitou."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pitou"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c1e305 03c3 8bda c1eb02 03c3 }
            // n = 5, score = 700
            //   c1e305               | test                ebx, ebx
            //   03c3                 | js                  0xffff51e8
            //   8bda                 | dec                 eax
            //   c1eb02               | mov                 ecx, dword ptr [esp + 0x30]
            //   03c3                 | mov                 ebx, eax

        $sequence_1 = { 8a6201 80f457 8acc 80e103 8aec c0ed03 }
            // n = 6, score = 700
            //   8a6201               | mov                 eax, dword ptr [esp]
            //   80f457               | dec                 eax
            //   8acc                 | mov                 dword ptr [esp + eax*8 + 0x10], 0
            //   80e103               | jmp                 0x4a
            //   8aec                 | dec                 eax
            //   c0ed03               | mov                 dword ptr [esp + 0x3e8], 0

        $sequence_2 = { 8a6201 80f457 8acc 80e103 }
            // n = 4, score = 700
            //   8a6201               | test                ebx, ebx
            //   80f457               | je                  0x19ebd
            //   8acc                 | mov                 eax, edi
            //   80e103               | mov                 dword ptr [esi + 0x88], ebx

        $sequence_3 = { 8afb 80e703 c0eb05 80e303 80ff00 }
            // n = 5, score = 700
            //   8afb                 | cmp                 eax, 1
            //   80e703               | je                  0xb264
            //   c0eb05               | mov                 al, byte ptr [edi + 0x24]
            //   80e303               | test                al, 1
            //   80ff00               | je                  0xb264

        $sequence_4 = { 80e103 8aec c0ed03 80e507 }
            // n = 4, score = 700
            //   80e103               | dec                 ebp
            //   8aec                 | test                edx, edx
            //   c0ed03               | inc                 bp
            //   80e507               | cmp                 ecx, eax

        $sequence_5 = { 8a12 80f257 8ada c0eb02 }
            // n = 4, score = 700
            //   8a12                 | je                  0x99f7
            //   80f257               | test                ecx, ecx
            //   8ada                 | je                  0xbb08
            //   c0eb02               | mov                 edx, dword ptr [ecx]

        $sequence_6 = { 33c0 ac 8bda c1e305 03c3 8bda c1eb02 }
            // n = 7, score = 700
            //   33c0                 | add                 ecx, 2
            //   ac                   | jne                 0xbd6
            //   8bda                 | mov                 cx, word ptr [esi]
            //   c1e305               | rol                 cx, 8
            //   03c3                 | movzx               eax, cx
            //   8bda                 | cmp                 eax, 4
            //   c1eb02               | jae                 0xbd6

        $sequence_7 = { 8bda c1eb02 03c3 33d0 }
            // n = 4, score = 700
            //   8bda                 | imul                eax, eax, 0x11c
            //   c1eb02               | mov                 ecx, dword ptr [ebp - 4]
            //   03c3                 | movzx               eax, word ptr [eax + ecx + 0x1e]
            //   33d0                 | mov                 eax, dword ptr [ebp - 8]

        $sequence_8 = { ac 8bda c1e305 03c3 8bda c1eb02 03c3 }
            // n = 7, score = 700
            //   ac                   | mov                 word ptr [eax + 0xe], dx
            //   8bda                 | mov                 dword ptr [eax + 8], ecx
            //   c1e305               | mov                 dword ptr [eax], 0
            //   03c3                 | mov                 dword ptr [eax + 0xc], edx
            //   8bda                 | mov                 dword ptr [eax + 4], esi
            //   c1eb02               | test                ecx, ecx
            //   03c3                 | je                  0x6d1f

        $sequence_9 = { 8afb 80e703 c0eb05 80e303 }
            // n = 4, score = 700
            //   8afb                 | push                esi
            //   80e703               | test                esi, esi
            //   c0eb05               | je                  0xfffefb59
            //   80e303               | cmp                 byte ptr [ebp - 1], 0

    condition:
        7 of them and filesize < 1106944
}