rule win_banatrix_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.banatrix."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.banatrix"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 034dc8 85ff 7406 66833900 7421 }
            // n = 5, score = 200
            //   034dc8               | add                 ecx, dword ptr [ebp - 0x38]
            //   85ff                 | test                edi, edi
            //   7406                 | je                  8
            //   66833900             | cmp                 word ptr [ecx], 0
            //   7421                 | je                  0x23

        $sequence_1 = { 0fb74206 3945d0 7cc8 eb6d }
            // n = 4, score = 200
            //   0fb74206             | movzx               eax, word ptr [edx + 6]
            //   3945d0               | cmp                 dword ptr [ebp - 0x30], eax
            //   7cc8                 | jl                  0xffffffca
            //   eb6d                 | jmp                 0x6f

        $sequence_2 = { e8???????? 83ec10 85c0 8945d4 7542 8b45d0 c744240c04000000 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83ec10               | sub                 esp, 0x10
            //   85c0                 | test                eax, eax
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax
            //   7542                 | jne                 0x44
            //   8b45d0               | mov                 eax, dword ptr [ebp - 0x30]
            //   c744240c04000000     | mov                 dword ptr [esp + 0xc], 4

        $sequence_3 = { f3a4 8b7508 8b7dd4 03463c }
            // n = 4, score = 200
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8b7dd4               | mov                 edi, dword ptr [ebp - 0x2c]
            //   03463c               | add                 eax, dword ptr [esi + 0x3c]

        $sequence_4 = { 89c2 ebe0 0f86dc000000 8d7101 39c1 }
            // n = 5, score = 200
            //   89c2                 | mov                 edx, eax
            //   ebe0                 | jmp                 0xffffffe2
            //   0f86dc000000         | jbe                 0xe2
            //   8d7101               | lea                 esi, [ecx + 1]
            //   39c1                 | cmp                 ecx, eax

        $sequence_5 = { eb2c 0375d0 8975c8 eb24 8b4b20 894c2408 }
            // n = 6, score = 200
            //   eb2c                 | jmp                 0x2e
            //   0375d0               | add                 esi, dword ptr [ebp - 0x30]
            //   8975c8               | mov                 dword ptr [ebp - 0x38], esi
            //   eb24                 | jmp                 0x26
            //   8b4b20               | mov                 ecx, dword ptr [ebx + 0x20]
            //   894c2408             | mov                 dword ptr [esp + 8], ecx

        $sequence_6 = { 85db 0f849c000000 837b1000 7429 }
            // n = 4, score = 200
            //   85db                 | test                ebx, ebx
            //   0f849c000000         | je                  0xa2
            //   837b1000             | cmp                 dword ptr [ebx + 0x10], 0
            //   7429                 | je                  0x2b

        $sequence_7 = { 89f7 66c1ef0c 6683ff03 750f }
            // n = 4, score = 200
            //   89f7                 | mov                 edi, esi
            //   66c1ef0c             | shr                 di, 0xc
            //   6683ff03             | cmp                 di, 3
            //   750f                 | jne                 0x11

        $sequence_8 = { 8b4dc4 0fb701 897c2404 891c24 }
            // n = 4, score = 200
            //   8b4dc4               | mov                 ecx, dword ptr [ebp - 0x3c]
            //   0fb701               | movzx               eax, word ptr [ecx]
            //   897c2404             | mov                 dword ptr [esp + 4], edi
            //   891c24               | mov                 dword ptr [esp], ebx

        $sequence_9 = { 8b4508 8b550c 5d 8b4004 0302 }
            // n = 5, score = 200
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   5d                   | pop                 ebp
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   0302                 | add                 eax, dword ptr [edx]

    condition:
        7 of them and filesize < 180224
}