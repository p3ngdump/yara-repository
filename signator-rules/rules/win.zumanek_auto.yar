rule win_zumanek_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.zumanek."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zumanek"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0098d01da4a2 6f 27 4c 01af7b33f0b7 }
            // n = 5, score = 100
            //   0098d01da4a2         | add                 byte ptr [eax - 0x5d5be230], bl
            //   6f                   | outsd               dx, dword ptr [esi]
            //   27                   | daa                 
            //   4c                   | dec                 esp
            //   01af7b33f0b7         | add                 dword ptr [edi - 0x480fcc85], ebp

        $sequence_1 = { 17 d8be45f22f91 7c8b e45f 22f9 }
            // n = 5, score = 100
            //   17                   | pop                 ss
            //   d8be45f22f91         | fdivr               dword ptr [esi - 0x6ed00dbb]
            //   7c8b                 | jl                  0xffffff8d
            //   e45f                 | in                  al, 0x5f
            //   22f9                 | and                 bh, cl

        $sequence_2 = { 811212242434 48 3c91 4a 225a44 6c 7c89 }
            // n = 7, score = 100
            //   811212242434         | adc                 dword ptr [edx], 0x34242412
            //   48                   | dec                 eax
            //   3c91                 | cmp                 al, 0x91
            //   4a                   | dec                 edx
            //   225a44               | and                 bl, byte ptr [edx + 0x44]
            //   6c                   | insb                byte ptr es:[edi], dx
            //   7c89                 | jl                  0xffffff8b

        $sequence_3 = { 2866ef 63a24f06c479 7040 96 50 44 3da3a9973d }
            // n = 7, score = 100
            //   2866ef               | sub                 byte ptr [esi - 0x11], ah
            //   63a24f06c479         | arpl                word ptr [edx + 0x79c4064f], sp
            //   7040                 | jo                  0x42
            //   96                   | xchg                eax, esi
            //   50                   | push                eax
            //   44                   | inc                 esp
            //   3da3a9973d           | cmp                 eax, 0x3d97a9a3

        $sequence_4 = { 22f9 17 c8be45f2 2c09 }
            // n = 4, score = 100
            //   22f9                 | and                 bh, cl
            //   17                   | pop                 ss
            //   c8be45f2             | enter               0x45be, -0xe
            //   2c09                 | sub                 al, 9

        $sequence_5 = { e9???????? d5a8 ffcc 82dff4 2438 1a6549 }
            // n = 6, score = 100
            //   e9????????           |                     
            //   d5a8                 | aad                 0xa8
            //   ffcc                 | dec                 esp
            //   82dff4               | sbb                 bh, 0xf4
            //   2438                 | and                 al, 0x38
            //   1a6549               | sbb                 ah, byte ptr [ebp + 0x49]

        $sequence_6 = { 3e51 896b12 7924 88489f 91 b922c744d6 }
            // n = 6, score = 100
            //   3e51                 | push                ecx
            //   896b12               | mov                 dword ptr [ebx + 0x12], ebp
            //   7924                 | jns                 0x26
            //   88489f               | mov                 byte ptr [eax - 0x61], cl
            //   91                   | xchg                eax, ecx
            //   b922c744d6           | mov                 ecx, 0xd644c722

        $sequence_7 = { 303489 3812 3c24 40 }
            // n = 4, score = 100
            //   303489               | xor                 byte ptr [ecx + ecx*4], dh
            //   3812                 | cmp                 byte ptr [edx], dl
            //   3c24                 | cmp                 al, 0x24
            //   40                   | inc                 eax

        $sequence_8 = { 30443438 893c12 40 2444 48 48 }
            // n = 6, score = 100
            //   30443438             | xor                 byte ptr [esp + esi + 0x38], al
            //   893c12               | mov                 dword ptr [edx + edx], edi
            //   40                   | inc                 eax
            //   2444                 | and                 al, 0x44
            //   48                   | dec                 eax
            //   48                   | dec                 eax

        $sequence_9 = { 4d 6208 92 8808 6311 3522772025 6444 }
            // n = 7, score = 100
            //   4d                   | dec                 ebp
            //   6208                 | bound               ecx, qword ptr [eax]
            //   92                   | xchg                eax, edx
            //   8808                 | mov                 byte ptr [eax], cl
            //   6311                 | arpl                word ptr [ecx], dx
            //   3522772025           | xor                 eax, 0x25207722
            //   6444                 | inc                 esp

    condition:
        7 of them and filesize < 58867712
}