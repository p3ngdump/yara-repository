rule win_final1stspy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.final1stspy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.final1stspy"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8acb 3aca 7425 8a4801 40 84c9 }
            // n = 6, score = 300
            //   8acb                 | mov                 cl, bl
            //   3aca                 | cmp                 cl, dl
            //   7425                 | je                  0x27
            //   8a4801               | mov                 cl, byte ptr [eax + 1]
            //   40                   | inc                 eax
            //   84c9                 | test                cl, cl

        $sequence_1 = { 8a1d???????? 33ff 90 85ff 7519 b8???????? 84db }
            // n = 7, score = 300
            //   8a1d????????         |                     
            //   33ff                 | xor                 edi, edi
            //   90                   | nop                 
            //   85ff                 | test                edi, edi
            //   7519                 | jne                 0x1b
            //   b8????????           |                     
            //   84db                 | test                bl, bl

        $sequence_2 = { 0f114c0f10 83c120 3bca 7cd4 3bce }
            // n = 5, score = 300
            //   0f114c0f10           | movups              xmmword ptr [edi + ecx + 0x10], xmm1
            //   83c120               | add                 ecx, 0x20
            //   3bca                 | cmp                 ecx, edx
            //   7cd4                 | jl                  0xffffffd6
            //   3bce                 | cmp                 ecx, esi

        $sequence_3 = { 83c404 894df8 8bf1 8b4dfc }
            // n = 4, score = 300
            //   83c404               | add                 esp, 4
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   8bf1                 | mov                 esi, ecx
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]

        $sequence_4 = { 7410 8a11 8acb 3aca }
            // n = 4, score = 300
            //   7410                 | je                  0x12
            //   8a11                 | mov                 dl, byte ptr [ecx]
            //   8acb                 | mov                 cl, bl
            //   3aca                 | cmp                 cl, dl

        $sequence_5 = { 46 8a1d???????? 8b4dfc 83c104 894dfc }
            // n = 5, score = 300
            //   46                   | inc                 esi
            //   8a1d????????         |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   83c104               | add                 ecx, 4
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx

        $sequence_6 = { 7cf6 8b3d???????? 66660f1f840000000000 be00080000 68204e0000 ffd7 83ee01 }
            // n = 7, score = 300
            //   7cf6                 | jl                  0xfffffff8
            //   8b3d????????         |                     
            //   66660f1f840000000000     | nop    word ptr [eax + eax]
            //   be00080000           | mov                 esi, 0x800
            //   68204e0000           | push                0x4e20
            //   ffd7                 | call                edi
            //   83ee01               | sub                 esi, 1

        $sequence_7 = { c3 2d???????? 78b0 03d0 8b45fc }
            // n = 5, score = 300
            //   c3                   | ret                 
            //   2d????????           |                     
            //   78b0                 | js                  0xffffffb2
            //   03d0                 | add                 edx, eax
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]

        $sequence_8 = { bf01000000 eb2b b8???????? 8acb }
            // n = 4, score = 300
            //   bf01000000           | mov                 edi, 1
            //   eb2b                 | jmp                 0x2d
            //   b8????????           |                     
            //   8acb                 | mov                 cl, bl

        $sequence_9 = { 3bca 7cd4 3bce 7d11 8a1439 80c27a }
            // n = 6, score = 300
            //   3bca                 | cmp                 ecx, edx
            //   7cd4                 | jl                  0xffffffd6
            //   3bce                 | cmp                 ecx, esi
            //   7d11                 | jge                 0x13
            //   8a1439               | mov                 dl, byte ptr [ecx + edi]
            //   80c27a               | add                 dl, 0x7a

    condition:
        7 of them and filesize < 557056
}