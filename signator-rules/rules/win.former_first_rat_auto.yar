rule win_former_first_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.former_first_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.former_first_rat"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c3 3bf0 7410 8b4d0c 2bce }
            // n = 5, score = 200
            //   c3                   | ret                 
            //   3bf0                 | cmp                 esi, eax
            //   7410                 | je                  0x12
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   2bce                 | sub                 ecx, esi

        $sequence_1 = { 3bde 750d 68???????? e8???????? 83c404 b904000000 }
            // n = 6, score = 200
            //   3bde                 | cmp                 ebx, esi
            //   750d                 | jne                 0xf
            //   68????????           |                     
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   b904000000           | mov                 ecx, 4

        $sequence_2 = { 68???????? bb01000000 8db504ffffff e8???????? 68???????? bb03000000 }
            // n = 6, score = 200
            //   68????????           |                     
            //   bb01000000           | mov                 ebx, 1
            //   8db504ffffff         | lea                 esi, [ebp - 0xfc]
            //   e8????????           |                     
            //   68????????           |                     
            //   bb03000000           | mov                 ebx, 3

        $sequence_3 = { 75f9 2bc2 741d 8d4702 }
            // n = 4, score = 200
            //   75f9                 | jne                 0xfffffffb
            //   2bc2                 | sub                 eax, edx
            //   741d                 | je                  0x1f
            //   8d4702               | lea                 eax, [edi + 2]

        $sequence_4 = { f7d8 1bc0 83c002 8d4c3920 89bda8fbffff 8985acfbffff 3b4b04 }
            // n = 7, score = 200
            //   f7d8                 | neg                 eax
            //   1bc0                 | sbb                 eax, eax
            //   83c002               | add                 eax, 2
            //   8d4c3920             | lea                 ecx, [ecx + edi + 0x20]
            //   89bda8fbffff         | mov                 dword ptr [ebp - 0x458], edi
            //   8985acfbffff         | mov                 dword ptr [ebp - 0x454], eax
            //   3b4b04               | cmp                 ecx, dword ptr [ebx + 4]

        $sequence_5 = { 50 8d842400040000 64a300000000 68???????? 68???????? }
            // n = 5, score = 200
            //   50                   | push                eax
            //   8d842400040000       | lea                 eax, [esp + 0x400]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   68????????           |                     
            //   68????????           |                     

        $sequence_6 = { 8b15???????? 8985d8feffff a1???????? 898ddcfeffff }
            // n = 4, score = 200
            //   8b15????????         |                     
            //   8985d8feffff         | mov                 dword ptr [ebp - 0x128], eax
            //   a1????????           |                     
            //   898ddcfeffff         | mov                 dword ptr [ebp - 0x124], ecx

        $sequence_7 = { 8b9508ffffff 52 83f801 0f8407020000 83f802 }
            // n = 5, score = 200
            //   8b9508ffffff         | mov                 edx, dword ptr [ebp - 0xf8]
            //   52                   | push                edx
            //   83f801               | cmp                 eax, 1
            //   0f8407020000         | je                  0x20d
            //   83f802               | cmp                 eax, 2

        $sequence_8 = { 03c2 83e003 3bc2 7516 418bc2 }
            // n = 5, score = 100
            //   03c2                 | mov                 byte ptr [ebx], dl
            //   83e003               | inc                 edx
            //   3bc2                 | xor                 byte ptr [ecx + eax], dl
            //   7516                 | inc                 edx
            //   418bc2               | mov                 cl, byte ptr [ecx + eax]

        $sequence_9 = { 017130 83793005 7407 33c0 }
            // n = 4, score = 100
            //   017130               | add                 dword ptr [ecx + 0x30], esi
            //   83793005             | cmp                 dword ptr [ecx + 0x30], 5
            //   7407                 | je                  9
            //   33c0                 | xor                 eax, eax

        $sequence_10 = { 02ca 4402d1 410fb6ca 42321401 }
            // n = 4, score = 100
            //   02ca                 | dec                 eax
            //   4402d1               | cmp                 edi, eax
            //   410fb6ca             | add                 cl, al
            //   42321401             | dec                 eax

        $sequence_11 = { 02c8 488d05f0f60100 02c9 4002ce }
            // n = 4, score = 100
            //   02c8                 | mov                 eax, dword ptr [ecx + 0x10]
            //   488d05f0f60100       | cmp                 dword ptr [eax + 0x94], 0
            //   02c9                 | add                 cl, al
            //   4002ce               | dec                 eax

        $sequence_12 = { 03c1 89442468 413bc5 7250 }
            // n = 4, score = 100
            //   03c1                 | inc                 ecx
            //   89442468             | movzx               ecx, dl
            //   413bc5               | inc                 edx
            //   7250                 | xor                 dl, byte ptr [ecx + eax]

        $sequence_13 = { 03cf 8908 488b4340 48833800 }
            // n = 4, score = 100
            //   03cf                 | inc                 ecx
            //   8908                 | xor                 byte ptr [ebx + edi], dl
            //   488b4340             | add                 ecx, edx
            //   48833800             | movzx               ecx, cl

        $sequence_14 = { 03ca 0fb6c9 428a1401 4130143b }
            // n = 4, score = 100
            //   03ca                 | mov                 dword ptr [esp + 0x68], eax
            //   0fb6c9               | inc                 ecx
            //   428a1401             | cmp                 eax, ebp
            //   4130143b             | jb                  0x59

        $sequence_15 = { 03cd 8908 f6437804 7417 }
            // n = 4, score = 100
            //   03cd                 | jne                 0x1d
            //   8908                 | inc                 ecx
            //   f6437804             | mov                 eax, edx
            //   7417                 | add                 eax, edx

    condition:
        7 of them and filesize < 626688
}