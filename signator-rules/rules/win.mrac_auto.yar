rule win_mrac_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.mrac."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mrac"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 3479 c68424b20a000000 888424b10a0000 8d8c24940a0000 8a8424980a0000 e8???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   3479                 | xor                 al, 0x79
            //   c68424b20a000000     | mov                 byte ptr [esp + 0xab2], 0
            //   888424b10a0000       | mov                 byte ptr [esp + 0xab1], al
            //   8d8c24940a0000       | lea                 ecx, [esp + 0xa94]
            //   8a8424980a0000       | mov                 al, byte ptr [esp + 0xa98]
            //   e8????????           |                     

        $sequence_1 = { 88442410 8b442404 0409 342f 88442411 8b442404 }
            // n = 6, score = 200
            //   88442410             | mov                 byte ptr [esp + 0x10], al
            //   8b442404             | mov                 eax, dword ptr [esp + 4]
            //   0409                 | add                 al, 9
            //   342f                 | xor                 al, 0x2f
            //   88442411             | mov                 byte ptr [esp + 0x11], al
            //   8b442404             | mov                 eax, dword ptr [esp + 4]

        $sequence_2 = { 8d45f4 64a300000000 8bd9 895dd8 c70300000000 c7430400000000 c7430800000000 }
            // n = 7, score = 200
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8bd9                 | mov                 ebx, ecx
            //   895dd8               | mov                 dword ptr [ebp - 0x28], ebx
            //   c70300000000         | mov                 dword ptr [ebx], 0
            //   c7430400000000       | mov                 dword ptr [ebx + 4], 0
            //   c7430800000000       | mov                 dword ptr [ebx + 8], 0

        $sequence_3 = { 50 ffd6 6a00 6a00 ff742450 8d842498000000 50 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff742450             | push                dword ptr [esp + 0x50]
            //   8d842498000000       | lea                 eax, [esp + 0x98]
            //   50                   | push                eax

        $sequence_4 = { e8???????? 0420 888424f0090000 6a4b 8d8c24d8090000 e8???????? 042f }
            // n = 7, score = 200
            //   e8????????           |                     
            //   0420                 | add                 al, 0x20
            //   888424f0090000       | mov                 byte ptr [esp + 0x9f0], al
            //   6a4b                 | push                0x4b
            //   8d8c24d8090000       | lea                 ecx, [esp + 0x9d8]
            //   e8????????           |                     
            //   042f                 | add                 al, 0x2f

        $sequence_5 = { 0452 8d8c24c4030000 6a77 888424db030000 e8???????? 0459 8d8c24c4030000 }
            // n = 7, score = 200
            //   0452                 | add                 al, 0x52
            //   8d8c24c4030000       | lea                 ecx, [esp + 0x3c4]
            //   6a77                 | push                0x77
            //   888424db030000       | mov                 byte ptr [esp + 0x3db], al
            //   e8????????           |                     
            //   0459                 | add                 al, 0x59
            //   8d8c24c4030000       | lea                 ecx, [esp + 0x3c4]

        $sequence_6 = { 0413 c68424d804000000 3479 888424d7040000 8a8424c4040000 e8???????? 8bc8 }
            // n = 7, score = 200
            //   0413                 | add                 al, 0x13
            //   c68424d804000000     | mov                 byte ptr [esp + 0x4d8], 0
            //   3479                 | xor                 al, 0x79
            //   888424d7040000       | mov                 byte ptr [esp + 0x4d7], al
            //   8a8424c4040000       | mov                 al, byte ptr [esp + 0x4c4]
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax

        $sequence_7 = { 041c 3420 88442450 8b442430 041d 343e 88442451 }
            // n = 7, score = 200
            //   041c                 | add                 al, 0x1c
            //   3420                 | xor                 al, 0x20
            //   88442450             | mov                 byte ptr [esp + 0x50], al
            //   8b442430             | mov                 eax, dword ptr [esp + 0x30]
            //   041d                 | add                 al, 0x1d
            //   343e                 | xor                 al, 0x3e
            //   88442451             | mov                 byte ptr [esp + 0x51], al

        $sequence_8 = { 6a0e 8884242d110000 e8???????? 3420 8d8c2418110000 6a0f 8884242e110000 }
            // n = 7, score = 200
            //   6a0e                 | push                0xe
            //   8884242d110000       | mov                 byte ptr [esp + 0x112d], al
            //   e8????????           |                     
            //   3420                 | xor                 al, 0x20
            //   8d8c2418110000       | lea                 ecx, [esp + 0x1118]
            //   6a0f                 | push                0xf
            //   8884242e110000       | mov                 byte ptr [esp + 0x112e], al

        $sequence_9 = { e8???????? 3445 8d8c2418110000 6a13 88842432110000 e8???????? 3445 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   3445                 | xor                 al, 0x45
            //   8d8c2418110000       | lea                 ecx, [esp + 0x1118]
            //   6a13                 | push                0x13
            //   88842432110000       | mov                 byte ptr [esp + 0x1132], al
            //   e8????????           |                     
            //   3445                 | xor                 al, 0x45

    condition:
        7 of them and filesize < 745472
}