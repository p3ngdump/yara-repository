rule win_lockfile_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.lockfile."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.lockfile"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 4c8bca 483bc1 49894608 498b4510 4983d100 48f726 4b8d0c01 }
            // n = 7, score = 200
            //   4c8bca               | inc                 esp
            //   483bc1               | add                 ecx, eax
            //   49894608             | mov                 eax, edi
            //   498b4510             | xor                 eax, esi
            //   4983d100             | inc                 ebp
            //   48f726               | mov                 eax, ecx
            //   4b8d0c01             | xor                 eax, ebx

        $sequence_1 = { 0fb60c0a c1e103 4863c9 488d15d9270700 33440a03 8b4c2438 ffc1 }
            // n = 7, score = 200
            //   0fb60c0a             | adc                 esi, ecx
            //   c1e103               | dec                 ecx
            //   4863c9               | mov                 esi, esi
            //   488d15d9270700       | dec                 esp
            //   33440a03             | mov                 esi, dword ptr [esp + 0x48]
            //   8b4c2438             | dec                 eax
            //   ffc1                 | mov                 dword ptr [ebx + 0x18], esi

        $sequence_2 = { c74424309c020000 4c8b75b0 498bce 4c8b7c2450 4d3bf7 490f42cf 90 }
            // n = 7, score = 200
            //   c74424309c020000     | dec                 eax
            //   4c8b75b0             | mov                 ecx, dword ptr [ebp + 0x90]
            //   498bce               | dec                 eax
            //   4c8b7c2450           | mov                 ecx, dword ptr [ebp + 0x90]
            //   4d3bf7               | dec                 eax
            //   490f42cf             | mov                 ecx, eax
            //   90                   | dec                 esp

        $sequence_3 = { 660fefc1 660f7f45df 85d2 7403 fe430f 458bc1 488d4ddf }
            // n = 7, score = 200
            //   660fefc1             | add                 esp, dword ptr [esp + 0x18]
            //   660f7f45df           | dec                 esp
            //   85d2                 | add                 esp, dword ptr [esp + 0x20]
            //   7403                 | dec                 ebx
            //   fe430f               | lea                 edi, [esp + edi]
            //   458bc1               | dec                 esi
            //   488d4ddf             | lea                 edx, [edi + ebx]

        $sequence_4 = { 488b06 458d4101 ff5030 83ef08 83eb01 75d2 488b5c2450 }
            // n = 7, score = 200
            //   488b06               | mov                 eax, dword ptr [ebp - 0x80]
            //   458d4101             | add                 al, 0x1c
            //   ff5030               | xor                 al, 0x6b
            //   83ef08               | mov                 byte ptr [ebp - 0x60], al
            //   83eb01               | mov                 eax, dword ptr [ebp - 0x80]
            //   75d2                 | mov                 byte ptr [ebp - 0x60], al
            //   488b5c2450           | mov                 eax, dword ptr [ebp - 0x80]

        $sequence_5 = { 7e97 4c393f 7462 f7470800080000 7409 488d55f0 488bcf }
            // n = 7, score = 200
            //   7e97                 | inc                 ecx
            //   4c393f               | sub                 ecx, 8
            //   7462                 | je                  0x599
            //   f7470800080000       | dec                 eax
            //   7409                 | mov                 dword ptr [ecx], eax
            //   488d55f0             | inc                 ebp
            //   488bcf               | xor                 eax, eax

        $sequence_6 = { e8???????? 8bc8 488bc3 ff15???????? 4885c0 7414 458ac7 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8bc8                 | cmp                 ebx, eax
            //   488bc3               | dec                 esp
            //   ff15????????         |                     
            //   4885c0               | cmovb               eax, ebx
            //   7414                 | dec                 eax
            //   458ac7               | mov                 ecx, esi

        $sequence_7 = { c1c105 4103c5 41c1c802 4103c1 448d89d6c162ca 4403c8 8bc2 }
            // n = 7, score = 200
            //   c1c105               | mov                 eax, dword ptr [edi + 0x50]
            //   4103c5               | dec                 eax
            //   41c1c802             | mov                 dword ptr [ebx + 0x50], eax
            //   4103c1               | dec                 eax
            //   448d89d6c162ca       | mov                 ecx, dword ptr [edi + 0x50]
            //   4403c8               | dec                 eax
            //   8bc2                 | test                ecx, ecx

        $sequence_8 = { 4c8bda 4c8d0401 4c3bc1 4983d300 4c895def 4d8d143b 4c8b5d77 }
            // n = 7, score = 200
            //   4c8bda               | xor                 edx, ebp
            //   4c8d0401             | inc                 ecx
            //   4c3bc1               | ror                 eax, 2
            //   4983d300             | inc                 esp
            //   4c895def             | add                 edx, eax
            //   4d8d143b             | add                 ebp, 0x5a827999
            //   4c8b5d77             | inc                 ebp

        $sequence_9 = { 4883c0f8 4883f81f 0f87b1000000 e8???????? 90 488b542468 4883fa10 }
            // n = 7, score = 200
            //   4883c0f8             | adc                 edi, 0
            //   4883f81f             | dec                 esp
            //   0f87b1000000         | add                 esp, dword ptr [ebp - 0x41]
            //   e8????????           |                     
            //   90                   | dec                 ebx
            //   488b542468           | lea                 esi, [esp + esi]
            //   4883fa10             | dec                 esp

    condition:
        7 of them and filesize < 1163264
}