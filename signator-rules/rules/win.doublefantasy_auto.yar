rule win_doublefantasy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.doublefantasy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.doublefantasy"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c1e202 0bd6 8a92908c2700 eb02 b23d 837c241002 885102 }
            // n = 7, score = 200
            //   c1e202               | shl                 edx, 2
            //   0bd6                 | or                  edx, esi
            //   8a92908c2700         | mov                 dl, byte ptr [edx + 0x278c90]
            //   eb02                 | jmp                 4
            //   b23d                 | mov                 dl, 0x3d
            //   837c241002           | cmp                 dword ptr [esp + 0x10], 2
            //   885102               | mov                 byte ptr [ecx + 2], dl

        $sequence_1 = { ff7514 8b4018 ff7510 8b08 ff750c 50 ff5114 }
            // n = 7, score = 200
            //   ff7514               | push                dword ptr [ebp + 0x14]
            //   8b4018               | mov                 eax, dword ptr [eax + 0x18]
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   50                   | push                eax
            //   ff5114               | call                dword ptr [ecx + 0x14]

        $sequence_2 = { ff75d4 ff75d0 ff75e0 ff75e4 ff7618 }
            // n = 5, score = 200
            //   ff75d4               | push                dword ptr [ebp - 0x2c]
            //   ff75d0               | push                dword ptr [ebp - 0x30]
            //   ff75e0               | push                dword ptr [ebp - 0x20]
            //   ff75e4               | push                dword ptr [ebp - 0x1c]
            //   ff7618               | push                dword ptr [esi + 0x18]

        $sequence_3 = { 57 57 ff15???????? 83c418 a3???????? eb14 ffd3 }
            // n = 7, score = 200
            //   57                   | push                edi
            //   57                   | push                edi
            //   ff15????????         |                     
            //   83c418               | add                 esp, 0x18
            //   a3????????           |                     
            //   eb14                 | jmp                 0x16
            //   ffd3                 | call                ebx

        $sequence_4 = { ffd6 8bd8 895dc0 57 }
            // n = 4, score = 200
            //   ffd6                 | call                esi
            //   8bd8                 | mov                 ebx, eax
            //   895dc0               | mov                 dword ptr [ebp - 0x40], ebx
            //   57                   | push                edi

        $sequence_5 = { 8b75d4 56 e8???????? 53 68???????? }
            // n = 5, score = 200
            //   8b75d4               | mov                 esi, dword ptr [ebp - 0x2c]
            //   56                   | push                esi
            //   e8????????           |                     
            //   53                   | push                ebx
            //   68????????           |                     

        $sequence_6 = { 83f909 0f82f9fcffff 8975d4 8b4605 8d5008 3bca 0f85e8fcffff }
            // n = 7, score = 200
            //   83f909               | cmp                 ecx, 9
            //   0f82f9fcffff         | jb                  0xfffffcff
            //   8975d4               | mov                 dword ptr [ebp - 0x2c], esi
            //   8b4605               | mov                 eax, dword ptr [esi + 5]
            //   8d5008               | lea                 edx, [eax + 8]
            //   3bca                 | cmp                 ecx, edx
            //   0f85e8fcffff         | jne                 0xfffffcee

        $sequence_7 = { c1ee04 83e203 c1e204 0bd6 837c241001 8a92908c2700 885101 }
            // n = 7, score = 200
            //   c1ee04               | shr                 esi, 4
            //   83e203               | and                 edx, 3
            //   c1e204               | shl                 edx, 4
            //   0bd6                 | or                  edx, esi
            //   837c241001           | cmp                 dword ptr [esp + 0x10], 1
            //   8a92908c2700         | mov                 dl, byte ptr [edx + 0x278c90]
            //   885101               | mov                 byte ptr [ecx + 1], dl

        $sequence_8 = { c3 64a118000000 8b4030 8b480c 8b442404 }
            // n = 5, score = 200
            //   c3                   | ret                 
            //   64a118000000         | mov                 eax, dword ptr fs:[0x18]
            //   8b4030               | mov                 eax, dword ptr [eax + 0x30]
            //   8b480c               | mov                 ecx, dword ptr [eax + 0xc]
            //   8b442404             | mov                 eax, dword ptr [esp + 4]

        $sequence_9 = { 0fb64002 83e03f 8a80908c2700 eb02 }
            // n = 4, score = 200
            //   0fb64002             | movzx               eax, byte ptr [eax + 2]
            //   83e03f               | and                 eax, 0x3f
            //   8a80908c2700         | mov                 al, byte ptr [eax + 0x278c90]
            //   eb02                 | jmp                 4

        $sequence_10 = { 0fb6c0 8a80ad8c2700 eb02 32c0 84c0 7410 33d2 }
            // n = 7, score = 200
            //   0fb6c0               | movzx               eax, al
            //   8a80ad8c2700         | mov                 al, byte ptr [eax + 0x278cad]
            //   eb02                 | jmp                 4
            //   32c0                 | xor                 al, al
            //   84c0                 | test                al, al
            //   7410                 | je                  0x12
            //   33d2                 | xor                 edx, edx

        $sequence_11 = { 3c2b 720f 3c7a 770b 0fb6c0 8a80ad8c2700 eb02 }
            // n = 7, score = 200
            //   3c2b                 | cmp                 al, 0x2b
            //   720f                 | jb                  0x11
            //   3c7a                 | cmp                 al, 0x7a
            //   770b                 | ja                  0xd
            //   0fb6c0               | movzx               eax, al
            //   8a80ad8c2700         | mov                 al, byte ptr [eax + 0x278cad]
            //   eb02                 | jmp                 4

        $sequence_12 = { 33db 895dd8 895ddc 895de4 c745e005400080 895dd4 }
            // n = 6, score = 200
            //   33db                 | xor                 ebx, ebx
            //   895dd8               | mov                 dword ptr [ebp - 0x28], ebx
            //   895ddc               | mov                 dword ptr [ebp - 0x24], ebx
            //   895de4               | mov                 dword ptr [ebp - 0x1c], ebx
            //   c745e005400080       | mov                 dword ptr [ebp - 0x20], 0x80004005
            //   895dd4               | mov                 dword ptr [ebp - 0x2c], ebx

        $sequence_13 = { 8a92908c2700 885101 7e1c 0fb67002 33d2 8a5001 }
            // n = 6, score = 200
            //   8a92908c2700         | mov                 dl, byte ptr [edx + 0x278c90]
            //   885101               | mov                 byte ptr [ecx + 1], dl
            //   7e1c                 | jle                 0x1e
            //   0fb67002             | movzx               esi, byte ptr [eax + 2]
            //   33d2                 | xor                 edx, edx
            //   8a5001               | mov                 dl, byte ptr [eax + 1]

        $sequence_14 = { 891485a4ab2700 40 3bc1 72f1 833d????????fd }
            // n = 5, score = 200
            //   891485a4ab2700       | mov                 dword ptr [eax*4 + 0x27aba4], edx
            //   40                   | inc                 eax
            //   3bc1                 | cmp                 eax, ecx
            //   72f1                 | jb                  0xfffffff3
            //   833d????????fd       |                     

        $sequence_15 = { 0fb608 c1e902 8a91908c2700 8b4c2408 8811 }
            // n = 5, score = 200
            //   0fb608               | movzx               ecx, byte ptr [eax]
            //   c1e902               | shr                 ecx, 2
            //   8a91908c2700         | mov                 dl, byte ptr [ecx + 0x278c90]
            //   8b4c2408             | mov                 ecx, dword ptr [esp + 8]
            //   8811                 | mov                 byte ptr [ecx], dl

    condition:
        7 of them and filesize < 172032
}