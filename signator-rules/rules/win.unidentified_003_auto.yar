rule win_unidentified_003_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.unidentified_003."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_003"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 68???????? ff15???????? 6a5a 59 33d2 f7f1 }
            // n = 6, score = 100
            //   68????????           |                     
            //   ff15????????         |                     
            //   6a5a                 | push                0x5a
            //   59                   | pop                 ecx
            //   33d2                 | xor                 edx, edx
            //   f7f1                 | div                 ecx

        $sequence_1 = { 0f88d9010000 6a04 56 6a01 8d45d4 50 56 }
            // n = 7, score = 100
            //   0f88d9010000         | js                  0x1df
            //   6a04                 | push                4
            //   56                   | push                esi
            //   6a01                 | push                1
            //   8d45d4               | lea                 eax, [ebp - 0x2c]
            //   50                   | push                eax
            //   56                   | push                esi

        $sequence_2 = { 53 33db 56 8b35???????? 57 68???????? 895dfc }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   33db                 | xor                 ebx, ebx
            //   56                   | push                esi
            //   8b35????????         |                     
            //   57                   | push                edi
            //   68????????           |                     
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx

        $sequence_3 = { 754d 8b5c2410 8a03 3c31 7507 e8???????? eb3c }
            // n = 7, score = 100
            //   754d                 | jne                 0x4f
            //   8b5c2410             | mov                 ebx, dword ptr [esp + 0x10]
            //   8a03                 | mov                 al, byte ptr [ebx]
            //   3c31                 | cmp                 al, 0x31
            //   7507                 | jne                 9
            //   e8????????           |                     
            //   eb3c                 | jmp                 0x3e

        $sequence_4 = { c7400810400040 eb14 817d0c07010000 7512 8b451c }
            // n = 5, score = 100
            //   c7400810400040       | mov                 dword ptr [eax + 8], 0x40004010
            //   eb14                 | jmp                 0x16
            //   817d0c07010000       | cmp                 dword ptr [ebp + 0xc], 0x107
            //   7512                 | jne                 0x14
            //   8b451c               | mov                 eax, dword ptr [ebp + 0x1c]

        $sequence_5 = { 8975f8 ff15???????? 85c0 0f88a7010000 ff75e8 ff75f4 ff75f8 }
            // n = 7, score = 100
            //   8975f8               | mov                 dword ptr [ebp - 8], esi
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f88a7010000         | js                  0x1ad
            //   ff75e8               | push                dword ptr [ebp - 0x18]
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   ff75f8               | push                dword ptr [ebp - 8]

        $sequence_6 = { 8b0d???????? 56 53 8db40f04010000 e8???????? 33c0 }
            // n = 6, score = 100
            //   8b0d????????         |                     
            //   56                   | push                esi
            //   53                   | push                ebx
            //   8db40f04010000       | lea                 esi, [edi + ecx + 0x104]
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax

        $sequence_7 = { e8???????? eb03 895e0c 8b45f8 5f 5e 5b }
            // n = 7, score = 100
            //   e8????????           |                     
            //   eb03                 | jmp                 5
            //   895e0c               | mov                 dword ptr [esi + 0xc], ebx
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_8 = { 6a7d 59 668908 c745f426000000 33c0 8a883e120900 888c0509fcffff }
            // n = 7, score = 100
            //   6a7d                 | push                0x7d
            //   59                   | pop                 ecx
            //   668908               | mov                 word ptr [eax], cx
            //   c745f426000000       | mov                 dword ptr [ebp - 0xc], 0x26
            //   33c0                 | xor                 eax, eax
            //   8a883e120900         | mov                 cl, byte ptr [eax + 0x9123e]
            //   888c0509fcffff       | mov                 byte ptr [ebp + eax - 0x3f7], cl

        $sequence_9 = { 8d45fc 50 6aff ff75dc 8975d8 8975fc }
            // n = 6, score = 100
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   6aff                 | push                -1
            //   ff75dc               | push                dword ptr [ebp - 0x24]
            //   8975d8               | mov                 dword ptr [ebp - 0x28], esi
            //   8975fc               | mov                 dword ptr [ebp - 4], esi

    condition:
        7 of them and filesize < 57344
}