rule win_brbbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.brbbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.brbbot"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0f8ea9000000 0fb7d8 81cb00000780 e9???????? 4533c9 }
            // n = 5, score = 100
            //   0f8ea9000000         | dec                 eax
            //   0fb7d8               | sar                 eax, 5
            //   81cb00000780         | and                 ecx, 0x1f
            //   e9????????           |                     
            //   4533c9               | dec                 esp

        $sequence_1 = { 488bc8 4c8bc7 ff15???????? 488bd8 4885c0 750a bf0e000780 }
            // n = 7, score = 100
            //   488bc8               | mov                 ecx, ebx
            //   4c8bc7               | dec                 eax
            //   ff15????????         |                     
            //   488bd8               | lea                 edx, [0x45de]
            //   4885c0               | dec                 eax
            //   750a                 | mov                 ecx, eax
            //   bf0e000780           | dec                 eax

        $sequence_2 = { 458d60f8 4488443039 4180fd01 752e 4b8b84f9c05a0100 }
            // n = 5, score = 100
            //   458d60f8             | dec                 esp
            //   4488443039           | lea                 eax, [0xea54]
            //   4180fd01             | test                eax, eax
            //   752e                 | js                  0x1f7e
            //   4b8b84f9c05a0100     | dec                 esp

        $sequence_3 = { 488b75b8 448b6530 8bd8 85c0 0f8809040000 4c8d4dc0 }
            // n = 6, score = 100
            //   488b75b8             | dec                 eax
            //   448b6530             | lea                 edx, [0xddc1]
            //   8bd8                 | dec                 eax
            //   85c0                 | mov                 ecx, ebx
            //   0f8809040000         | movzx               edx, byte ptr [esp + 0x120]
            //   4c8d4dc0             | dec                 esp

        $sequence_4 = { 4881f904010000 0f8724010000 4883c9ff 498bff }
            // n = 4, score = 100
            //   4881f904010000       | dec                 eax
            //   0f8724010000         | not                 ecx
            //   4883c9ff             | inc                 ecx
            //   498bff               | mov                 dword ptr [edi], 2

        $sequence_5 = { 4c8d842428010000 488d15e1dc0000 488bcb e8???????? 0fb6942428010000 }
            // n = 5, score = 100
            //   4c8d842428010000     | je                  0x47a
            //   488d15e1dc0000       | dec                 ebx
            //   488bcb               | mov                 eax, dword ptr [ecx + edi*8 + 0x15ac0]
            //   e8????????           |                     
            //   0fb6942428010000     | mov                 cl, byte ptr [eax + esi + 0x39]

        $sequence_6 = { 743d 488bf8 666666660f1f840000000000 4c8d842420010000 488d15c1dd0000 }
            // n = 5, score = 100
            //   743d                 | mov                 dword ptr [ebp + 0x80], eax
            //   488bf8               | xor                 esi, esi
            //   666666660f1f840000000000     | dec    eax
            //   4c8d842420010000     | sub                 esp, 0xa0
            //   488d15c1dd0000       | dec                 eax

        $sequence_7 = { ff15???????? 85c0 751b ff15???????? 85c0 0f8e2f010000 }
            // n = 6, score = 100
            //   ff15????????         |                     
            //   85c0                 | xor                 ecx, ecx
            //   751b                 | dec                 eax
            //   ff15????????         |                     
            //   85c0                 | mov                 dword ptr [esp + 0x30], ebx
            //   0f8e2f010000         | dec                 eax

        $sequence_8 = { 33d2 41b803010000 c68424f001000000 e8???????? 488d8c24e1000000 33d2 }
            // n = 6, score = 100
            //   33d2                 | lea                 edx, [0xddc1]
            //   41b803010000         | dec                 eax
            //   c68424f001000000     | mov                 ecx, ebx
            //   e8????????           |                     
            //   488d8c24e1000000     | movzx               edx, byte ptr [esp + 0x120]
            //   33d2                 | dec                 eax

        $sequence_9 = { 488bfb 4803ff 4c8d2d35850000 49837cfd0000 7404 }
            // n = 5, score = 100
            //   488bfb               | mov                 edx, esp
            //   4803ff               | dec                 eax
            //   4c8d2d35850000       | mov                 ecx, esi
            //   49837cfd0000         | js                  0x676
            //   7404                 | mov                 eax, ebx

    condition:
        7 of them and filesize < 198656
}