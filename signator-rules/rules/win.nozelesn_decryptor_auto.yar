rule win_nozelesn_decryptor_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.nozelesn_decryptor."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nozelesn_decryptor"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 84c0 74b7 8b5da0 8b4580 80bc0564ffffff20 0f85c1f7ffff }
            // n = 7, score = 100
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   74b7                 | je                  0xffffffb9
            //   8b5da0               | mov                 ebx, dword ptr [ebp - 0x60]
            //   8b4580               | mov                 eax, dword ptr [ebp - 0x80]
            //   80bc0564ffffff20     | cmp                 byte ptr [ebp + eax - 0x9c], 0x20
            //   0f85c1f7ffff         | jne                 0xfffff7c7

        $sequence_1 = { 33d9 8b4dec 50 6a13 c1cb0a 5a }
            // n = 6, score = 100
            //   33d9                 | xor                 ebx, ecx
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   50                   | push                eax
            //   6a13                 | push                0x13
            //   c1cb0a               | ror                 ebx, 0xa
            //   5a                   | pop                 edx

        $sequence_2 = { 68???????? 6a00 ffd6 6a00 ff35???????? 68ec030000 57 }
            // n = 7, score = 100
            //   68????????           |                     
            //   6a00                 | push                0
            //   ffd6                 | call                esi
            //   6a00                 | push                0
            //   ff35????????         |                     
            //   68ec030000           | push                0x3ec
            //   57                   | push                edi

        $sequence_3 = { c7857cffffff00000000 c70000000000 68???????? 50 e8???????? }
            // n = 5, score = 100
            //   c7857cffffff00000000     | mov    dword ptr [ebp - 0x84], 0
            //   c70000000000         | mov                 dword ptr [eax], 0
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_4 = { 56 56 56 56 e8???????? 8d4900 d86b44 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   56                   | push                esi
            //   56                   | push                esi
            //   56                   | push                esi
            //   e8????????           |                     
            //   8d4900               | lea                 ecx, [ecx]
            //   d86b44               | fsubr               dword ptr [ebx + 0x44]

        $sequence_5 = { 8b0cc5747a4600 894de4 85c9 7455 8b4510 8945e8 }
            // n = 6, score = 100
            //   8b0cc5747a4600       | mov                 ecx, dword ptr [eax*8 + 0x467a74]
            //   894de4               | mov                 dword ptr [ebp - 0x1c], ecx
            //   85c9                 | test                ecx, ecx
            //   7455                 | je                  0x57
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax

        $sequence_6 = { 33df 8bc8 5a 899888000000 e8???????? 8b5df0 83c440 }
            // n = 7, score = 100
            //   33df                 | xor                 ebx, edi
            //   8bc8                 | mov                 ecx, eax
            //   5a                   | pop                 edx
            //   899888000000         | mov                 dword ptr [eax + 0x88], ebx
            //   e8????????           |                     
            //   8b5df0               | mov                 ebx, dword ptr [ebp - 0x10]
            //   83c440               | add                 esp, 0x40

        $sequence_7 = { 64a300000000 8bd9 895db8 33c0 c7431000000000 }
            // n = 5, score = 100
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8bd9                 | mov                 ebx, ecx
            //   895db8               | mov                 dword ptr [ebp - 0x48], ebx
            //   33c0                 | xor                 eax, eax
            //   c7431000000000       | mov                 dword ptr [ebx + 0x10], 0

        $sequence_8 = { 8bcb 334df0 33fe 334dec 8bf7 0b75f0 8bd6 }
            // n = 7, score = 100
            //   8bcb                 | mov                 ecx, ebx
            //   334df0               | xor                 ecx, dword ptr [ebp - 0x10]
            //   33fe                 | xor                 edi, esi
            //   334dec               | xor                 ecx, dword ptr [ebp - 0x14]
            //   8bf7                 | mov                 esi, edi
            //   0b75f0               | or                  esi, dword ptr [ebp - 0x10]
            //   8bd6                 | mov                 edx, esi

        $sequence_9 = { 83f809 0f8799000000 ff2485af0d4400 ff7510 ff750c e8???????? 59 }
            // n = 7, score = 100
            //   83f809               | cmp                 eax, 9
            //   0f8799000000         | ja                  0x9f
            //   ff2485af0d4400       | jmp                 dword ptr [eax*4 + 0x440daf]
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   e8????????           |                     
            //   59                   | pop                 ecx

    condition:
        7 of them and filesize < 1122304
}