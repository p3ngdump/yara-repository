rule win_urlzone_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.urlzone."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.urlzone"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { b119 b20d b005 e8???????? }
            // n = 4, score = 3000
            //   b119                 | mov                 cl, 0x19
            //   b20d                 | mov                 dl, 0xd
            //   b005                 | mov                 al, 5
            //   e8????????           |                     

        $sequence_1 = { 80fc39 7f05 80ec30 eb22 }
            // n = 4, score = 3000
            //   80fc39               | cmp                 ah, 0x39
            //   7f05                 | jg                  7
            //   80ec30               | sub                 ah, 0x30
            //   eb22                 | jmp                 0x24

        $sequence_2 = { 80fc30 7c63 80fc39 7f05 }
            // n = 4, score = 3000
            //   80fc30               | cmp                 ah, 0x30
            //   7c63                 | jl                  0x65
            //   80fc39               | cmp                 ah, 0x39
            //   7f05                 | jg                  7

        $sequence_3 = { 7c63 80fc39 7f05 80ec30 eb22 }
            // n = 5, score = 3000
            //   7c63                 | jl                  0x65
            //   80fc39               | cmp                 ah, 0x39
            //   7f05                 | jg                  7
            //   80ec30               | sub                 ah, 0x30
            //   eb22                 | jmp                 0x24

        $sequence_4 = { 7503 8a0a 42 80e930 80f909 }
            // n = 5, score = 3000
            //   7503                 | jne                 5
            //   8a0a                 | mov                 cl, byte ptr [edx]
            //   42                   | inc                 edx
            //   80e930               | sub                 cl, 0x30
            //   80f909               | cmp                 cl, 9

        $sequence_5 = { 7c23 80f846 7f08 80e841 80c00a eb10 }
            // n = 6, score = 3000
            //   7c23                 | jl                  0x25
            //   80f846               | cmp                 al, 0x46
            //   7f08                 | jg                  0xa
            //   80e841               | sub                 al, 0x41
            //   80c00a               | add                 al, 0xa
            //   eb10                 | jmp                 0x12

        $sequence_6 = { 80f866 7f0c 80e861 80c00a c0e004 08e0 c3 }
            // n = 7, score = 3000
            //   80f866               | cmp                 al, 0x66
            //   7f0c                 | jg                  0xe
            //   80e861               | sub                 al, 0x61
            //   80c00a               | add                 al, 0xa
            //   c0e004               | shl                 al, 4
            //   08e0                 | or                  al, ah
            //   c3                   | ret                 

        $sequence_7 = { 11e0 31c8 034424f8 d1d0 31c8 }
            // n = 5, score = 3000
            //   11e0                 | adc                 eax, esp
            //   31c8                 | xor                 eax, ecx
            //   034424f8             | add                 eax, dword ptr [esp - 8]
            //   d1d0                 | rcl                 eax, 1
            //   31c8                 | xor                 eax, ecx

        $sequence_8 = { 50 68???????? 6a00 6a00 a1???????? 50 }
            // n = 6, score = 3000
            //   50                   | push                eax
            //   68????????           |                     
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   a1????????           |                     
            //   50                   | push                eax

        $sequence_9 = { 80f841 7c23 80f846 7f08 }
            // n = 4, score = 3000
            //   80f841               | cmp                 al, 0x41
            //   7c23                 | jl                  0x25
            //   80f846               | cmp                 al, 0x46
            //   7f08                 | jg                  0xa

    condition:
        7 of them and filesize < 704512
}