rule win_multigrain_pos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.multigrain_pos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.multigrain_pos"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c78538ffffff0f000000 c78534ffffff00000000 c68524ffffff00 c645fc1a 83bd68ffffff10 720e ffb554ffffff }
            // n = 7, score = 200
            //   c78538ffffff0f000000     | mov    dword ptr [ebp - 0xc8], 0xf
            //   c78534ffffff00000000     | mov    dword ptr [ebp - 0xcc], 0
            //   c68524ffffff00       | mov                 byte ptr [ebp - 0xdc], 0
            //   c645fc1a             | mov                 byte ptr [ebp - 4], 0x1a
            //   83bd68ffffff10       | cmp                 dword ptr [ebp - 0x98], 0x10
            //   720e                 | jb                  0x10
            //   ffb554ffffff         | push                dword ptr [ebp - 0xac]

        $sequence_1 = { 6800040000 8d870c040000 50 ffd3 8db724040000 c745fc00000000 6a08 }
            // n = 7, score = 200
            //   6800040000           | push                0x400
            //   8d870c040000         | lea                 eax, [edi + 0x40c]
            //   50                   | push                eax
            //   ffd3                 | call                ebx
            //   8db724040000         | lea                 esi, [edi + 0x424]
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   6a08                 | push                8

        $sequence_2 = { ffb50cffffff e8???????? 83c404 c78520ffffff0f000000 }
            // n = 4, score = 200
            //   ffb50cffffff         | push                dword ptr [ebp - 0xf4]
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   c78520ffffff0f000000     | mov    dword ptr [ebp - 0xe0], 0xf

        $sequence_3 = { 8d4dd8 c645fc03 e8???????? 83c408 837dbc08 720b ff75a8 }
            // n = 7, score = 200
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   c645fc03             | mov                 byte ptr [ebp - 4], 3
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   837dbc08             | cmp                 dword ptr [ebp - 0x44], 8
            //   720b                 | jb                  0xd
            //   ff75a8               | push                dword ptr [ebp - 0x58]

        $sequence_4 = { 8d7714 85c0 7435 51 8d55d4 8d4dbc e8???????? }
            // n = 7, score = 200
            //   8d7714               | lea                 esi, [edi + 0x14]
            //   85c0                 | test                eax, eax
            //   7435                 | je                  0x37
            //   51                   | push                ecx
            //   8d55d4               | lea                 edx, [ebp - 0x2c]
            //   8d4dbc               | lea                 ecx, [ebp - 0x44]
            //   e8????????           |                     

        $sequence_5 = { 8bd0 8d4dd8 c645fc03 e8???????? }
            // n = 4, score = 200
            //   8bd0                 | mov                 edx, eax
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   c645fc03             | mov                 byte ptr [ebp - 4], 3
            //   e8????????           |                     

        $sequence_6 = { 8bce c60600 e8???????? 57 ff15???????? 5f 8bc6 }
            // n = 7, score = 200
            //   8bce                 | mov                 ecx, esi
            //   c60600               | mov                 byte ptr [esi], 0
            //   e8????????           |                     
            //   57                   | push                edi
            //   ff15????????         |                     
            //   5f                   | pop                 edi
            //   8bc6                 | mov                 eax, esi

        $sequence_7 = { ffd3 33db 395f10 56 0f94c3 ff15???????? 85db }
            // n = 7, score = 200
            //   ffd3                 | call                ebx
            //   33db                 | xor                 ebx, ebx
            //   395f10               | cmp                 dword ptr [edi + 0x10], ebx
            //   56                   | push                esi
            //   0f94c3               | sete                bl
            //   ff15????????         |                     
            //   85db                 | test                ebx, ebx

        $sequence_8 = { 8d4614 50 ffd3 8db750040000 8975ec }
            // n = 5, score = 200
            //   8d4614               | lea                 eax, [esi + 0x14]
            //   50                   | push                eax
            //   ffd3                 | call                ebx
            //   8db750040000         | lea                 esi, [edi + 0x450]
            //   8975ec               | mov                 dword ptr [ebp - 0x14], esi

        $sequence_9 = { c745f400000000 8b4df0 8b5df8 0fb609 83e101 }
            // n = 5, score = 200
            //   c745f400000000       | mov                 dword ptr [ebp - 0xc], 0
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   8b5df8               | mov                 ebx, dword ptr [ebp - 8]
            //   0fb609               | movzx               ecx, byte ptr [ecx]
            //   83e101               | and                 ecx, 1

    condition:
        7 of them and filesize < 286720
}