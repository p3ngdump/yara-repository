rule win_mirai_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.mirai."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mirai"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb32 3bc7 7339 80f9a1 7234 80f9fe 772f }
            // n = 7, score = 100
            //   eb32                 | jmp                 0x34
            //   3bc7                 | cmp                 eax, edi
            //   7339                 | jae                 0x3b
            //   80f9a1               | cmp                 cl, 0xa1
            //   7234                 | jb                  0x36
            //   80f9fe               | cmp                 cl, 0xfe
            //   772f                 | ja                  0x31

        $sequence_1 = { ff75f4 ff15???????? ffb5ecfbffff ff15???????? ff75f8 ff15???????? 32c0 }
            // n = 7, score = 100
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   ff15????????         |                     
            //   ffb5ecfbffff         | push                dword ptr [ebp - 0x414]
            //   ff15????????         |                     
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   ff15????????         |                     
            //   32c0                 | xor                 al, al

        $sequence_2 = { ffd0 8bc6 5e c20c00 8b542414 8b4904 8b01 }
            // n = 7, score = 100
            //   ffd0                 | call                eax
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi
            //   c20c00               | ret                 0xc
            //   8b542414             | mov                 edx, dword ptr [esp + 0x14]
            //   8b4904               | mov                 ecx, dword ptr [ecx + 4]
            //   8b01                 | mov                 eax, dword ptr [ecx]

        $sequence_3 = { e8???????? c645fc45 6a01 8d8598f8ffff 50 8b8d6cf7ffff e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c645fc45             | mov                 byte ptr [ebp - 4], 0x45
            //   6a01                 | push                1
            //   8d8598f8ffff         | lea                 eax, [ebp - 0x768]
            //   50                   | push                eax
            //   8b8d6cf7ffff         | mov                 ecx, dword ptr [ebp - 0x894]
            //   e8????????           |                     

        $sequence_4 = { ff7508 8d45ac 50 8b8da0dfffff e8???????? 834dfcff 8d4dd4 }
            // n = 7, score = 100
            //   ff7508               | push                dword ptr [ebp + 8]
            //   8d45ac               | lea                 eax, [ebp - 0x54]
            //   50                   | push                eax
            //   8b8da0dfffff         | mov                 ecx, dword ptr [ebp - 0x2060]
            //   e8????????           |                     
            //   834dfcff             | or                  dword ptr [ebp - 4], 0xffffffff
            //   8d4dd4               | lea                 ecx, [ebp - 0x2c]

        $sequence_5 = { eb23 6a5d ff7508 8b4df4 e8???????? 85c0 750f }
            // n = 7, score = 100
            //   eb23                 | jmp                 0x25
            //   6a5d                 | push                0x5d
            //   ff7508               | push                dword ptr [ebp + 8]
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   750f                 | jne                 0x11

        $sequence_6 = { ff7508 e8???????? 59 ff30 e8???????? 59 8b4d08 }
            // n = 7, score = 100
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   ff30                 | push                dword ptr [eax]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

        $sequence_7 = { 8bcf e8???????? 8d54240c 52 8d442418 50 e8???????? }
            // n = 7, score = 100
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   8d54240c             | lea                 edx, [esp + 0xc]
            //   52                   | push                edx
            //   8d442418             | lea                 eax, [esp + 0x18]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_8 = { e8???????? 89458c eb04 83658c00 8b458c 8945b8 834dfcff }
            // n = 7, score = 100
            //   e8????????           |                     
            //   89458c               | mov                 dword ptr [ebp - 0x74], eax
            //   eb04                 | jmp                 6
            //   83658c00             | and                 dword ptr [ebp - 0x74], 0
            //   8b458c               | mov                 eax, dword ptr [ebp - 0x74]
            //   8945b8               | mov                 dword ptr [ebp - 0x48], eax
            //   834dfcff             | or                  dword ptr [ebp - 4], 0xffffffff

        $sequence_9 = { ffd1 83c404 80be8403000000 7409 56 e8???????? 83c404 }
            // n = 7, score = 100
            //   ffd1                 | call                ecx
            //   83c404               | add                 esp, 4
            //   80be8403000000       | cmp                 byte ptr [esi + 0x384], 0
            //   7409                 | je                  0xb
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

    condition:
        7 of them and filesize < 7086080
}