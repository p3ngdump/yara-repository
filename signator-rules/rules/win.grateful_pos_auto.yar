rule win_grateful_pos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.grateful_pos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.grateful_pos"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83f801 7510 e8???????? e8???????? }
            // n = 4, score = 600
            //   83f801               | cmp                 eax, 1
            //   7510                 | jne                 0x12
            //   e8????????           |                     
            //   e8????????           |                     

        $sequence_1 = { eb1a b8fdffffff eb13 b8fcffffff eb0c }
            // n = 5, score = 600
            //   eb1a                 | jmp                 0x1c
            //   b8fdffffff           | mov                 eax, 0xfffffffd
            //   eb13                 | jmp                 0x15
            //   b8fcffffff           | mov                 eax, 0xfffffffc
            //   eb0c                 | jmp                 0xe

        $sequence_2 = { 7411 e8???????? e8???????? 33c0 e9???????? }
            // n = 5, score = 600
            //   7411                 | je                  0x13
            //   e8????????           |                     
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     

        $sequence_3 = { e8???????? 99 b980ee3600 f7f9 }
            // n = 4, score = 600
            //   e8????????           |                     
            //   99                   | cdq                 
            //   b980ee3600           | mov                 ecx, 0x36ee80
            //   f7f9                 | idiv                ecx

        $sequence_4 = { 7407 b8f6ffffff eb02 33c0 }
            // n = 4, score = 600
            //   7407                 | je                  9
            //   b8f6ffffff           | mov                 eax, 0xfffffff6
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax

        $sequence_5 = { eb07 b8fcffffff eb02 33c0 }
            // n = 4, score = 600
            //   eb07                 | jmp                 9
            //   b8fcffffff           | mov                 eax, 0xfffffffc
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax

        $sequence_6 = { e8???????? 83c40c 8d8d5cf9ffff 51 68de000000 8b9568f9ffff 52 }
            // n = 7, score = 500
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8d8d5cf9ffff         | lea                 ecx, [ebp - 0x6a4]
            //   51                   | push                ecx
            //   68de000000           | push                0xde
            //   8b9568f9ffff         | mov                 edx, dword ptr [ebp - 0x698]
            //   52                   | push                edx

        $sequence_7 = { 0fb68415fefffdff 83f87b 7d53 8b8df8fffdff 0fb6940dfbfffdff }
            // n = 5, score = 500
            //   0fb68415fefffdff     | movzx               eax, byte ptr [ebp + edx - 0x20002]
            //   83f87b               | cmp                 eax, 0x7b
            //   7d53                 | jge                 0x55
            //   8b8df8fffdff         | mov                 ecx, dword ptr [ebp - 0x20008]
            //   0fb6940dfbfffdff     | movzx               edx, byte ptr [ebp + ecx - 0x20005]

        $sequence_8 = { 0fb65508 0fb64d0c d3fa 8855ff 0fb64508 0fb64d0c }
            // n = 6, score = 500
            //   0fb65508             | movzx               edx, byte ptr [ebp + 8]
            //   0fb64d0c             | movzx               ecx, byte ptr [ebp + 0xc]
            //   d3fa                 | sar                 edx, cl
            //   8855ff               | mov                 byte ptr [ebp - 1], dl
            //   0fb64508             | movzx               eax, byte ptr [ebp + 8]
            //   0fb64d0c             | movzx               ecx, byte ptr [ebp + 0xc]

        $sequence_9 = { 7c6d 8b8df8fffdff 0fb6940dfbfffdff 83fa3a 7d5a }
            // n = 5, score = 500
            //   7c6d                 | jl                  0x6f
            //   8b8df8fffdff         | mov                 ecx, dword ptr [ebp - 0x20008]
            //   0fb6940dfbfffdff     | movzx               edx, byte ptr [ebp + ecx - 0x20005]
            //   83fa3a               | cmp                 edx, 0x3a
            //   7d5a                 | jge                 0x5c

        $sequence_10 = { 52 e8???????? 83c404 8b85f8fbffff e9???????? }
            // n = 5, score = 500
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b85f8fbffff         | mov                 eax, dword ptr [ebp - 0x408]
            //   e9????????           |                     

        $sequence_11 = { 83fa3a 7d4f 8b85f8fffdff 0fb68c05fbfffdff 85c9 753d }
            // n = 6, score = 500
            //   83fa3a               | cmp                 edx, 0x3a
            //   7d4f                 | jge                 0x51
            //   8b85f8fffdff         | mov                 eax, dword ptr [ebp - 0x20008]
            //   0fb68c05fbfffdff     | movzx               ecx, byte ptr [ebp + eax - 0x20005]
            //   85c9                 | test                ecx, ecx
            //   753d                 | jne                 0x3f

        $sequence_12 = { 85c0 741d 6a03 68???????? 8b85e0fbffff }
            // n = 5, score = 500
            //   85c0                 | test                eax, eax
            //   741d                 | je                  0x1f
            //   6a03                 | push                3
            //   68????????           |                     
            //   8b85e0fbffff         | mov                 eax, dword ptr [ebp - 0x420]

        $sequence_13 = { 8b4508 0345fc 8810 ebdb }
            // n = 4, score = 500
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   0345fc               | add                 eax, dword ptr [ebp - 4]
            //   8810                 | mov                 byte ptr [eax], dl
            //   ebdb                 | jmp                 0xffffffdd

        $sequence_14 = { 48894530 eb00 488d057ec1feff 4883c420 }
            // n = 4, score = 200
            //   48894530             | dec                 eax
            //   eb00                 | mov                 dword ptr [ebp + 0x30], eax
            //   488d057ec1feff       | jmp                 2
            //   4883c420             | dec                 eax

        $sequence_15 = { 488d0d10d80100 0fbe0401 83f04d 888424f1000000 b801000000 486bc042 }
            // n = 6, score = 200
            //   488d0d10d80100       | lea                 eax, [0xfffec17e]
            //   0fbe0401             | dec                 eax
            //   83f04d               | add                 esp, 0x20
            //   888424f1000000       | dec                 eax
            //   b801000000           | lea                 ecx, [0x1d810]
            //   486bc042             | movsx               eax, byte ptr [ecx + eax]

    condition:
        7 of them and filesize < 3964928
}