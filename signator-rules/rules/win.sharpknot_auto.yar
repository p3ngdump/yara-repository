rule win_sharpknot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.sharpknot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.sharpknot"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5f 33c0 5b c3 803f00 7505 }
            // n = 6, score = 100
            //   5f                   | pop                 edi
            //   33c0                 | xor                 eax, eax
            //   5b                   | pop                 ebx
            //   c3                   | ret                 
            //   803f00               | cmp                 byte ptr [edi], 0
            //   7505                 | jne                 7

        $sequence_1 = { 8d1440 c1e203 52 e8???????? 83c404 }
            // n = 5, score = 100
            //   8d1440               | lea                 edx, [eax + eax*2]
            //   c1e203               | shl                 edx, 3
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_2 = { 51 6802000080 ff15???????? 5f 5e 85c0 7406 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   6802000080           | push                0x80000002
            //   ff15????????         |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   85c0                 | test                eax, eax
            //   7406                 | je                  8

        $sequence_3 = { b82d000000 51 51 50 56 }
            // n = 5, score = 100
            //   b82d000000           | mov                 eax, 0x2d
            //   51                   | push                ecx
            //   51                   | push                ecx
            //   50                   | push                eax
            //   56                   | push                esi

        $sequence_4 = { e8???????? 8b0cf564dd4000 5e 8908 c3 81f9bc000000 7215 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b0cf564dd4000       | mov                 ecx, dword ptr [esi*8 + 0x40dd64]
            //   5e                   | pop                 esi
            //   8908                 | mov                 dword ptr [eax], ecx
            //   c3                   | ret                 
            //   81f9bc000000         | cmp                 ecx, 0xbc
            //   7215                 | jb                  0x17

        $sequence_5 = { 2beb 8bc1 8bf7 8bfa 53 c1e902 f3a5 }
            // n = 7, score = 100
            //   2beb                 | sub                 ebp, ebx
            //   8bc1                 | mov                 eax, ecx
            //   8bf7                 | mov                 esi, edi
            //   8bfa                 | mov                 edi, edx
            //   53                   | push                ebx
            //   c1e902               | shr                 ecx, 2
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]

        $sequence_6 = { 85ff 7444 8b442424 53 56 6a24 50 }
            // n = 7, score = 100
            //   85ff                 | test                edi, edi
            //   7444                 | je                  0x46
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]
            //   53                   | push                ebx
            //   56                   | push                esi
            //   6a24                 | push                0x24
            //   50                   | push                eax

        $sequence_7 = { e8???????? 83c404 8bf0 8b4304 8bcb }
            // n = 5, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8bf0                 | mov                 esi, eax
            //   8b4304               | mov                 eax, dword ptr [ebx + 4]
            //   8bcb                 | mov                 ecx, ebx

        $sequence_8 = { 66ab 33c9 aa 51 b82d000000 51 }
            // n = 6, score = 100
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   33c9                 | xor                 ecx, ecx
            //   aa                   | stosb               byte ptr es:[edi], al
            //   51                   | push                ecx
            //   b82d000000           | mov                 eax, 0x2d
            //   51                   | push                ecx

        $sequence_9 = { 7410 8d442410 6a00 50 57 68???????? 56 }
            // n = 7, score = 100
            //   7410                 | je                  0x12
            //   8d442410             | lea                 eax, [esp + 0x10]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   57                   | push                edi
            //   68????????           |                     
            //   56                   | push                esi

    condition:
        7 of them and filesize < 1032192
}