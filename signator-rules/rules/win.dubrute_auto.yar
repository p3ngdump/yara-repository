rule win_dubrute_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.dubrute."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.dubrute"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff551c 83c40c 85c0 0f8caf000000 ff7520 ff75f8 ff75fc }
            // n = 7, score = 100
            //   ff551c               | call                dword ptr [ebp + 0x1c]
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   0f8caf000000         | jl                  0xb5
            //   ff7520               | push                dword ptr [ebp + 0x20]
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   ff75fc               | push                dword ptr [ebp - 4]

        $sequence_1 = { 8d45d4 6a20 50 ff15???????? 83c410 8945f4 }
            // n = 6, score = 100
            //   8d45d4               | lea                 eax, [ebp - 0x2c]
            //   6a20                 | push                0x20
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83c410               | add                 esp, 0x10
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax

        $sequence_2 = { 47 8a1c19 32d8 881c31 8b5df8 41 47 }
            // n = 7, score = 100
            //   47                   | inc                 edi
            //   8a1c19               | mov                 bl, byte ptr [ecx + ebx]
            //   32d8                 | xor                 bl, al
            //   881c31               | mov                 byte ptr [ecx + esi], bl
            //   8b5df8               | mov                 ebx, dword ptr [ebp - 8]
            //   41                   | inc                 ecx
            //   47                   | inc                 edi

        $sequence_3 = { 59 8d75f4 59 eb0f 8b4604 897dfc 0145f4 }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   8d75f4               | lea                 esi, [ebp - 0xc]
            //   59                   | pop                 ecx
            //   eb0f                 | jmp                 0x11
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   897dfc               | mov                 dword ptr [ebp - 4], edi
            //   0145f4               | add                 dword ptr [ebp - 0xc], eax

        $sequence_4 = { 83c00c 50 56 e8???????? 8d4514 6a04 50 }
            // n = 7, score = 100
            //   83c00c               | add                 eax, 0xc
            //   50                   | push                eax
            //   56                   | push                esi
            //   e8????????           |                     
            //   8d4514               | lea                 eax, [ebp + 0x14]
            //   6a04                 | push                4
            //   50                   | push                eax

        $sequence_5 = { 8d4dd0 c645fc10 ff15???????? 8b8b8c000000 56 ffd7 c645fc0a }
            // n = 7, score = 100
            //   8d4dd0               | lea                 ecx, [ebp - 0x30]
            //   c645fc10             | mov                 byte ptr [ebp - 4], 0x10
            //   ff15????????         |                     
            //   8b8b8c000000         | mov                 ecx, dword ptr [ebx + 0x8c]
            //   56                   | push                esi
            //   ffd7                 | call                edi
            //   c645fc0a             | mov                 byte ptr [ebp - 4], 0xa

        $sequence_6 = { 7e4f 3945ec 7e4a 8b45e4 99 f77df0 8bf8 }
            // n = 7, score = 100
            //   7e4f                 | jle                 0x51
            //   3945ec               | cmp                 dword ptr [ebp - 0x14], eax
            //   7e4a                 | jle                 0x4c
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]
            //   99                   | cdq                 
            //   f77df0               | idiv                dword ptr [ebp - 0x10]
            //   8bf8                 | mov                 edi, eax

        $sequence_7 = { 8b460c 8bcf 3bf8 7202 8bc8 3bca 7229 }
            // n = 7, score = 100
            //   8b460c               | mov                 eax, dword ptr [esi + 0xc]
            //   8bcf                 | mov                 ecx, edi
            //   3bf8                 | cmp                 edi, eax
            //   7202                 | jb                  4
            //   8bc8                 | mov                 ecx, eax
            //   3bca                 | cmp                 ecx, edx
            //   7229                 | jb                  0x2b

        $sequence_8 = { ff750c ff15???????? 83f8ff 8945d4 0f84e4000000 6a00 6a01 }
            // n = 7, score = 100
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff15????????         |                     
            //   83f8ff               | cmp                 eax, -1
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax
            //   0f84e4000000         | je                  0xea
            //   6a00                 | push                0
            //   6a01                 | push                1

        $sequence_9 = { ffd3 83c40c 8b8edc000000 8b3d???????? 50 c745fc01000000 ffd7 }
            // n = 7, score = 100
            //   ffd3                 | call                ebx
            //   83c40c               | add                 esp, 0xc
            //   8b8edc000000         | mov                 ecx, dword ptr [esi + 0xdc]
            //   8b3d????????         |                     
            //   50                   | push                eax
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1
            //   ffd7                 | call                edi

    condition:
        7 of them and filesize < 598016
}