rule win_crylocker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.crylocker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.crylocker"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0f85ae000000 8b7c2414 57 6a01 }
            // n = 4, score = 100
            //   0f85ae000000         | jne                 0xb4
            //   8b7c2414             | mov                 edi, dword ptr [esp + 0x14]
            //   57                   | push                edi
            //   6a01                 | push                1

        $sequence_1 = { 52 8d442440 50 51 57 }
            // n = 5, score = 100
            //   52                   | push                edx
            //   8d442440             | lea                 eax, [esp + 0x40]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   57                   | push                edi

        $sequence_2 = { 83c424 3dc8000000 7528 8d542428 6a00 52 e8???????? }
            // n = 7, score = 100
            //   83c424               | add                 esp, 0x24
            //   3dc8000000           | cmp                 eax, 0xc8
            //   7528                 | jne                 0x2a
            //   8d542428             | lea                 edx, [esp + 0x28]
            //   6a00                 | push                0
            //   52                   | push                edx
            //   e8????????           |                     

        $sequence_3 = { 5b b8f8ffffff 5d 83c410 c3 8b07 }
            // n = 6, score = 100
            //   5b                   | pop                 ebx
            //   b8f8ffffff           | mov                 eax, 0xfffffff8
            //   5d                   | pop                 ebp
            //   83c410               | add                 esp, 0x10
            //   c3                   | ret                 
            //   8b07                 | mov                 eax, dword ptr [edi]

        $sequence_4 = { 7434 837d0400 740e 68???????? }
            // n = 4, score = 100
            //   7434                 | je                  0x36
            //   837d0400             | cmp                 dword ptr [ebp + 4], 0
            //   740e                 | je                  0x10
            //   68????????           |                     

        $sequence_5 = { 6a00 6a16 56 ffd5 85c0 7426 }
            // n = 6, score = 100
            //   6a00                 | push                0
            //   6a16                 | push                0x16
            //   56                   | push                esi
            //   ffd5                 | call                ebp
            //   85c0                 | test                eax, eax
            //   7426                 | je                  0x28

        $sequence_6 = { 8b442430 68???????? 68???????? 50 }
            // n = 4, score = 100
            //   8b442430             | mov                 eax, dword ptr [esp + 0x30]
            //   68????????           |                     
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_7 = { 3bc6 7302 8bf0 85f6 7434 837d0400 740e }
            // n = 7, score = 100
            //   3bc6                 | cmp                 eax, esi
            //   7302                 | jae                 4
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   7434                 | je                  0x36
            //   837d0400             | cmp                 dword ptr [ebp + 4], 0
            //   740e                 | je                  0x10

        $sequence_8 = { 6a00 51 ff15???????? 8d542418 6a03 }
            // n = 5, score = 100
            //   6a00                 | push                0
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   8d542418             | lea                 edx, [esp + 0x18]
            //   6a03                 | push                3

        $sequence_9 = { eb03 016830 8b5610 8b1d???????? 83c210 52 ffd3 }
            // n = 7, score = 100
            //   eb03                 | jmp                 5
            //   016830               | add                 dword ptr [eax + 0x30], ebp
            //   8b5610               | mov                 edx, dword ptr [esi + 0x10]
            //   8b1d????????         |                     
            //   83c210               | add                 edx, 0x10
            //   52                   | push                edx
            //   ffd3                 | call                ebx

    condition:
        7 of them and filesize < 139264
}