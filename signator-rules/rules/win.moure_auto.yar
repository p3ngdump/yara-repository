rule win_moure_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-05-16"
        version = "1"
        description = "Detects win.moure."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.moure"
        malpedia_rule_date = "20220513"
        malpedia_hash = "7f4b2229e6ae614d86d74917f6d5b41890e62a26"
        malpedia_version = "20220516"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a02 68b9704000 56 00d7 83c40c 85c0 7511 }
            // n = 7, score = 100
            //   6a02                 | push                2
            //   68b9704000           | push                0x4070b9
            //   56                   | push                esi
            //   00d7                 | add                 bh, dl
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   7511                 | jne                 0x13

        $sequence_1 = { 8d4418e9 03c5 58 c1ea10 03da 57 68f00a4000 }
            // n = 7, score = 100
            //   8d4418e9             | lea                 eax, [eax + ebx - 0x17]
            //   03c5                 | add                 eax, ebp
            //   58                   | pop                 eax
            //   c1ea10               | shr                 edx, 0x10
            //   03da                 | add                 ebx, edx
            //   57                   | push                edi
            //   68f00a4000           | push                0x400af0

        $sequence_2 = { 8b5304 33c0 6a0a 59 8bfa f3ab 8b4514 }
            // n = 7, score = 100
            //   8b5304               | mov                 edx, dword ptr [ebx + 4]
            //   33c0                 | xor                 eax, eax
            //   6a0a                 | push                0xa
            //   59                   | pop                 ecx
            //   8bfa                 | mov                 edi, edx
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]

        $sequence_3 = { 0f84c3000000 51 68987b4000 e8???????? 62b16100bbb0 }
            // n = 5, score = 100
            //   0f84c3000000         | je                  0xc9
            //   51                   | push                ecx
            //   68987b4000           | push                0x407b98
            //   e8????????           |                     
            //   62b16100bbb0         | bound               esi, qword ptr [ecx - 0x4f44ff9f]

        $sequence_4 = { ff7590 ff7594 50 6850674000 e8???????? }
            // n = 5, score = 100
            //   ff7590               | push                dword ptr [ebp - 0x70]
            //   ff7594               | push                dword ptr [ebp - 0x6c]
            //   50                   | push                eax
            //   6850674000           | push                0x406750
            //   e8????????           |                     

        $sequence_5 = { 53 55 e8???????? 009878cccccc 00a9a4c16a00 5b }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   55                   | push                ebp
            //   e8????????           |                     
            //   009878cccccc         | add                 byte ptr [eax - 0x33333388], bl
            //   00a9a4c16a00         | add                 byte ptr [ecx + 0x6ac1a4], ch
            //   5b                   | pop                 ebx

        $sequence_6 = { 50 e8???????? 33c0 eb08 56 8bcf }
            // n = 6, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax
            //   eb08                 | jmp                 0xa
            //   56                   | push                esi
            //   8bcf                 | mov                 ecx, edi

        $sequence_7 = { 2be1 59 83f800 0f8494000000 83fa00 0f848b000000 51 }
            // n = 7, score = 100
            //   2be1                 | sub                 esp, ecx
            //   59                   | pop                 ecx
            //   83f800               | cmp                 eax, 0
            //   0f8494000000         | je                  0x9a
            //   83fa00               | cmp                 edx, 0
            //   0f848b000000         | je                  0x91
            //   51                   | push                ecx

        $sequence_8 = { 282c5d40002834 5d 40 0013 bf55782640 00c3 7d64 }
            // n = 7, score = 100
            //   282c5d40002834       | sub                 byte ptr [ebx*2 + 0x34280040], ch
            //   5d                   | pop                 ebp
            //   40                   | inc                 eax
            //   0013                 | add                 byte ptr [ebx], dl
            //   bf55782640           | mov                 edi, 0x40267855
            //   00c3                 | add                 bl, al
            //   7d64                 | jge                 0x66

        $sequence_9 = { 007014 007010 e8???????? 837df000 0f8c64010000 6a03 58 }
            // n = 7, score = 100
            //   007014               | add                 byte ptr [eax + 0x14], dh
            //   007010               | add                 byte ptr [eax + 0x10], dh
            //   e8????????           |                     
            //   837df000             | cmp                 dword ptr [ebp - 0x10], 0
            //   0f8c64010000         | jl                  0x16a
            //   6a03                 | push                3
            //   58                   | pop                 eax

    condition:
        7 of them and filesize < 188416
}